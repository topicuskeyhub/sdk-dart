{
  "nl": {
    "topicus": {
      "keyhub": {
        "web": {
          "pages": {
            "deployment": {
              "replication": {
                "ReplicationWizardStep1SetupLinkPage$LinkConfiguration#ipAddress": {
                  "label": "IP address",
                  "description": "The current IP address of the VM. The final IP address can be set in the next step."
                },
                "ReplicationWizardStep1SetupLinkPage$LinkConfiguration#password": {
                  "label": "Password",
                  "description": "The current, 6-digit password."
                }
              }
            },
            "AboutPage$AboutBean#reportIssue": {
              "label": "Report issue"
            },
            "systems": {
              "ProvisioningSelfServiceOptions#EXISTING_GROUPS": "Choose existing groups",
              "ProvisioningSelfServiceOptions#SERVICE_ACCOUNTS": "Request new service accounts",
              "ProvisioningGroupAddPage$ProvisioningGroupAddBean#owner": {
                "description": "Managers from the selected group control access to this group on the linked system.",
                "label": "Group with ownership"
              },
              "ProvisioningGroupAddPage$ProvisioningGroupAddBean#groupOnSystem": {
                "label": "Group on system"
              },
              "ProvisioningGroupAddPage$ProvisioningGroupAddBean#newGroupOnSystem": {
                "label": "New group on system",
                "description": "Tip: KeyHub will automatically complete the name to a valid name in the linked system"
              },
              "ProvisioningGroupAddPage$ProvisioningGroupAddBean#reason": {
                "label": "Reason",
                "description": "This group on {0} is owned by {1}. Give a reason to give the chosen group access to this group on {0}"
              },
              "ProvisioningGroupAddPage$ProvisioningGroupAddBean#accessProfile": {
                "label": "Access profile"
              },
              "ProvisioningGroupAddPage$ProvisioningGroupAddBean#activationRequired": {
                "label": "Activation required",
                "description": "Use dynamic account provisioning for this group."
              },
              "ProvisioningGroupAddPage$ProvisioningGroupAddBean#group": {
                "label": "Group in KeyHub"
              },
              "ProvisioningSelfServiceOptions#NEW_NAMESPACES": "Request new namespaces",
              "ProvisioningGroupAddPage$ProvisioningGroupAddBean#newGroupOnSystemType": {
                "label": "Type of the new group"
              },
              "ProvisioningGroupAddPage$ProvisioningGroupAddBean#system": {
                "label": "Linked system"
              },
              "ProvisioningSelfServiceOptions#NEW_GROUPS": "Request new groups"
            },
            "AboutPage$AboutBean#version": {
              "label": "Version"
            },
            "VerifyUserCodePage$DeviceVerifyInfo#usercode": {
              "label": "User code"
            },
            "VerifyUserCodePage$DeviceVerifyInfo#client": {
              "label": "Application"
            }
          },
          "components": {
            "contextpanel": {
              "GroupAccountEditPanel$AccountEditBean#comment": {
                "label": "Reason",
                "description": "Changes to membership of this group must be authorised by {0}. Provide a reason for the proposed change."
              },
              "AssignUnallocatedDiskSpacePanel$SpaceAllocationBean#remaining": {
                "label": "MiBs remaining"
              },
              "AssignUnallocatedDiskSpacePanel$SpaceAllocationBean#docker": {
                "label": "/var/lib/docker in MiB"
              },
              "ExportAuditorGroupsPanel$ExportTypeBean#type": {
                "label": "Type"
              },
              "RestoreBackupPanel$BackupSettings#DO_NOT_RESTORE": "Restore only the database",
              "ApplicationOrSystemAddToAccessProfilePanel$TypeBean#type": {
                "label": "Type"
              },
              "UploadBackupPanel$UploadBackupBean#backupFile": {
                "placeholder": "Select a Topicus KeyHub .tar file",
                "label": "Backup file"
              },
              "GroupAccountEditPanel$AccountEditBean#rights": {
                "label": "Privileges"
              },
              "RestoreBackupPanel$RestoreBackupBean#keyHubVersion": {
                "description": "The version of Topicus KeyHub used to create the backup.",
                "label": "Topicus KeyHub version"
              },
              "RestoreBackupPanel$RestoreBackupBean#settings": {
                "description": "Choose if the configuration of the appliance must be restored or not.",
                "label": "Appliance configuration"
              },
              "AccessProfileAccountEditPanel$AccountEditBean#manual": {
                "label": "Forced membership",
                "description": "No business rules apply to this membership."
              },
              "GroupAccountEditPanel$AccountEditBean#account": {
                "label": "Account"
              },
              "UploadHotfixPanel$UploadHotfixBean#hotfixFile": {
                "placeholder": "Select a hotfix file",
                "label": "Hotfix file"
              },
              "ApplicationOrSystemAddToGroupPanel$GroupOnSystemType#GROUP_ON_SYSTEM": "Group on system",
              "ExportAuditorGroupsPanel$AuditorExportType#GROUPACCOUNTS": "Group memberships",
              "ApplicationOrSystemAddToGroupPanel$WebhookType#WEBHOOK": "Webhook",
              "AccessProfileAccountEditPanel$AccountEditBean#account": {
                "label": "Account"
              },
              "ApplicationOrSystemAddToAccessProfilePanel$AccessType#GROUP_ON_SYSTEM": "Group on system",
              "RestoreBackupPanel$RestoreBackupBean#size": {
                "label": "File size"
              },
              "ExportAuditorServiceAccountsPanel$AuditorExportType#SERVICEACCOUNTS_GROUPS": "Groups on system",
              "ApplicationOrSystemAddToGroupPanel$ServiceAccountType#SERVICE_ACCOUNT": "Service account",
              "GroupAccountEditPanel$AccountEditBean#endDate": {
                "label": "End date for membership"
              },
              "AccountDirectoryAddPanel$DirectoryTypeBean#type": {
                "label": "Type"
              },
              "RestoreBackupPanel$RestoreBackupBean#restoreKey": {
                "label": "Backup decryption key",
                "placeholder": "Backup decryption key"
              },
              "GroupAccountEditPanel$AccountEditBean#activation": {
                "label": "Activation"
              },
              "OrganizationalUnitAccountPanel$AccountEditBean#account": {
                "label": "Account"
              },
              "UploadUpdatePanel$UploadUpdateBean#updateFile": {
                "placeholder": "Select a Topicus KeyHub update file",
                "label": "Update file"
              },
              "ApplicationOrSystemAddToGroupPanel$TypeBean#type": {
                "label": "Type"
              },
              "ExportAuditorGroupsPanel$AuditorExportType#GROUPS": "Groups",
              "CreateSupportDumpPanel$NewSupportDump#name": {
                "label": "Name",
                "description": "Give the support dump a name."
              },
              "RestoreBackupPanel$RestoreBackupBean#name": {
                "label": "Backup file"
              },
              "CreateSupportDumpPanel$NewSupportDump#date": {
                "description": "The date for which the logs should be collected.",
                "label": "Date"
              },
              "OrganizationalUnitClientApplicationPanel$ClientApplicationEditBean#client": {
                "label": "Application"
              },
              "RestoreBackupPanel$BackupSettings#NOT_AVAILABLE": "Backup only contains the database",
              "AssignUnallocatedDiskSpacePanel$SpaceAllocationBean#reserved": {
                "label": "Reserved in MiB"
              },
              "OSUpgradeConfirmPanel$ConfirmBean#snapshotCreated": {
                "description": "I understand the risks and have created a snapshot.",
                "label": "Snapshot created"
              },
              "AssignUnallocatedDiskSpacePanel$SpaceAllocationBean#root": {
                "label": "/ (root) in MiB"
              },
              "CreateSupportDumpPanel$NewSupportDump#encrypted": {
                "description": "Encrypt the support dump so that it can be sent easily.",
                "label": "Encrypted"
              },
              "RestoreBackupPanel$RestoreBackupBean#createdAt": {
                "label": "Backup date"
              },
              "GroupOAuth2ClientPermissionsPanel$PermissionsForClientBean#permissions": {
                "label": "Granted permissions"
              },
              "ApplicationOrSystemAddToAccessProfilePanel$AccessType#APPLICATION": "SSO application",
              "RestoreBackupPanel$BackupSettings#RESTORE": "Restore appliance configuration and database",
              "ExportAuditorServiceAccountsPanel$AuditorExportType#SERVICEACCOUNTS": "Service accounts",
              "AssignUnallocatedDiskSpacePanel$SpaceAllocationBean#log": {
                "label": "/var/log in MiB"
              },
              "GroupOAuth2ClientPermissionsPanel$PermissionsForClientBean#application": {
                "label": "Application"
              },
              "ExportAuditorServiceAccountsPanel$ExportTypeBean#type": {
                "label": "Type"
              }
            },
            "settings": {
              "beans": {
                "ChangeNetworkBean#machineFqdn": {
                  "label": "FQDN"
                },
                "ChangeKeyHubUserBean#newPasswordCheck": {
                  "label": "Repeat new password"
                },
                "ChangeApplicationBean$ReleaseChannel#DEVELOPMENT": "development - The latest development build.",
                "ChangeBackupBean#passwordSuggestion": {
                  "label": "Password suggestion"
                },
                "ChangeApplicationBean$ReleaseChannel#NIGHTLY": "nightly - The current nightly build.",
                "ChangeBackupBean#currentPassword": {
                  "label": "Current password"
                },
                "ChangeKeyHubUserBean#passwordSuggestion": {
                  "label": "Password suggestion"
                },
                "ChangeApplicationBean$ReleaseChannel#STABLE": "stable - The latest stable version.",
                "ChangeBackupBean#newPasswordCheck": {
                  "label": "Repeat password"
                },
                "ChangeKeyHubUserBean#currentPassword": {
                  "label": "Current password"
                },
                "ChangeApplicationBean$ReleaseChannel#ACCEPTANCE": "acceptance - The version currently being tested for acceptance."
              }
            },
            "panel": {
              "AbstractConfirmationPanel$Confirmation#removeFromSystem": {
                "description": "Also remove the group from the system",
                "label": "Remove from system"
              },
              "SecretPromptPanel$SecretPromptBean#secretLost": {
                "description": "When the secret is lost, the vault can be reset with this option. WARNING! All records in the vault will be lost.",
                "label": "Secret is lost"
              },
              "AbstractConfirmationPanel$Confirmation#deprovisionAction": {
                "description": "Specify which actions should be performed upon deactivation.",
                "label": "Action on deactivation"
              },
              "vault": {
                "VaultRecordFilterBarPanel$VaultRecordOrdering#VAULT": "Sort on vault",
                "VaultRecordFilterBarPanel$VaultRecordOrdering#NAME": "Sort on name"
              },
              "AbstractConfirmationPanel$Confirmation#comment": {
                "label": "Reason"
              },
              "SecretPromptPanel$SecretPromptBean#secret": {
                "label": "Secret"
              }
            },
            "formcomponent": {
              "PrivateKeyAndCertificateEditPanel$KeyStoreType#PKCS12": "PKCS#12 (.pfx or .p12)",
              "PrivateKeyAndCertificateEditPanel$KeyStoreType#PEM": "PEM (in separate files)"
            }
          }
        },
        "servicecontract": {
          "model": {
            "profile": {
              "AccessProfile#activateRuleScript": {
                "label": "Rule for activation",
                "description": "A script to determine whether the accounts within the linked systems should be active. Please refer to the manual for further explanation."
              },
              "AccessProfile#owner": {
                "description": "Managers from the selected group are responsible for this access profile.",
                "label": "Group with ownership",
                "placeholder": "Select a group..."
              },
              "AccessProfile#directory": {
                "label": "Linked directory",
                "description": "The directory for which this access profile can manage account attributes."
              },
              "AccessProfileClient#accessProfile": {
                "label": "Access profile"
              },
              "AccessProfileAccountActivation#ACTIVE": "Active (business rules apply)",
              "AccessProfileAccountActivation#INACTIVE": "Inactive (business rules apply)",
              "AccessProfile#matchRuleScript": {
                "description": "A script to determine whether an account should be automatically added to the access profile. Please refer to the manual for further explanation.",
                "label": "Rule for automatic assignment"
              },
              "AccessProfilePrimer#name": {
                "label": "Name"
              },
              "AccessProfileAccountActivation#FORCE_INACTIVE": "Inactive (manually overridden)",
              "AccessProfile#description": {
                "label": "Description"
              },
              "AccessProfilePrimer#uuid": {
                "label": "UUID"
              },
              "AccessProfileAccountActivation#FORCE_ACTIVE": "Active (manually overridden)"
            },
            "audit": {
              "AuditAccountAction#CHANGE_TO_MANAGER": "Give management privileges",
              "AuditRecordType#TRANSFER_ACCESS_PROFILE_OWNERSHIP_DECLINED": "Transfer ownership of access profile - Declined",
              "AuditRecordType#TRANSFER_GROUP_ON_SYSTEM_OWNERSHIP_REQUESTED": "Transfer ownership of group on system - Requested",
              "AuditRecordType#SERVICE_ACCOUNT_MODIFIED": "Service account - Modified",
              "AuditRecordType#IDENTITY_SOURCE_MODIFIED": "Identity source - Modified",
              "AuditRecordType#ACCOUNT_REREGISTERED": "Account - Re-registered",
              "AuditRecordType#TRANSFER_SERVICE_ACCOUNT_ADMINISTRATION_ACCEPTED": "Transfer ownership of service account - Approved",
              "AuditRecordType#ENABLE_TECHNICAL_ADMINISTRATION_REQUESTED": "Enable technical administration - Requested",
              "AuditRecordType#TRANSFER_PROVISIONED_SYSTEM_ADMINISTRATION_DECLINED": "Transfer administration of linked system - Declined",
              "AuditRecordType#ACCOUNT_GROUP_ACTIVATED": "Account - Group activated",
              "AuditRecordType#CLIENT_ADDED_TO_ORGANIZATIONAL_UNIT": "Application - Added to an organisational unit",
              "AuditRecordType#CREATE_PROVISIONED_NAMESPACE_DECLINED": "Create namespace - Declined",
              "AuditRecordType#JOIN_GROUP_REQUESTED": "Join group - Requested",
              "AuditRecordType#CLIENT_REMOVED_FROM_GROUP": "Application - Removed from group",
              "AuditRecordType#SETUP_NESTED_GROUP_CONNECT_REQUESTED": "Link nested group - Requested",
              "AuditRecordType#GROUP_ON_SYSTEM_REMOVED": "Group on system - Removed",
              "AuditRecordType#GROUP_CLASSIFICATION_ASSIGNED": "Group classification - Assigned",
              "AuditRecordType#CLIENT_ADDED_TO_ACCESS_PROFILE": "Application - Added to access profile",
              "AuditRecordType#ACCOUNT_TOKEN_SIGNED": "Account - Token signed",
              "AuditRecordType#SETUP_AUTHORIZING_GROUP_DISCONNECT_REQUESTED": "Remove authorisation - Requested",
              "AuditRecordType#GROUP_MOVED": "Group - Moved",
              "AuditRecordType#GRANT_APPLICATION_ACCEPTED": "Grant access to application - Approved",
              "AuditRecordType#UPDATE_LICENSE_DECLINED": "Update the license - Declined",
              "AuditRecordType#ADD_GROUP_TO_ACCESS_PROFILE_ACCEPTED": "Add group to access profile - Approved",
              "AuditRecordType#DISABLE_2FA_ACCEPTED": "Disable 2FA - Approved",
              "AuditAccountAction": {
                "executed#CHANGE_TO_MANAGER": "Granted management privileges",
                "executed#REMOVE": "Removed from group",
                "executed#CONNECT_NESTED": "Converted to nested",
                "executed#CHANGE_TO_NORMAL": "Revoked management privileges",
                "executed#APPROVE": "Approved"
              },
              "AuditRecordType#LINK_DIRECTORY_TO_ACCESS_PROFILE_DECLINED": "Link directory to access profile - Declined",
              "AuditRecordType#EXTENDED_ACCESS_DECLINED": "Extended access - Declined",
              "AuditRecordType#GROUP_CREATED": "Group - Created",
              "AuditRecordType#REMOVE_ACCESS_PROFILE_REQUESTED": "Remove access profile - Requested",
              "AuditRecordType#ACCESS_PROFILE_REMOVED": "Access profile - Removed",
              "AuditRecordType#ACCOUNT_PROVISIONING_MOVED": "Account - Moved within linked system",
              "AuditRecordType#GROUP_CLASSIFICATION_MODIFIED": "Group classification - Modified",
              "AuditRecordType#WEBHOOK_MODIFIED": "Webhook - Modified",
              "AuditRecordType#ACCOUNT_REMOVED": "Account - Removed",
              "AuditRecordType#CLIENT_MODIFIED": "Application - Modified",
              "AuditRecordType#ADD_GROUP_TO_ACCESS_PROFILE_DECLINED": "Add group to access profile - Declined",
              "AuditRecordType#IDENTITY_SOURCE_REMOVED": "Identity source - Removed",
              "AuditRecordType#PROVISIONED_SYSTEM_UNKNOWN_ACCOUNT_DESTROYED": "Linked system - Unknown account removed",
              "AuditNestedGroupAction#MISMATCH": "Not identical",
              "AuditRecordType#REMOVE_ACCESS_PROFILE_DECLINED": "Remove access profile - Declined",
              "AuditRecordType#GROUP_MODIFIED": "Group - Modified",
              "AuditRecordType#SETUP_AUTHORIZING_GROUP_CONNECT_ACCEPTED": "Setup authorisation - Approved",
              "AuditRecordType#INTERNAL_ACCOUNT_ACTIVATED": "Internal account - Activated",
              "AuditRecordType#INTERNAL_ACCOUNT_MODIFIED": "Internal account - Modified",
              "AuditNestedGroupAction": {
                "executed#EXCLUDE": "Excluded",
                "executed#INCLUDE": "Included",
                "executed#MISMATCH": "Not identical"
              },
              "AuditRecordType#TRANSFER_APPLICATION_OWNERSHIP_REQUESTED": "Transfer ownership of application - Requested",
              "AuditRecordType#TRANSFER_ACCESS_PROFILE_OWNERSHIP_REQUESTED": "Transfer ownership of access profile - Requested",
              "AuditRecordType#SERVICE_ACCOUNT_GROUP_DEPROVISIONED": "Service account - Group disabled on linked system",
              "AuditRecordType#GROUP_ADDED_TO_ACCESS_PROFILE": "Group - Added access profile",
              "AuditRecordType#ACCOUNT_PROVISIONING_SETUP": "Account - Setup on linked system",
              "AuditRecordType#CLIENT_REMOVED": "Application - Removed",
              "AuditRecordType#JOIN_VAULT_DECLINED": "Join vault - Declined",
              "AuditRecordType#MOVE_GROUPS_REQUESTED": "Move groups - Requested",
              "GroupAudit#createdAt": {
                "label": {
                  "started": "Started on",
                  "main": "Audited on"
                }
              },
              "AuditRecordType#ACCOUNT_REMOVED_FROM_ORGANIZATIONAL_UNIT": "Account - Removed from an organisational unit",
              "AuditRecordType#GRANT_SERVICE_ACCOUNT_GROUP_ACCEPTED": "Grant service account access to group on linked system - Approved",
              "AuditRecordType#SETUP_AUTHORIZING_GROUP_CONNECT_DECLINED": "Setup authorisation - Declined",
              "AuditRecordType#SERVICE_ACCOUNT_PASSWORD_ROTATED": "Service account - Password rotated",
              "AuditRecordType#CLIENT_REMOVED_FROM_ORGANIZATIONAL_UNIT": "Application - Removed from an organisational unit",
              "AuditRecordType#INVALID_SIGNATURE_DETECTED": "Invalid signature detected",
              "AuditRecordType#LINK_DIRECTORY_TO_ACCESS_PROFILE_ACCEPTED": "Link directory to access profile - Approved",
              "AuditRecordType#JOIN_VAULT_ACCEPTED": "Join vault - Approved",
              "AuditRecordType#ACCOUNT_LOGIN_FAILED": "Account - Failed login",
              "AuditRecordType#CREATE_PROVISIONED_NAMESPACE_REQUESTED": "Create namespace - Requested",
              "AuditRecordType#TRANSFER_SERVICE_ACCOUNT_ADMINISTRATION_REQUESTED": "Transfer ownership of service account - Requested",
              "AuditRecordType#DISABLE_2FA_DECLINED": "Disable 2FA - Declined",
              "AuditRecordType#GRANT_CLIENT_PERMISSION_REQUESTED": "Grant permission to application - Requested",
              "GroupAuditStatus#UNDER_REVIEW": "Under review",
              "AuditRecordType#ORGANIZATIONAL_UNIT_REMOVED": "Organisational unit - Removed",
              "AuditRecordType#ACCOUNT_CREATED": "Account - Created",
              "AuditRecordType#REMOVE_ACCESS_PROFILE_ACCEPTED": "Remove access profile - Approved",
              "AuditRecordType#DIRECTORY_CREATED": "Directory - Created",
              "AuditRecordType#WEBHOOK_REMOVED": "Webhook - Removed",
              "AuditRecordType#ACCOUNT_DEPROVISIONED": "Account - Disabled on linked system",
              "AuditRecordType#UPDATE_LICENSE_ACCEPTED": "Update the license - Approved",
              "AuditRecordType#VAULT_ACCESS_RESTORED": "Vault - Access restored",
              "AuditRecordType#ACCOUNT_ADDED_TO_ORGANIZATIONAL_UNIT": "Account - Added to an organisational unit",
              "AuditRecordType#PROVISIONED_SYSTEM_REMOVED": "Linked system - Removed",
              "AuditNestedGroupAction#EXCLUDE": "Exclude",
              "AuditRecordType#GRANT_APPLICATION_REQUESTED": "Grant access to application - Requested",
              "AuditRecordType#ACCOUNT_ACTIVATION_CODE_USED": "Account - Activation code used",
              "AuditRecordType#TRANSFER_PROVISIONED_SYSTEM_OWNERSHIP_DECLINED": "Transfer ownership of linked system - Declined",
              "AuditRecordType#ADD_GROUP_ADMIN_DECLINED": "Add group manager - Declined",
              "AuditRecordType#ORGANIZATIONAL_UNIT_MODIFIED": "Organisational unit - Modified",
              "AuditRecordType#CREATE_GROUP_DECLINED": "Create group - Declined",
              "AuditRecordType#DIRECTORY_HELPDESK_MODIFIED": "Help desk modified",
              "AuditRecordType#ADD_GROUP_TO_ACCESS_PROFILE_REQUESTED": "Add group to access profile - Requested",
              "GroupAudit#createdBy": {
                "label": {
                  "started": "Started by",
                  "main": "Auditor"
                }
              },
              "AuditRecordType#TRANSFER_PROVISIONED_SYSTEM_CONTENT_ADMINISTRATION_ACCEPTED": "Transfer content administration of linked system - Approved",
              "AuditRecordType#ACCOUNT_SSH_PUBLIC_KEY_MODIFIED": "Account - SSH public key set",
              "AuditRecordType#ACCOUNT_2FA_DISABLED": "Account - 2FA enabled",
              "AuditRecordType#CREATE_SERVICE_ACCOUNT_DECLINED": "Create service account - Declined",
              "AuditRecordType#VERIFY_INTERNAL_ACCOUNT_ACCEPTED": "Verify internal account - Approved",
              "AuditRecordType#GROUP_CLASSIFICATION_CREATED": "Group classification - Created",
              "AuditRecordType#CERTIFICATE_MODIFIED": "Certificate - Modified",
              "AuditRecordType#VAULT_RECORD_READ": "Vault - Record read",
              "AuditRecordType#UPDATE_GROUP_MEMBERSHIP_REQUESTED": "Update a group membership - Requested",
              "AuditRequiredSourceType#REQUESTED": "Requested",
              "AuditRecordType#TRANSFER_PROVISIONED_SYSTEM_OWNERSHIP_ACCEPTED": "Transfer ownership of linked system - Approved",
              "AuditRecordType#CREATE_GROUP_ON_SYSTEM_DECLINED": "Create group on system - Declined",
              "AuditRecordType#GRANT_GROUP_ON_SYSTEM_REQUEST_DECLINED": "Request access to group on linked system - Declined",
              "AuditRecordType#REMOVE_ORGANIZATIONAL_UNIT_REQUESTED": "Remove organisational unit - Requested",
              "AuditRecordType#CREATE_GROUP_ON_SYSTEM_REQUESTED": "Create group on System - Requested",
              "AuditNestedGroupAction#INCLUDE": "Include",
              "AuditRecordType#ACCOUNT_ACCESS_PROFILE_DEPROVISIONED": "Account - Access profile disabled on linked system",
              "AuditRecordType#GROUP_CLASSIFICATION_REMOVED": "Group classification - Removed",
              "AuditRecordType#DIRECTORY_REMOVED": "Directory - Removed",
              "AuditRecordType#WEBHOOK_CREATED": "Webhook - Created",
              "AuditRecordType#TRANSFER_PROVISIONED_SYSTEM_CONTENT_ADMINISTRATION_DECLINED": "Transfer content administration of linked system - Declined",
              "AuditRecordType#VAULT_EXPORTED": "Vault - Exported",
              "AuditRecordType#ACCOUNT_LOGIN": "Account - Login",
              "AuditRecordType#CREATE_GROUP_ON_SYSTEM_ACCEPTED": "Create group on system - Approved",
              "AuditRecordType#LINK_DIRECTORY_TO_ACCESS_PROFILE_REQUESTED": "Link directory to access profile - Requested",
              "AuditRecordType#INTERNAL_ACCOUNT_CREATED": "Internal account - Created",
              "AuditRecordType#ACCOUNT_PROVISIONED": "Account - Enabled on linked system",
              "AuditRecordType#VAULT_RECORD_MODIFIED": "Vault - Record modified",
              "AuditRecordType#VERIFY_INTERNAL_ACCOUNT_DECLINED": "Verify internal account - Declined",
              "GroupAudit#submittedBy": {
                "label": "Submitted by"
              },
              "AuditRecordType#ACCOUNT_REMOVED_FROM_ACCESS_PROFILE": "Account - Removed from an access profile",
              "AuditRecordType#GRANT_GROUP_ON_SYSTEM_REQUEST_ACCEPTED": "Request access to group on linked system - Approved",
              "AuditRecordType#GROUP_AUDIT_REQUESTED": "Group Audit - Requested",
              "AuditRecordType#ACCESS_PROFILE_MODIFIED": "Access profile - Modified",
              "AuditAccountAction#CONNECT_NESTED": "Convert to nested",
              "AuditRecordType#INTERNAL_ACCOUNT_REMOVED": "Internal account - Removed",
              "AuditRecordType#CREATE_GROUP_ACCEPTED": "Create group - Approved",
              "AuditRecordType#ACCOUNT_TOTP_OFFSET_CHANGED": "Account - TOTP offset changed",
              "AuditRecordType#CLIENT_CREATED": "Application - Created",
              "AuditRecordType#SETUP_NESTED_GROUP_DISCONNECT_DECLINED": "Unlink nested group - Declined",
              "AuditRecordType#JOIN_VAULT_REQUESTED": "Join vault - Requested",
              "AuditRecordType#ENABLE_TECHNICAL_ADMINISTRATION_ACCEPTED": "Enable technical administration - Approved",
              "AuditRecordType#VAULT_RECOVERED": "Vault - Recovered",
              "AuditRecordType#ACCOUNT_GROUP_PROVISIONED": "Account - Group enabled on linked system",
              "AuditRecordType#CLIENT_SECRET_ROTATED": "Application - Secret rotated",
              "AuditRecordType#RESET_PASSWORD_ACCEPTED": "Recover password - Approved",
              "AuditRecordType#DISABLE_2FA_REQUESTED": "Disable 2FA - Requested",
              "AuditRecordType#IDENTITY_SOURCE_CREATED": "Identity source - Created",
              "AuditRecordType#GRANT_GROUP_ON_SYSTEM_ACCEPTED": "Grant access to group on linked system - Approved",
              "AuditRecordType#CREATE_GROUP_REQUESTED": "Create group - Requested",
              "AuditRecordType#PROVISIONED_SYSTEM_ADDED_TO_ACCESS_PROFILE": "Linked system - Added access profile",
              "AuditRecordType#PROVISIONED_SYSTEM_REMOVED_FROM_ACCESS_PROFILE": "Linked system - Removed from access profile",
              "GroupAuditStatus#DRAFT": "Draft",
              "AuditRecordType#ACCOUNT_ENABLED": "Account - Enabled",
              "AuditRecordType#ADD_GROUP_ADMIN_REQUESTED": "Add group manager - Requested",
              "AuditRecordType#ORGANIZATIONAL_UNIT_CREATED": "Organisational unit - Created",
              "AuditRecordType#SERVICE_ACCOUNT_GROUP_PROVISIONED": "Service account - Group enabled on linked system",
              "AuditRecordType#PROVISIONED_SYSTEM_CREATED": "Linked system - Created",
              "AuditRecordType#REMOVE_ORGANIZATIONAL_UNIT_ACCEPTED": "Remove organisational unit - Approved",
              "AuditRecordType#PROVISIONED_SYSTEM_MODIFIED_FOR_GROUP": "Linked system - Modified group",
              "AuditRecordType#GROUP_NESTING_CONNECTED": "Group - Nested group linked",
              "AuditRecordType#JOIN_GROUP_DECLINED": "Join group - Declined",
              "AuditRecordType#REMOVE_PROVISIONED_SYSTEM_REQUESTED": "Remove linked system - Requested",
              "AuditRecordType#GRANT_SERVICE_ACCOUNT_GROUP_REQUESTED": "Grant service account access to group on linked system - Requested",
              "AuditRecordType#TRANSFER_APPLICATION_OWNERSHIP_ACCEPTED": "Transfer ownership of application - Approved",
              "AuditRecordType#REMOVE_GROUP_ACCEPTED": "Remove group - Approved",
              "AuditRecordType#JOIN_GROUP_ACCEPTED": "Join group - Approved",
              "AuditRecordType#ACCOUNT_ADDED_TO_ACCESS_PROFILE": "Account - Added to an access profile",
              "AuditRecordType#REMOVE_PROVISIONED_SYSTEM_DECLINED": "Remove linked system - Declined",
              "AuditRecordType#CREATE_SERVICE_ACCOUNT_ACCEPTED": "Create service account - Approved",
              "AuditRecordType#TRANSFER_GROUP_ON_SYSTEM_OWNERSHIP_ACCEPTED": "Transfer ownership of group on system - Approved",
              "AuditRecordType#MOVE_GROUPS_ACCEPTED": "Move groups - Approved",
              "AuditRecordType#GROUP_AUTHORIZATION_DISCONNECTED": "Group - Authorisation removed",
              "AuditRecordType#ACCOUNT_PROVISIONING_INITED": "Account - Added to linked system",
              "AuditRecordType#CREATE_SERVICE_ACCOUNT_REQUESTED": "Create service account - Requested",
              "AuditRecordType#LICENSE_KEY_UPLOADED": "License key uploaded",
              "AuditRecordType#GROUP_AUDIT_CREATED": "Group Audit - Created",
              "AuditRecordType#GRANT_ACCESS_REQUESTED": "Request access - Requested",
              "AuditRecordType#REVOKE_ADMIN_REQUESTED": "Remove KeyHub Administrator - Requested",
              "AuditRecordType#GROUP_ON_SYSTEM_PROVISIONED": "Group on system - Created on linked system",
              "AuditRecordType#TRANSFER_PROVISIONED_SYSTEM_ADMINISTRATION_REQUESTED": "Transfer administration of linked system - Requested",
              "AuditRecordType#RESET_PASSWORD_DECLINED": "Recover password - Declined",
              "AuditRecordType#SERVICE_ACCOUNT_PROVISIONING_DESTROYED": "Service account - Removed from linked system",
              "AuditRecordType#TRANSFER_APPLICATION_OWNERSHIP_DECLINED": "Transfer ownership of application - Declined",
              "AuditRecordType#REMOVE_GROUP_REQUESTED": "Remove group - Requested",
              "AuditRecordType#SERVICE_ACCOUNT_ADDED_TO_GROUP": "Service account - Added to group",
              "GroupAudit#submittedAt": {
                "label": "Submitted on"
              },
              "AuditRecordType#TRANSFER_ORGANIZATIONAL_UNIT_OWNERSHIP_REQUESTED": "Transfer ownership of organisational unit - Requested",
              "AuditRecordType#TRANSFER_APPLICATION_ADMINISTRATION_ACCEPTED": "Transfer administration of application - Approved",
              "AuditRecordType#TRANSFER_APPLICATION_ADMINISTRATION_REQUESTED": "Transfer administration of application - Requested",
              "AuditRecordType#ACCOUNT_2FA_ENABLED": "Account - 2FA disabled",
              "AuditRecordType#GROUP_NESTING_DISCONNECTED": "Group - Nested group unlinked",
              "AuditRecordType#VAULT_RECORD_REMOVED": "Vault - Record removed",
              "AuditRecordType#CLIENT_PERMISSION_REVOKED": "Application - Permission revoked",
              "AuditAccountAction#CHANGE_TO_NORMAL": "Revoke management privileges",
              "AuditRecordType#PROVISIONED_SYSTEM_REMOVED_FROM_GROUP": "Linked system - Removed from group",
              "AuditRecordType#ACCESS_PROFILE_CREATED": "Access profile - Created",
              "AuditRecordType#ACCOUNT_REMOVED_FROM_GROUP": "Account - Removed from a group",
              "AuditRequiredSourceType#PERIODIC": "Periodic",
              "AuditRecordType#SETUP_AUTHORIZING_GROUP_CONNECT_REQUESTED": "Setup authorisation - Requested",
              "AuditRecordType#TRANSFER_APPLICATION_ADMINISTRATION_DECLINED": "Transfer administration of application - Declined",
              "AuditRecordType#GROUP_ON_SYSTEM_CREATED": "Group on system - Created",
              "AuditRecordType#CLIENT_PERMISSION_GRANTED": "Application - Permission granted",
              "AuditRecordType#ENABLE_TECHNICAL_ADMINISTRATION_DECLINED": "Enable technical administration - Declined",
              "AuditRecordType#CLIENT_ADDED_TO_GROUP": "Application - Added to group",
              "AuditRecordType#GROUP_AUTHORIZATION_CONNECTED": "Group - Authorisation setup",
              "AuditRecordType#ACCOUNT_MODIFIED_FOR_ACCESS_PROFILE": "Account - Membership of access profile modified",
              "AuditRecordType#ADD_GROUP_ADMIN_ACCEPTED": "Add group manager - Approved",
              "AuditRecordType#RESET_PASSWORD_REQUESTED": "Recover password - Requested",
              "AuditRequiredSourceType#CONFORM": "Conform",
              "AuditRecordType#ENABLE_PROFILE_ADMINISTRATION_REQUESTED": "Enable access profile administration - Requested",
              "AuditRecordType#VAULT_RECORD_CREATED": "Vault - Record created",
              "AuditRecordType#ACCOUNT_PROVISIONING_DESTROYED": "Account - Removed from linked system",
              "AuditRecordType#REVIEW_AUDIT_ACCEPTED": "Review an audit - Approved",
              "AuditRecordType#GRANT_GROUP_ON_SYSTEM_REQUESTED": "Grant access to group on linked system - Requested",
              "AuditRecordType#REVIEW_AUDIT_DECLINED": "Review an audit - Declined",
              "AuditRecordType#ACCOUNT_MODIFIED_FOR_GROUP": "Account - Group modified",
              "AuditRecordType#SETTING_MODIFIED": "Setting modified",
              "AuditRecordType#GRANT_APPLICATION_DECLINED": "Grant access to application - Declined",
              "AuditRecordType#SETUP_NESTED_GROUP_DISCONNECT_REQUESTED": "Unlink nested group - Requested",
              "AuditRecordType#CLIENT_REMOVED_FROM_ACCESS_PROFILE": "Application - Removed from access profile",
              "AuditRecordType#GROUP_ON_SYSTEM_MODIFIED": "Group on system - Modified",
              "AuditRecordType#GROUP_ON_SYSTEM_DEPROVISIONED": "Group on system - Removed from linked system",
              "AuditRecordType#PROVISIONED_SYSTEM_MODIFIED": "Linked system - Modified",
              "AuditRecordType#VERIFY_INTERNAL_ACCOUNT_REQUESTED": "Verify internal account - Requested",
              "AuditRecordType#REVOKE_ADMIN_ACCEPTED": "Remove KeyHub Administrator - Approved",
              "AuditRecordType#REMOVE_ORGANIZATIONAL_UNIT_DECLINED": "Remove organisational unit - Declined",
              "AuditRecordType#UPDATE_LICENSE_REQUESTED": "Update the license - Requested",
              "AuditRecordType#TRANSFER_PROVISIONED_SYSTEM_OWNERSHIP_REQUESTED": "Transfer ownership of linked system - Requested",
              "AuditRecordType#GRANT_SERVICE_ACCOUNT_GROUP_DECLINED": "Grant service account access to group on linked system - Declined",
              "AuditRecordType#UPDATE_GROUP_MEMBERSHIP_ACCEPTED": "Update a group membership - Approved",
              "AuditRecordType#CERTIFICATE_CREATED": "Certificate - Created",
              "AuditRecordType#TRANSFER_PROVISIONED_SYSTEM_ADMINISTRATION_ACCEPTED": "Transfer administration of linked system - Approved",
              "GroupAudit#nameOnAudit": {
                "label": "Group name on audit"
              },
              "AuditRecordType#REMOVE_GROUP_DECLINED": "Remove group - Declined",
              "AuditAccountAction#APPROVE": "Approve",
              "AuditRecordType#GRANT_CLIENT_PERMISSION_ACCEPTED": "Grant permission to application - Approved",
              "AuditRecordType#SERVICE_ACCOUNT_REMOVED": "Service account - Removed",
              "AuditRecordType#SETUP_NESTED_GROUP_CONNECT_DECLINED": "Link nested group - Declined",
              "AuditRecordType#TRANSFER_ORGANIZATIONAL_UNIT_OWNERSHIP_ACCEPTED": "Transfer ownership of organisational unit - Approved",
              "AuditAccountAction#REMOVE": "Remove from group",
              "AuditRecordType#ACCOUNT_PASSWORD_CHANGED": "Account - Password changed",
              "AuditRecordType#VAULT_PERSONAL_SETUP": "Vault - Setup",
              "AuditRecordType#TRANSFER_PROVISIONED_SYSTEM_CONTENT_ADMINISTRATION_REQUESTED": "Transfer content administration of linked system - Requested",
              "AuditRecordType#ACCOUNT_ADDED_TO_GROUP": "Account - Added to a group",
              "AuditRecordType#SERVICE_ACCOUNT_DEPROVISIONED": "Service account - Disabled on linked system",
              "AuditRecordType#RESET_PASSWORD_FINISHED": "Recover password - Finished",
              "GroupAudit#reviewedAt": {
                "label": "Reviewed on"
              },
              "GroupAudit#comment": {
                "label": "Comments"
              },
              "AuditRecordType#ENABLE_PROFILE_ADMINISTRATION_DECLINED": "Enable access profile administration - Declined",
              "AuditRecordType#GRANT_GROUP_ON_SYSTEM_REQUEST_REQUESTED": "Request access to group on linked system - Requested",
              "AuditRecordType#TRANSFER_SERVICE_ACCOUNT_ADMINISTRATION_DECLINED": "Transfer ownership of service account - Declined",
              "AuditRecordType#SETUP_NESTED_GROUP_DISCONNECT_ACCEPTED": "Unlink nested group - Approved",
              "AuditRecordType#SERVICE_ACCOUNT_PROVISIONING_INITED": "Service account - Added to linked system",
              "AuditRecordType#CLIENT_MODIFIED_FOR_GROUP": "Application - Modified group",
              "AuditRecordType#GRANT_GROUP_ON_SYSTEM_DECLINED": "Grant access to group on linked system - Declined",
              "AuditRecordType#CREATE_PROVISIONED_NAMESPACE_ACCEPTED": "Create namespace - Approved",
              "AuditRecordType#AUDITOR_EXPORT_GENERATED": "Export - Generated",
              "AuditRecordType#SETUP_NESTED_GROUP_CONNECT_ACCEPTED": "Link nested group - Approved",
              "AuditRecordType#PROVISIONED_SYSTEM_ADDED_TO_GROUP": "Linked system - Added group",
              "AuditRecordType#ENABLE_PROFILE_ADMINISTRATION_ACCEPTED": "Enable access profile administration - Approved",
              "AuditRecordType#ACCOUNT_DISABLED": "Account - Disabled",
              "AuditRecordType#EXTENDED_ACCESS_REQUESTED": "Extended access - Requested",
              "AuditRecordType#SERVICE_ACCOUNT_CREATED": "Service account - Created",
              "AuditRecordType#CERTIFICATE_REMOVED": "Certificate - Removed",
              "AuditRecordType#SETUP_AUTHORIZING_GROUP_DISCONNECT_DECLINED": "Remove authorisation - Declined",
              "AuditRecordType#ACCOUNT_GROUP_ACTIVATION_REASON": "Account - Group activation reason",
              "AuditRecordType#GRANT_CLIENT_PERMISSION_DECLINED": "Grant permission to application - Declined",
              "AuditRecordType#VAULT_PERSONAL_RESET": "Vault - Reset personal",
              "AuditRecordType#EXTENDED_ACCESS_ACCEPTED": "Extended access - Approved",
              "AuditRecordType#GRANT_ACCESS_ACCEPTED": "Request access - Approved",
              "AuditRecordType#TRANSFER_GROUP_ON_SYSTEM_OWNERSHIP_DECLINED": "Transfer ownership of group on system - Declined",
              "AuditRecordType#VAULT_RECORD_MOVED_COPIED_SHARED": "Vault - Record moved/copied/shared",
              "AuditRecordType#MOVE_GROUPS_DECLINED": "Move groups - Declined",
              "AuditRecordType#ACCOUNT_VAULT_UNLOCKED": "Account - Vault unlocked",
              "AuditRecordType#UPDATE_GROUP_MEMBERSHIP_DECLINED": "Update a group membership - Declined",
              "AuditRecordType#SETUP_AUTHORIZING_GROUP_DISCONNECT_ACCEPTED": "Remove authorisation - Approved",
              "AuditRecordType#REMOVE_PROVISIONED_SYSTEM_ACCEPTED": "Remove linked system - Approved",
              "AuditRecordType#REVOKE_ADMIN_DECLINED": "Remove KeyHub Administrator - Declined",
              "AuditRecordType#GROUP_REMOVED_FROM_ACCESS_PROFILE": "Group - Removed from access profile",
              "AuditRecordType#DIRECTORY_MODIFIED": "Directory - Modified",
              "AuditRecordType#SERVICE_ACCOUNT_REMOVED_FROM_GROUP": "Service account - Removed from group",
              "AuditRecordType#ACCOUNT_GROUP_DEPROVISIONED": "Account - Group disabled on linked system",
              "AuditRecordType#REVIEW_AUDIT_REQUESTED": "Review an audit - Requested",
              "AuditRecordType#TRANSFER_ORGANIZATIONAL_UNIT_OWNERSHIP_DECLINED": "Transfer ownership of organisational unit - Declined",
              "AuditRecordType#TRANSFER_ACCESS_PROFILE_OWNERSHIP_ACCEPTED": "Transfer ownership of access profile - Approved",
              "AuditRecordType#GROUP_REMOVED": "Group - Removed",
              "GroupAudit#reviewedBy": {
                "label": "Reviewed by"
              },
              "AuditRecordType#SERVICE_ACCOUNT_PROVISIONED": "Service account - Enabled on linked system",
              "AuditRecordType#ACCOUNT_ACCESS_PROFILE_PROVISIONED": "Account - Access profile enabled on linked system",
              "AuditRecordType#GRANT_ACCESS_DECLINED": "Request access - Declined"
            },
            "request": {
              "AddGroupAdminRequest#privateKey": {
                "placeholder": "Recovery private key",
                "label": "Recovery private key"
              },
              "GroupNestAccountAction#CONVERT": "Convert",
              "ModificationRequestReportChange#ACCESS_PROFILE_GROUP_REMOVED_OWNER": "Access profile {0} loses its link to group {1}.",
              "ModificationRequestReportConclusion#OK": "OK",
              "ModificationRequestReportChange#PROVISIONING_GROUP_REMOVED_OUT_OF_SCOPE": "After moving, the group on system {0} is no longer visible. Access will be removed.",
              "SetupNestedGroupRequest#accountAction": {
                "label": "Existing accounts",
                "description": {
                  "disconnect": "Convert inherited group memberships to regular memberships or delete them.",
                  "connect": "Keep, nest, or remove existing group memberships."
                }
              },
              "ModificationRequestType#TRANSFER_ACCESS_PROFILE_OWNERSHIP": "TRANSFER OWNERSHIP",
              "ModificationRequestReportChange#CLIENT_PERMISSION_REMOVED_OUT_OF_SCOPE": "The assigned permission {1} is no longer visible for the client application {0} after being moved, and therefore access is being removed.",
              "ModificationRequestType#REMOVE_GROUP": "REMOVE GROUP",
              "ModificationRequestType#EXTEND_ACCESS": "EXTENDED ACCESS",
              "AbstractProvisionedSystemModificationRequest#system": {
                "label": "Linked system",
                "placeholder": "Type a linked system name here..."
              },
              "GroupNestAccountAction#RETAIN": "Retain",
              "ModificationRequestType#CREATE_SERVICE_ACCOUNT": "CREATE SERVICE ACCOUNT",
              "PasswordResetRequest#newVaultAndDirectoryPassword": {
                "description": "The previously chosen password does not meet the requirements. Choose a stronger new password.",
                "label": "New password"
              },
              "ModificationRequestReportError#AUDITOR_GROUP_CANNOT_BE_MOVED": "The auditor group cannot be moved",
              "ModificationRequestType#CREATE_GROUP": "CREATE GROUP",
              "ModificationRequestType#GRANT_ACCESS": "REQUEST ACCESS",
              "ModificationRequestReportChange#ACCOUNT_REMOVED_FROM_ACCESS_PROFILE": "The account {1} will be removed from the access profile.",
              "GrantServiceAccountGroupRequest#groupOnSystem": {
                "label": "Group on system"
              },
              "ModificationRequestType#ADD_GROUP_ADMIN": "MAKE MANAGER",
              "CreateGroupRequest#groupName": {
                "label": "Group name",
                "result": "Your group will be named: <strong>{0}<\/strong>",
                "description": "Choose a meaningful name for the new group with a prefix from the list."
              },
              "PasswordResetRequest#newVaultPassword": {
                "label": "The new password"
              },
              "ModificationRequest#comment": {
                "label": "Reason"
              },
              "ModificationRequestType#ENABLE_PROFILE_ADMINISTRATION": "ENABLE",
              "UpdateLicenseRequest#licenseKey": {
                "label": "License file"
              },
              "ModificationRequest#feedback": {
                "label": "Reason for approval/refusal"
              },
              "ModificationRequestReportChange#ACCESS_PROFILE_CLIENT_REMOVED_OWNER": "The application {0} is moved along with this group. As a result, the access profile {1} loses access.",
              "ModificationRequestReportConclusion#CANNOT_BE_EXECUTED": "Request can not be fulfilled",
              "ModificationRequestType#TRANSFER_PROVISIONED_SYSTEM_CONTENT_ADMINISTRATION": "TRANSFER CONTENT ADMIN",
              "ModificationRequestType#ENABLE_TECHNICAL_ADMINISTRATION": "ENABLE",
              "ModificationRequestType#VERIFY_INTERNAL_ACCOUNT": "APPROVE ACCOUNT",
              "ModificationRequest#group": {
                "label": "Group",
                "placeholder": "Type a group name here..."
              },
              "ModificationRequestReportError#MANAGER_CANNOT_BE_MOVED": "The group has a manager that cannot be moved",
              "ModificationRequestType#REMOVE_ORGANIZATIONAL_UNIT": "REMOVE ORGANISATION",
              "ModificationRequestReportChange#GROUP_CLIENT_REMOVED_OWNER": "The application {0} moves with this group. The KeyHub group {1} loses access.",
              "CreateProvisionedNamespaceRequest#namespaceName": {
                "label": "Name",
                "description": "Choose a name for the namespace."
              },
              "ModificationRequestType#JOIN_GROUP": "JOIN GROUP",
              "ModificationRequestType#GRANT_GROUP_ON_SYSTEM": "ACCESS TO GROUP",
              "ExtendAccessRequest#extendUntil": {
                "label": "Extend access until"
              },
              "ModificationRequestReportChange#GROUP_CLIENT_REMOVED_OUT_OF_SCOPE": "After moving, the application {0} is no longer visible. Access will be removed.",
              "ModificationRequestStatus#ALLOWED": "Approved",
              "ModificationRequestReportChange#GROUP_AUTHORIZATION_REMOVED": "All forms of additional authorizations on these groups will be removed.",
              "ModificationRequestType#TRANSFER_PROVISIONED_SYSTEM_ADMINISTRATION": "TRANSFER ADMIN",
              "ModificationRequestReportChange#ACCESS_PROFILE_PROVISIONING_REMOVED_OUT_OF_SCOPE": "The group on system {0} is no longer visible for the access profile {1} after being moved, and therefore access is being removed.",
              "ModificationRequestType#DISABLE_2FA": "DISABLE 2FA",
              "ModificationRequestReportChange#ORGANIZATIONAL_UNIT_REMOVED": "These organisational units will be removed.",
              "ModificationRequestReportChange#SYSTEM_ACCOUNTS_WRITABLE_DISABLED": "'Accounts writable' will be disabled for these linked systems.",
              "ModificationRequestReportChange#SERVICE_ACCOUNT_GROUP_REMOVED_OWNER": "The group on system {0} moves with this group and therefore the service account {1} loses access.",
              "ModificationRequestType#TRANSFER_PROVISIONED_SYSTEM_OWNERSHIP": "TRANSFER OWNERSHIP",
              "ModificationRequestReportChange#ACCESS_PROFILE_REMOVED": "These access profiles will be removed.",
              "ModificationRequestType#REVIEW_AUDIT": "REVIEW AUDIT",
              "ModificationRequestReportError#ADMIN_GROUP_CANNOT_BE_MOVED": "The KeyHub administrators group cannot be moved",
              "ModificationRequestType#GRANT_SERVICE_ACCOUNT_GROUP": "ACCESS TO GROUP",
              "ModificationRequestStatus#DISALLOWED": "Declined",
              "ModificationRequestType#TRANSFER_SERVICE_ACCOUNT_ADMINISTRATION": "TRANSFER ADMIN",
              "ModificationRequestReportChange#GROUP_NESTING_REMOVED": "The nesting of these groups will be removed.",
              "AuthorizingGroupType#MEMBERSHIP": "Changes in group membership",
              "ModificationRequestReportChange#PROVISIONING_GROUP_REMOVED_OWNER": "The group on system {0} moves with this group. The KeyHub group {1} loses access.",
              "ModificationRequestType#RESET_PASSWORD": "RECOVER PASSWORD",
              "GrantClientPermissionRequest#permissionType": {
                "label": "Permission"
              },
              "RevokeAdminRequest#admin": {
                "label": "KeyHub administrator"
              },
              "ModificationRequestReportError#GROUP_PART_OF_NESTING_TREE": "The group is part of a structure of nested groups",
              "SetupAuthorizingGroupRequest#authorizingGroupType": {
                "label": "Authorisation type"
              },
              "ModificationRequestReportChange#GROUP_VAULT_RECOVERY_RESET": "Vault recovery for these groups will be set to 'Fully available'.",
              "ModificationRequestReportError#GROUP_FULFILLS_GLOBAL_ROLE": "The group fulfills a global role in KeyHub",
              "CreateServiceAccountRequest#username": {
                "label": "Username",
                "description": "Choose a username for the service account."
              },
              "ModificationRequestType#SETUP_NESTED_GROUP": "NESTING",
              "ModificationRequestReportError#GROUP_OWNS_OU": "The group has a role for an organisational unit",
              "ModificationRequestReportError#ONE_MOVEABLE_VAULT_ACCESS_OF_MULTIPLE_MEMBERS": "The group has only one member with vault access that can be moved",
              "ModificationRequestType#REMOVE_PROVISIONED_SYSTEM": "REMOVE SYSTEM",
              "GrantApplicationRequest#application": {
                "label": "Application"
              },
              "ModificationRequestReportError#ZERO_MOVEABLE_VAULT_ACCESS_MEMBERS": "The group has no members with vault access that can be moved",
              "AddGroupAdminRequest#newAdmin": {
                "label": "User"
              },
              "ModificationRequestType#TRANSFER_APPLICATION_ADMINISTRATION": "TRANSFER ADMIN",
              "ModificationRequestType#SETUP_AUTHORIZING_GROUP": "AUTHORIZATION",
              "ModificationRequestReportChange#GROUP_ACTIVATION_FOR_PROVISIONING_DISABLED": "'Activation required' will be disabled for these groups on systems.",
              "ModificationRequestType#GRANT_GROUP_ON_SYSTEM_REQUEST": "ACCESS TO GROUP",
              "ModificationRequestReportError#MULTIPLE_OUS": "The request contains groups from more than one organisational unit",
              "ModificationRequestReportChange#GROUP_ACTIVATION_FOR_VAULT_DISABLED": "'Activation required for vault access' will be disabled on these groups.",
              "ModificationRequestStatus#CANCELLED": "Withdrawn",
              "ModificationRequestStatus#REQUESTED": "Requested",
              "ModificationRequestType#JOIN_VAULT": "JOIN VAULT",
              "ModificationRequestType#GRANT_APPLICATION": "APP ACCESS",
              "AuthorizingGroupType#AUDITING": "Review audits",
              "ModificationRequestReportChange#ACCOUNT_REMOVED_FROM_GROUP": "The account {1} will be removed from the group.",
              "ModificationRequestType#UPDATE_LICENSE": "LICENSE",
              "ModificationRequestReportError#GROUP_TECHADMIN_CLIENTAPP_WITH_OWNER_OTHER_OU": "The group is the technical administrator of an application where the owner group will remain in another organisational unit.",
              "AuthorizingGroupType#PROVISIONING": "Group activation",
              "ModificationRequestReportChange#ACCESS_PROFILE_PROVISIONING_REMOVED_OWNER": "The group on system {0} is moved along with this group. As a result, the access profile {1} loses access.",
              "ModificationRequestType#CREATE_GROUP_ON_SYSTEM": "CREATE GROUP ON SYSTEM",
              "ModificationRequestReportChange#SERVICE_ACCOUNT_REMOVED": "These service accounts will be removed.",
              "ModificationRequestReportChange#ACCESS_PROFILE_CLIENT_REMOVED_OUT_OF_SCOPE": "The assigned application {0} is no longer visible for the access profile {1} after being moved, and therefore access is being removed.",
              "ModificationRequestReportError#GROUP_OWNS_OR_ADMINS_SYSTEM": "The group has a role for a linked system",
              "ModificationRequestReportChange#ORGANIZATIONAL_UNIT_CLIENT_APPLICATION_REMOVED_OUT_OF_SCOPE": "The organizational unit {1} is no longer visible to client application {0} after being moved, and therefore access is being removed.",
              "ModificationRequestType#TRANSFER_GROUP_ON_SYSTEM_OWNERSHIP": "TRANSFER OWNERSHIP",
              "LinkDirectoryToAccessProfileRequest#directory": {
                "label": "Directory"
              },
              "ModificationRequestType#UPDATE_GROUP_MEMBERSHIP": "MEMBERSHIP",
              "ModificationRequestReportError#GROUP_OWNER_CLIENTAPP_WITH_TECHADMIN_OTHER_OU": "The group is the owner of an application where the technical administrator group will remain in another organisational unit.",
              "GrantServiceAccountGroupRequest#serviceAccount": {
                "label": "Service account"
              },
              "ModificationRequestType#LINK_DIRECTORY_TO_ACCESS_PROFILE": "LINK DIRECTORY",
              "GrantClientPermissionRequest#system": {
                "label": "Linked system"
              },
              "AbstractAccessProfileModificationRequest#accessProfile": {
                "label": "Access profile"
              },
              "AuthorizingGroupType#DELEGATION": "Delegation of management",
              "ModificationRequestType#REMOVE_ACCESS_PROFILE": "REMOVE ACCESS PROFILE",
              "GroupNestAccountAction#REMOVE": "Remove",
              "ModificationRequestReportChange#GROUP_MADE_PUBLIC": "These groups will be made public.",
              "ModificationRequestType#MOVE_GROUPS": "MOVE GROUPS",
              "ModificationRequestReportChange#SERVICE_ACCOUNT_GROUP_REMOVED_OUT_OF_SCOPE": "After moving, the group on system {0} is no longer visible to the service account {1} and therefore access is removed.",
              "ModificationRequestReportChange#ACCESS_PROFILE_GROUP_REMOVED_OUT_OF_SCOPE": "Since group {1} is no longer visible to access profile {0} after being moved, the link is being removed.",
              "ModificationRequestReportChange#MODIFICATION_REQUEST_CANCELLED": "{0} request(s) will be cancelled.",
              "TransferServiceAccountAdministrationRequest#serviceAccount": {
                "label": "Service account"
              },
              "ModificationRequestType#GRANT_CLIENT_PERMISSION": "GRANT PERMISSION",
              "ModificationRequestType#CREATE_PROVISIONED_NAMESPACE": "CREATE NAMESPACE",
              "ModificationRequestType#REVOKE_ADMIN": "REMOVE ADMIN",
              "AbstractOrganizationalUnitModificationRequest#organizationalUnit": {
                "label": "Organisational unit"
              },
              "ModificationRequestType#TRANSFER_APPLICATION_OWNERSHIP": "TRANSFER OWNERSHIP",
              "ModificationRequestReportChange#GROUP_ACTIVATION_FOR_SSO_DISABLED": "'Activation required' will be disabled for these applications.",
              "ModificationRequestReportError#GROUP_OWNS_OR_HELPDESKS_DIRECTORY": "The group has a role for an account directory",
              "ModificationRequestReportChange#GROUP_CLASSIFICATION_REMOVED": "These group classifications will be removed.",
              "ModificationRequestType#ADD_GROUP_TO_ACCESS_PROFILE": "ADD GROUP",
              "ModificationRequestType#TRANSFER_ORGANIZATIONAL_UNIT_OWNERSHIP": "TRANSFER OWNERSHIP",
              "PasswordResetRequest#newVaultAndDirectoryPasswordCheck": {
                "label": "Repeat password"
              },
              "AbstractApplicationModificationRequest#application": {
                "label": "Application"
              }
            },
            "directory": {
              "LDAPDirectory#baseDN": {
                "placeholder": "OU=department,DC=company,DC=local",
                "description": "The base DN under which users are located in the directory.",
                "label": "Base DN"
              },
              "OIDCDirectory#acrValues": {
                "description": "A space-separated list of ACR values. This is passed as 'acr_values' to the IDP. When the IDP returns an 'acr' claim in the 'id_token' it must match one of the specified values.",
                "label": "ACR values"
              },
              "LDAPDirectory#searchBindPassword": {
                "label": "Bind password",
                "description": "The password used to bind with when searching for users in the directory."
              },
              "OIDCDirectory#clientSecret": {
                "label": "Client secret"
              },
              "OIDCVendor#GENERIC": "Generic OIDC",
              "InternalDirectory#owner": {
                "placeholder": "Select a group...",
                "label": "Group with ownership",
                "description": "Managers from the chosen group are responsible for managing accounts in this directory."
              },
              "LDAPDirectory#tls": {
                "label": "TLS"
              },
              "AccountDirectory#baseOrganizationalUnit": {
                "description": "Users from the directory are always members of this organisational unit and can only be member of organisational units under this unit.",
                "label": "Base organisational unit"
              },
              "AccountDirectoryStatus#DISABLED": "Disabled",
              "AccountDirectory#usernameCustomizable": {
                "label": "Username customisable",
                "description": "If enabled, users can choose a username during registration that may differ from the username in the directory."
              },
              "LDAPDirectory#passwordRecovery": {
                "label": "Password recovery in the directory",
                "description": "On password recovery, write the password back in the directory with the chosen user re-authentication requirements. The user with the bind DN must have sufficient rights to do this."
              },
              "OIDCDirectory#attributesToStore": {
                "label": "Attributes",
                "description": "A space-separated list of attributes that are read from the directory and stored with the account. These attributes can then be used in custom attribute scripts."
              },
              "OIDCDirectory#domainRestriction": {
                "description": "The domain to which users are restricted. This usually matches the part after the @-sign in the username or e-mail address. For Google, additional domains can be given, separated by spaces.",
                "label": "Domain restriction"
              },
              "AccountDirectory#restrict2fa": {
                "label": "Restrict 2FA setup",
                "description": "If enabled, a user can only setup 2FA after it has been disabled via a request. It is then not allowed to configure other 2FA options yourself."
              },
              "LDAPDirectory#port": {
                "label": "Port"
              },
              "OIDCVendor#AZURE_AD": "Microsoft Azure Active Directory",
              "OIDCDirectory#enforces2fa": {
                "label": "Enforces 2FA",
                "description": "If enabled, Topicus KeyHub will not prompt the user for 2FA. This is enforced by the directory itself."
              },
              "AccountDirectoryStatus#INIT_REQUIRED": "Uninitialized",
              "OIDCDirectory#sendLoginHint": {
                "label": "Send login_hint",
                "description": "If enabled, Topicus KeyHub will send a login_hint parameter to the IDP. This hint can help the IDP automatically select the correct account."
              },
              "OIDCDirectory#vendor": {
                "description": "Choose a specific provider if applicable.",
                "label": "Provider"
              },
              "AccountDirectoryType#OIDC": "OIDC",
              "OIDCDirectory#issuer": {
                "label": "OIDC Issuer identifier",
                "description": "An OIDC Issuer Identifier is a case sensitive URL using the https scheme that contains scheme, host, and optionally, port number and path components and no query or fragment components."
              },
              "LDAPDirectory#attributesToStore": {
                "label": "Attributes",
                "description": "A space-separated list of attributes that are read from the directory and stored with the account. These attributes can then be used in custom attribute scripts."
              },
              "LDAPDirectory#searchFilter": {
                "description": "The filter used to locate users in the directory. Users are located under the base DN. Use {} as placeholder for the search term. Make sure only enabled users are matched.",
                "label": "Search filter",
                "placeholder": "(&(objectCategory=Person)(sAMAccountName={})(!(useraccountcontrol:1.2.840.113556.1.4.803:=2)))"
              },
              "LDAPDirectory#failoverHost": {
                "description": "This host will be used as failover when primary host is unavailable. Connections are set up on the same port.",
                "label": "Failover host"
              },
              "LDAPDirectory#failoverTrustedCertificate": {
                "label": "Trusted certificate for failover",
                "description": "The certificate of the failover server that must be trusted. This can also be one of the certificates used to sign that particular certificate."
              },
              "AccountDirectoryType#PENDING_ACCOUNTS": "Pending accounts",
              "AccountDirectory#helpdeskGroup": {
                "description": "Requests for resetting passwords and 2FA for this directory are handled by members of the selected group.",
                "label": "Help desk group"
              },
              "LDAPDirectory#searchBindDN": {
                "placeholder": "CN=User Name,OU=group,DC=company,DC=local",
                "label": "Bind DN",
                "description": "The DN used to bind with when searching for users in the directory. This must be a fully qualified DN."
              },
              "OIDCVendor#GOOGLE": "Google",
              "LDAPDirectory#clientCertificate": {
                "label": "Client certificate",
                "description": "The certificate that must be used to authenticate to the server. A client certificate consists of the certificate itself and a corresponding private key."
              },
              "OIDCDirectory#clientId": {
                "label": "Client identifier"
              },
              "LDAPDirectory#dialect": {
                "label": "Dialect"
              },
              "LDAPDialect#OPENLDAP": "OpenLDAP",
              "AccountDirectoryStatus#ONLINE": "Online",
              "AccountDirectory#defaultDirectory": {
                "label": "Default directory",
                "description": "If enabled, registration for this directory will automatically start for a user who does not yet exist in Topicus KeyHub."
              },
              "DirectoryRotatingPassword#ALWAYS_ON": "Always on",
              "LDAPDirectory#trustedCertificate": {
                "label": "Trusted certificate",
                "description": "The certificate of the server that must be trusted. This can also be one of the certificates used to sign that particular certificate."
              },
              "OIDCDirectory#logoutUrl": {
                "description": "A custom URL to which the user is sent for single logout (SLO).",
                "label": "Logout URL"
              },
              "DirectoryRotatingPassword#DEFAULT_ON": "Default on",
              "LDAPDirectoryPasswordRecovery#VERIFY_2FA": "Verification via 2FA",
              "LDAPDirectoryPasswordRecovery#VERIFY_MAIL_AND_2FA": "Verification via e-mail and 2FA",
              "AccountDirectoryStatus#DEGRADED": "Failover",
              "AccountDirectoryStatus#NON_REDUNDANT": "Non-redundant",
              "AccountDirectoryType#INTERNAL": "Internal",
              "AccountDirectoryType#LDAP": "LDAP",
              "AccountDirectoryType#MAINTENANCE": "Maintenance",
              "LDAPDialect#ACTIVE_DIRECTORY": "Microsoft Active Directory",
              "AccountDirectory#rotatingPassword": {
                "label": "Rotating password",
                "description": "Force the use of a rotating password for all users in this directory."
              },
              "LDAPDirectoryPasswordRecovery#DISABLED": "Disabled",
              "AccountDirectoryPrimer#uuid": {
                "label": "UUID"
              },
              "LDAPDirectoryPasswordRecovery#VERIFY_MAIL": "Verification via e-mail",
              "DirectoryRotatingPassword#DEFAULT_OFF": "Default off",
              "AccountDirectoryPrimer#active": {
                "label": "Enabled"
              },
              "AccountDirectoryPrimer#name": {
                "label": "Name"
              },
              "LDAPDirectory#host": {
                "label": "Primary host"
              },
              "AccountDirectoryStatus#OFFLINE": "Offline"
            },
            "organization": {
              "OrganizationalUnit#description": {
                "label": "Description"
              },
              "OrganizationalUnit#owner": {
                "label": "Group with ownership",
                "placeholder": "Select a group...",
                "description": "Managers from the selected group control access to this organisational unit."
              },
              "OrganizationalUnit#auditorGroup": {
                "description": "The group that has access to the auditor dashboards for this and underlying organisational units.",
                "label": "Auditor group"
              },
              "OrganizationalUnit#createAsParentOf": {
                "label": "Insert above",
                "description": "Insert the new organisational unit above the selected units. The selected units will therefore fall under this organisational unit after saving."
              },
              "OrganizationalUnit#removeGroupApproveGroup": {
                "label": "Approve 'Remove group'",
                "description": "Requests to remove groups are handled by the chosen group."
              },
              "OrganizationalUnit#recoveryFallbackGroup": {
                "description": "Password recovery requests for users with insufficient group managers are also sent to users in the chosen group.",
                "label": "Password recovery fallback group"
              },
              "OrganizationalUnit#createGroupPlaceholder": {
                "description": "This hint is shown to users when requesting new groups.",
                "label": "Hint for new group names"
              },
              "OrganizationalUnitPrimer#name": {
                "label": "Name"
              },
              "OrganizationalUnit#enableTechAdminApproveGroup": {
                "label": "Approve 'Enable technical administration'",
                "description": "Requests to enable technical administration on groups are handled by the chosen group."
              },
              "OrganizationalUnit#parent": {
                "label": "Parent organisational unit"
              },
              "OrganizationalUnit#createGroupApproveGroup": {
                "label": "Approve 'Create group'",
                "description": "Requests to create new groups are handled by the chosen group."
              },
              "OrganizationalUnitPrimer#uuid": {
                "label": "UUID"
              }
            },
            "auth": {
              "Account#validInDirectory": {
                "label": "Valid in directory"
              },
              "AccountLicenseRole#IGA": "IGA",
              "InternalAccountStatus#ACTIVATED": "Activated",
              "UnregisteredAccount#keyHubUsername": {
                "description": {
                  "changed": "Note: your username in Topicus KeyHub has been changed. From now on you can only login with this new username.",
                  "readonly": "This is the username with which your account will be created in KeyHub.",
                  "main": "If desired, you can choose a different username for KeyHub. This username will be used throughout KeyHub.",
                  "unchanged": "Your username in Topicus KeyHub remains unchanged."
                },
                "label": {
                  "main": "KeyHub username",
                  "new": "New username"
                }
              },
              "Account#active": {
                "label": "Enabled"
              },
              "TwoFactorAuthenticationStatus#WEBAUTHN": "2FA via WebAuthn",
              "AccountBulkUpdateAction#CHANGE_LICENSE_ROLE_TO_PRO": "Change license to Pro",
              "Account#twoFactorStatus": {
                "label": "Two-factor authentication"
              },
              "SecurityLevel#LOW": "Remembered login",
              "Account#email": {
                "label": "E-mail"
              },
              "AccountChangePassword#newPasswordCheck": {
                "label": "Repeat password"
              },
              "TwoFactorAuthenticationStatus#TOTP": "2FA enabled",
              "Account#licenseRole": {
                "label": "License role"
              },
              "InternalAccountStatus#NOT_ACTIVATED": "Activation code sent, not yet activated",
              "AccountLicenseRole#PRO": "Pro",
              "AccountChangePassword#logoutOtherSessions": {
                "label": "Logout all sessions",
                "description": "Logout all sessions but the current."
              },
              "AccountChangePublicKey#publicKey": {
                "label": "SSH Public key",
                "placeholder": "ssh-rsa AAAAB3NzaC1..."
              },
              "InternalAccountStatus#UNVERIFIED": "Not yet verified",
              "AccountChangePassword#useTokenPassword": {
                "description": "KeyHub will generate a random password for linked systems (rather than using your KeyHub password) and rotate this password on a daily basis. The password can be accessed on your dashboard or via the eye icon in the main menu.",
                "label": "Use rotating password"
              },
              "AccountStatus#licenseRole": {
                "label": "License role"
              },
              "AccountBulkUpdateAction#MARK_FOR_RENAME": "Rename or move",
              "Account#idInDirectory": {
                "label": "Identifier in directory"
              },
              "AdditionalAuthentication#password": {
                "placeholder": "* * *"
              },
              "AccountPrimer#lastActive": {
                "label": "Last sign in"
              },
              "TwoFactorAuthenticationStatus": {
                "short#EXTERNAL": "External",
                "short#MIXED": "Multiple",
                "short#WEBAUTHN": "WebAuthn",
                "short#APP": "App",
                "short#DISABLED": "No",
                "short#TOTP": "TOTP"
              },
              "AccountChangePassword#chooseNewPassword": {
                "description": "Your current password meets the requirements. You have the option to choose a new password anyway.",
                "label": "Choose new password"
              },
              "SecurityLevel#MEDIUM": "Username/password",
              "AccountValidity#INVALID_IN_DIRECTORY": "Invalid in directory",
              "AccountBulkUpdate#action": {
                "label": "Action"
              },
              "AccountChangePassword#newPassword": {
                "label": "New password"
              },
              "TwoFactorAuthenticationStatus#DISABLED": "2FA disabled",
              "AccountPrimer#directory": {
                "label": "Directory"
              },
              "UnregisteredAccount#reregisteredAccountName": {
                "label": "Current username"
              },
              "TotpOffsetChangeConfirmation#firstToken": {
                "placeholder": "Verification code",
                "label": "Current code"
              },
              "AccountBulkUpdateAction#CHANGE_LICENSE_ROLE_TO_BUSINESS": "Change license to Business",
              "AccountChangePassword#oldDirectoryPassword": {
                "label": "Current password"
              },
              "AccountActivation#passwordCheck": {
                "label": "Repeat password"
              },
              "InternalAccount#activationCode": {
                "label": "Activation code"
              },
              "AccountValidity#DIRECTORY_DISABLED": "Directory disabled",
              "InternalAccount#reason": {
                "label": "Reason"
              },
              "AccountPrimer#uuid": {
                "label": "UUID"
              },
              "UnregisteredAccount#remoteIdentity": {
                "label": "Signed in user"
              },
              "UnregisteredAccount#username": {
                "label": "Username"
              },
              "PasswordMode#ONE_PASSWORD": "use {0} password for KeyHub also",
              "AccountValidity#DISABLED": "Disabled",
              "Account#canRequestGroups": {
                "label": "Can request group access"
              },
              "AccountChangePassword#oldKeyHubPassword": {
                "label": "Password for your vaults"
              },
              "SecurityLevel#HIGH": "Two-factor authentication",
              "TwoFactorAuthenticationStatus#APP": "2FA via KeyHub app",
              "TotpOffsetChangeConfirmation#secondToken": {
                "label": "Next code",
                "placeholder": "Verification code"
              },
              "InternalAccountStatus#ACTIVATION_NOT_SENT": "Activation code not yet sent",
              "InternalAccount#company": {
                "label": "Company"
              },
              "AccountActivation#password": {
                "label": "Password"
              },
              "AdditionalAuthentication#totpToken": {
                "placeholder": "Verification code",
                "label": "Code"
              },
              "UnregisteredAccount#password": {
                "label": "Password"
              },
              "AccountActivation#username": {
                "label": "Username"
              },
              "UnregisteredAccount#directory": {
                "label": "Directory"
              },
              "AccountValidity#VALID": "Valid",
              "InternalAccountStatus#ACTIVATION_EXPIRED": "Activation code expired",
              "PasswordMode#ONE_PASSWORD_UNSYNCED": "use {0} password for KeyHub also (synchronisation required)",
              "AccountPrimer#username": {
                "label": "Username"
              },
              "AccountValidity#NOT_APPLICABLE": "N/A",
              "InternalAccount#status": {
                "label": "Status"
              },
              "TwoFactorAuthenticationStatus#EXTERNAL": "2FA managed externally",
              "AccountValidity#REREGISTRATION_REQUIRED": "Re-registration required",
              "AccountLicenseRole#BUSINESS": "Business",
              "AccountBulkUpdateAction#CHANGE_LICENSE_ROLE_TO_IGA": "Change license to IGA",
              "TwoFactorAuthenticationStatus#MIXED": "2FA enabled",
              "Account#recoveryStatus": {
                "label": "Password and 2FA recovery status"
              },
              "MoveInternalAccount#internalDirectory": {
                "label": "Internal directory"
              },
              "PasswordMode#TWO_PASSWORDS": "a separate password for KeyHub"
            },
            "group": {
              "GroupPrimer#name": {
                "label": "Name"
              },
              "Group#rotatingPasswordRequired": {
                "label": "Rotating password required",
                "description": "If enabled, the activation of this group requires a rotating password."
              },
              "GroupClient#group": {
                "label": "Group"
              },
              "GroupExtendedAccess#ONE_WEEK": "Up to 1 week",
              "GroupGlobalRoleInfo#removeGroupApproveGroupFor": {
                "description": "Requests to remove groups are handled by this group for the organization(s) above.",
                "label": "Approve 'Remove group' for"
              },
              "GroupClassification#maximumAuditInterval": {
                "description": "Indicate the maximum time allowed between audits for the periodic audit of the groups with this classification.",
                "label": "Maximum audit interval"
              },
              "Group#vaultRecovery": {
                "label": "Vault recovery availability",
                "description": "Limit vault recovery options for vaults with highly sensitive information."
              },
              "Group#hideAuditTrail": {
                "description": "If enabled, the audit log records for this group are not shown on the dashboard and are only visible in the audit log under 'daily use'.",
                "label": "Hide audit trail"
              },
              "GroupClassification#rotatingPasswordRequired": {
                "label": "Require \"Rotating password required\"",
                "description": "Require the activation of the option \"Rotating password required\" for groups with this classification."
              },
              "GroupEditRequiredReason#ONE_MANAGER": {
                "long": "Group {groupName} requires an audit because it currently only has one manager"
              },
              "GroupExtendedAccess#NOT_ALLOWED": "Not allowed",
              "Group#authorizingGroupDelegation": {
                "description": "Members of this group may perform management of the group and its members.",
                "label": "Group with delegated privileges"
              },
              "Group#extendedAccess": {
                "label": "Extend access period"
              },
              "GroupRights#NORMAL": "Normal privileges",
              "GroupClassification#authorizingGroupProvisioningRequired": {
                "label": "Require \"Authorising group for activation\"",
                "description": "Require the activation of the option \"Authorising group for activation\" for groups with this classification."
              },
              "Group#applicationAdministration": {
                "description": "If enabled, members of this group can administer applications, linked systems, and service accounts.",
                "label": "Technical administration"
              },
              "VaultRecoveryAvailability#FULL": "Fully available",
              "GroupClassification#defaultClassification": {
                "label": "Default classification",
                "description": "New groups automatically get this classification. This classification cannot be deleted but it can be edited."
              },
              "Group#privateGroup": {
                "description": "If enabled, this group is only visible to its members and membership cannot be requested.",
                "label": "Private group"
              },
              "Group#vaultRequiresActivation": {
                "label": "Activation required for vault access",
                "description": "If enabled, activation of this group is required before passwords can be read."
              },
              "Group#authorizingGroupMembership": {
                "description": "Adding or modifying users in this group requires permission from a member of the configured group.",
                "label": "Authorising group for membership"
              },
              "GroupClassification#requiredMonths": {
                "label": "Mandatory audit months",
                "description": "Select fixed months when groups with this classification must perform an audit."
              },
              "Group#nestedUnder": {
                "label": "Nested under"
              },
              "Group#authorizingGroupProvisioning": {
                "description": "To activate this group, permission is required from a member of the configured group.",
                "label": "Authorising group for activation"
              },
              "ProvisioningGroup#groupOnSystemDisplayName": {
                "label": "Display name"
              },
              "GroupPrimer#uuid": {
                "label": "UUID"
              },
              "GroupClassification#vaultRequiresActivation": {
                "label": "Require \"Activation required for vault access\"",
                "description": "Require the activation of the option \"Activation required for vault access\" for groups with this classification."
              },
              "Group#profileAdministration": {
                "description": "If enabled, members of this group can administer access profiles.",
                "label": "Access profile administration"
              },
              "GroupExtendedAccess#TWO_WEEKS": "Up to 2 weeks",
              "GroupGlobalRoleInfo#auditorGroupFor": {
                "description": "This group has the auditor role for the organization(s) above.",
                "label": "Auditor group for"
              },
              "GroupClient#vaultAccess": {
                "label": "Access to the vault",
                "description": "Give this application access to the vault of this group."
              },
              "GroupAuditConfig#months": {
                "description": "The months where every second tuesday a periodic group audit should be performed.",
                "label": "Periodic audit months"
              },
              "Group#recordTrail": {
                "description": "If enabled, it is required to give a reason when activating the group which is recorded in the audit log.",
                "label": "Record audit trail"
              },
              "GroupClassificationPrimer#uuid": {
                "label": "UUID"
              },
              "GroupGlobalRoleInfo#createGroupApproveGroupFor": {
                "description": "Requests to create new groups are handled by this group for the organization(s) above.",
                "label": "Approve 'Create group' for"
              },
              "GroupClassificationPrimer#name": {
                "label": "Name"
              },
              "GroupRights#MANAGER": "Management privileges",
              "GroupClient#activationRequired": {
                "description": "Activation of the group is required to login.",
                "label": "Activation required"
              },
              "GroupClassification#authorizingGroupMembershipRequired": {
                "description": "Require the activation of the option \"Authorising group for membership\" for groups with this classification.",
                "label": "Require \"Authorising group for membership\""
              },
              "GroupGlobalRoleInfo#enableTechAdminApproveGroupFor": {
                "label": "Approve 'Enable technical administration' for",
                "description": "Requests to enable technical administration on groups are handled by this group for the organization(s) above."
              },
              "Group#helpdesk": {
                "label": "Helpdesk for",
                "description": "Requests for resetting 2FA for this directory are handled by this group."
              },
              "ProvisioningGroup#activationRequired": {
                "label": "Activation required",
                "description": "Use dynamic account provisioning for this group."
              },
              "GroupGlobalRoleInfo#recoveryFallbackGroupFor": {
                "label": "Password recovery fallback group for",
                "description": "Password recovery requests for users with insufficient group managers are also sent to users in this group for the organization(s) above."
              },
              "GroupFolder#name": {
                "label": "Folder name"
              },
              "ProvisioningGroup#system": {
                "label": "Linked system"
              },
              "GroupClassification#authorizingGroupDelegationRequired": {
                "label": "Require \"Group with delegated privileges\"",
                "description": "Require the activation of the option \"Group with delegated privileges\" for groups with this classification."
              },
              "GroupAccount#provisioningPermissionEndTime": {
                "label": "Access granted until",
                "description": "The user has the option to activate the group until the shown time."
              },
              "ProvisioningGroup#group": {
                "label": "Group"
              },
              "GroupClassification#minimumNrManagers": {
                "label": "Minimum number of managers",
                "description": "Groups with this classification must have at least the number of managers specified here."
              },
              "Group#description": {
                "label": "Description"
              },
              "GroupAdminMail#body": {
                "label": "Body"
              },
              "GroupRights": {
                "MANAGER": "Management privileges",
                "NORMAL": "Normal privileges"
              },
              "VaultRecoveryAvailability#NONE": "Not available",
              "Group#auditinginfo": {
                "nrManagers": {
                  "label": "Managers"
                },
                "nrExpiredVaultRecords": {
                  "label": "Expired vault records"
                },
                "auditDueDate": {
                  "label": "Next audit"
                }
              },
              "GroupClassification#recordTrailRequired": {
                "label": "Require \"Record audit trail\"",
                "description": "Require the activation of the option \"Record audit trail\" for groups with this classification."
              },
              "Group#authorizingGroupAuditing": {
                "description": "Audits for this group are reviewed by a member of the configured group before being committed.",
                "label": "Authorising group for audits"
              },
              "GroupClient#client": {
                "label": "Application"
              },
              "Group#classification": {
                "label": "Classification",
                "description": "The classification of this group, as set by a member of the auditor group."
              },
              "GroupClassification#authorizingGroupAuditingRequired": {
                "description": "Require the activation of the option \"Authorising group for audits\" for groups with this classification.",
                "label": "Require \"Authorising group for audits\""
              },
              "GroupExtendedAccess#TWO_WEEKS_NO_CONFIRM": "Up to 2 weeks, without approval",
              "Group#initialManager": {
                "label": "Initial manager"
              },
              "GroupClassification#description": {
                "label": "Description"
              },
              "GroupPrimer#organizationalUnit": {
                "label": "Organisational unit"
              },
              "VaultRecoveryAvailability#RECOVERY_KEY_ONLY": "Only with the recovery key",
              "ProvisioningGroup#groupOnSystem": {
                "label": "Group on system"
              }
            },
            "license": {
              "KeyHubLicenseInfo#customerCompany": {
                "label": "Customer"
              },
              "KeyHubStatistics#activeProAccounts": {
                "label": "Active Pro accounts",
                "description": "Pro accounts also use a business license."
              },
              "LicenseFeature#GROUP_ACTIVATION": "Group activation",
              "KeyHubLicenseInfo#usersProLimit": {
                "label": "Number of Pro licenses"
              },
              "KeyHubStatistics#activeBusinessAccounts": {
                "label": "Active Business accounts"
              },
              "KeyHubLicenseInfo#expirationTime": {
                "label": "Expires at"
              },
              "LicenseFeature#CLUSTER_HA": "Clustering",
              "KeyHubLicenseInfo#usersHardLimit": {
                "label": "Number of licenses"
              },
              "LicenseFeature#COMPLIANCE_PLUS": "Compliance plus",
              "LicenseFeature#CLUSTER_HA_ENTERPRISE": "Enterprise clustering",
              "KeyHubLicenseInfo#customerDomains": {
                "label": "Domain(s)"
              },
              "LicenseFeature#NESTED_GROUPS": "Nested groups",
              "KeyHubLicenseInfo#features": {
                "label": "Licensed features"
              },
              "KeyHubStatistics#activeSessions": {
                "label": "Active sessions"
              },
              "LicenseFeature#OFFLINE_MODE": "Isolation mode",
              "KeyHubLicenseInfo#issueTime": {
                "label": "Issue date"
              },
              "KeyHubLicenseInfo#notBeforeTime": {
                "label": "Not before"
              },
              "LicenseFeature#ENTERPRISE_ORGANISATION": "Enterprise organisation",
              "KeyHubLicenseInfo#licenseKey": {
                "label": "License key"
              },
              "LicenseFeature#WORKFLOWS": "Workflows",
              "KeyHubLicenseInfo#uuid": {
                "label": "ID"
              },
              "LicenseFeature#SERVICE_ACCOUNTS": "Service accounts",
              "KeyHubLicenseInfo#usersBusinessLimit": {
                "label": "Number of Business licenses"
              },
              "KeyHubLicenseInfo#customerContact": {
                "label": "Contact"
              },
              "KeyHubStatistics#activeAccounts": {
                "label": "Active accounts"
              },
              "LicenseFeature#ILM": "Identity Lifecycle Management"
            },
            "provisioning": {
              "GroupOnSystemType#AZURE_UNIFIED_GROUP": "Microsoft 365",
              "ProvisionedAzureTenant#tenant": {
                "label": "Azure tenant"
              },
              "ProvisionedLDAP#gidNumbering": {
                "description": "Choose an existing number sequence for GIDs or start a new sequence.",
                "label": "Group ID (gid) sequence"
              },
              "ProvisionedSystemType#ACTIVE_DIRECTORY": "Active Directory",
              "ProvisionedSCIM#bearerToken": {
                "label": "Bearer Token"
              },
              "ProvisionedLDAPDirectory#sshPublicKeySupport": {
                "description": "Choose how an SSH public key should be placed on an account.",
                "label": "SSH public key"
              },
              "GroupOnSystemType#GROUP_GLOBAL_SECURITY": "group (global security)",
              "ProvisionedLDAPDirectory#gid": {
                "label": "Primary Group ID (gid)",
                "description": "The primary group for users"
              },
              "ProvisionedLDAPDirectory#gidNumbering": {
                "description": "Choose an existing number sequence for GIDs or start a new sequence.",
                "label": "Group ID (gid) sequence"
              },
              "AbstractProvisionedLDAP#userDN": {
                "description": "The RDN under base DN under which users are created.",
                "label": "User RDN"
              },
              "ProvisionedAzureOIDCDirectory#directory": {
                "description": "The client used for the directory must have permissions to assign groups to users.",
                "label": "Azure OIDC directory"
              },
              "ProvisionedSystem#shouldDestroyUnknownAccounts": {
                "label": "Remove unknown accounts",
                "description": "Accounts that are not known within Topicus KeyHub will be removed during a synchronization."
              },
              "GroupOnSystemType#ACCOUNT_ONLY": "Account-only provisioning",
              "ProvisionedSystemPrimer#uuid": {
                "label": "UUID"
              },
              "AbstractProvisionedLDAP#host": {
                "label": "Primary host"
              },
              "AbstractProvisionedLDAP#bindDN": {
                "description": "The DN used to bind with on the directory. This must be a fully qualified DN.",
                "label": "Bind DN",
                "placeholder": "CN=User Name,OU=group,DC=company,DC=local"
              },
              "ProvisionedSystem#externalUuid": {
                "label": "External UUID"
              },
              "ProvisionedSystemType#PROVISIONED_NAMESPACE": "Namespace",
              "GroupOnSystemType#GROUP_LOCAL_SECURITY": "group (local security)",
              "ProvisionedAzureTenant#clientId": {
                "label": "Client identifier"
              },
              "AbstractProvisionedLDAP#groupDN": {
                "description": "The RDN under base DN containing groups.",
                "label": "Group RDN"
              },
              "ProvisionedAzureOIDCDirectory#tenant": {
                "label": "Azure tenant"
              },
              "ProvisionedSystemType#SOURCE_AZURE_SYNC_LDAP_DIRECTORY": "Azure tenant with AD Connect",
              "GroupOnSystemPrimer#type": {
                "label": "Type"
              },
              "ProvisionedSystem#selfService": {
                "description": "Select the self-service options offered for this linked system.",
                "label": "Self-service"
              },
              "AbstractProvisionedLDAP#failoverHost": {
                "label": "Failover host",
                "description": "This host will be used as failover when primary host is unavailable. Connections are set up on the same port."
              },
              "ProvisionedLDAPDirectory#objectClasses": {
                "label": "Additional object classes",
                "description": "Specify additional values for the objectClass attribute for accounts, separated by spaces."
              },
              "AbstractProvisionedLDAP#bindPassword": {
                "description": "The password used to bind with on the directory.",
                "label": "Bind password"
              },
              "GroupOnSystem#provisioningEnabled": {
                "description": "When enabled, KeyHub will manage this group and its memberships on the linked system.",
                "label": "Provisioning enabled"
              },
              "ProvisionedLDAP#hashingScheme": {
                "label": "Password hashing",
                "description": "WARNING! Changing the hashing scheme will force all users to reconfigure their password for this system. SSHA stands for 'salted-SHA1', a weak algorithm supported by all LDAP servers. PBKDF2 is a strong hashing algorithm using 64k iterations of SHA512 but may require an additional module on OpenLDAP."
              },
              "ProvisionNumberSequence#name": {
                "label": "Name"
              },
              "ProvisionedInternalLDAP#client": {
                "label": "LDAP Client"
              },
              "ProvisionedSystemPrimer#name": {
                "label": "Name"
              },
              "ProvisionedLDAPDirectory#samAccountNameScheme": {
                "description": "Choose an option for filling in the SAM-Account-Name attribute. This may be used by legacy systems.",
                "label": "SAM-Account-Name"
              },
              "AbstractProvisionedLDAP#tls": {
                "label": "TLS"
              },
              "GroupOnSystemType#GROUP_OF_UNIQUE_NAMES": "groupOfUniqueNames",
              "ProvisionedSystemType#INTERNAL_LDAP": "Internal LDAP",
              "ProvisionedSystemType#LDAP": "LDAP",
              "ProvisionedSystem#contentAdministrator": {
                "description": "The contents of this linked system is administered by members of the selected group.",
                "label": "Content administrators group"
              },
              "ProvisionedSystem#owner": {
                "description": "Managers from the selected group control access to and administration of this linked system.",
                "placeholder": "Select a group...",
                "label": "Group with ownership"
              },
              "DeprovisionAction": {
                "NONE": {
                  "unwritableaccounts": "None, leave everything active",
                  "main": "None, leave everything active"
                },
                "DESTROY_ALL": {
                  "unwritableaccounts": "Permanently delete all groups",
                  "main": "Permanently delete all accounts, service accounts and groups"
                },
                "DEPROVISION_ACCOUNTS": {
                  "unwritableaccounts": "Deactivate all groups",
                  "main": "Disable all accounts and service accounts"
                },
                "DESTROY_ACCOUNTS": "Permanently delete all accounts and service accounts"
              },
              "GroupOnSystem#owner": {
                "label": "Group with ownership",
                "description": "Managers from the selected group control access to this group on the linked system."
              },
              "ProvisionedSystemSyncLog#modifications": {
                "label": "Applied modifications"
              },
              "ProvisionedAzureTenant#clientSecret": {
                "label": "Client secret"
              },
              "AbstractProvisionedLDAP#trustedCertificate": {
                "description": "The certificate of the server that must be trusted. This can also be one of the certificates used to sign that particular certificate.",
                "label": "Trusted certificate"
              },
              "ProvisionedSCIM#url": {
                "label": "URL"
              },
              "ProvisionedSCIM#authenticationScheme": {
                "label": "Authentication scheme"
              },
              "ProvisionedLDAPDirectory#accountsWritable": {
                "label": "Accounts writable",
                "description": "If checked, KeyHub also manages the accounts on the directory."
              },
              "ProvisionedLDAP#gid": {
                "description": "The primary group for users",
                "label": "Primary Group ID (gid)"
              },
              "GroupOnSystemProvisioning#PROVISIONED_BY_DEFAULT_CAN_ONLY_BE_ENABLED": "Enabled by default, cannot be disabled - KeyHub management of groups is enabled by default and can only be enabled.",
              "AbstractProvisionedLDAP#failoverTrustedCertificate": {
                "label": "Trusted certificate for failover",
                "description": "The certificate of the failover server that must be trusted. This can also be one of the certificates used to sign that particular certificate."
              },
              "GroupOnSystem#system": {
                "label": "Linked system"
              },
              "ProvisionedAD#samAccountNameScheme": {
                "description": "Choose an option for filling in the SAM-Account-Name attribute. This may be used by legacy systems.",
                "label": "SAM-Account-Name"
              },
              "AbstractProvisionedLDAP#baseDN": {
                "placeholder": "OU=department,DC=company,DC=local",
                "description": "The base DN under which the user and group DNs are located in the directory.",
                "label": "Base DN"
              },
              "ProvisionedSystem#technicalAdministrator": {
                "label": "Technical administrators group",
                "description": "The configuration of this linked system is administered by members of the selected group."
              },
              "GroupOnSystemProvisioning#NOT_PROVISIONED_BY_DEFAULT": "Disabled by default - KeyHub management of groups is disabled by default.",
              "AbstractProvisionedLDAP#port": {
                "label": "Port"
              },
              "ProvisionedAzureSyncLDAPDirectory#clientSecret": {
                "label": "Client secret"
              },
              "AbstractProvisionedLDAP#sshPublicKeySupport": {
                "description": "Choose how an SSH public key should be placed on an account.",
                "label": "SSH public key"
              },
              "ProvisionedSCIMVendor#AWS": "AWS",
              "ProvisionedSCIM#vendor": {
                "description": "Select the vendor for the correct SCIM dialect.",
                "label": "Vendor"
              },
              "GroupOnSystemProvisioning#PROVISIONED_BY_DEFAULT": "Enabled by default - KeyHub management of groups is enabled by default.",
              "ProvisionedSystemPrimer#organizationalUnit": {
                "label": "Organisational unit",
                "description": "The organisational unit this linked system belongs to. This linked system is also visible to organisational units under this unit."
              },
              "ProvisionedLDAP#numbering": {
                "label": "User ID (uid) sequence",
                "description": "Choose an existing number sequence for UIDs or start a new sequence."
              },
              "ProvisionedSystem#cleanupPeriod": {
                "description": "Specify after which period accounts must be cleaned up. Use 'd' for days, 'w' for weeks', 'm' for months and 'y' for years, for example '2w'.",
                "label": "Remove accounts after"
              },
              "AbstractProvisionedLDAP#attributes": {
                "label": "Custom attributes"
              },
              "AbstractProvisionedLDAP#objectClasses": {
                "label": "Additional object classes",
                "description": "Specify additional values for the objectClass attribute for accounts, separated by spaces."
              },
              "GroupOnSystemProvisioning#ALWAYS_PROVISIONED": "Always Enabled - All groups are fully managed by KeyHub.",
              "AbstractProvisionedLDAP#clientCertificate": {
                "description": "The certificate that must be used to authenticate to the server. A client certificate consists of the certificate itself and a corresponding private key.",
                "label": "Client certificate"
              },
              "GroupOnSystemProvisioning#NOT_PROVISIONED_BY_DEFAULT_CAN_ONLY_BE_ENABLED": "Disabled by default, cannot be disabled - KeyHub management of groups is disabled by default and can only be enabled.",
              "ProvisionedAzureSyncLDAPDirectory#directory": {
                "description": "Azure AD Connect must be activated on this Active Directory, which synchronizes with the chosen Azure tenant.",
                "label": "LDAP directory"
              },
              "ProvisionedNamespace#groupDN": {
                "label": "Group RDN",
                "description": "The RDN under base DN containing groups."
              },
              "AbstractProvisionedLDAP#serviceAccountDN": {
                "description": "The RDN under base DN under which service accounts are created.",
                "label": "Service account RDN"
              },
              "GroupOnSystemType#GROUP_OF_NAMES": "groupOfNames",
              "ProvisionedLDAPDirectory#attributes": {
                "label": "Custom attributes"
              },
              "ProvisionedSystemType": "Linked system",
              "ProvisionedAzureSyncLDAPDirectory#tenant": {
                "label": "Azure tenant"
              },
              "GroupOnSystemType#AZURE_SECURITY_GROUP": "Security group",
              "ProvisionedSCIM#attributes": {
                "label": "Custom attributes"
              },
              "ProvisionedSystem#usernamePrefix": {
                "label": "Username prefix",
                "description": "The prefix to apply to every username when it is created on the system. A dash will be used as separator."
              },
              "ProvisionedLDAPDirectory#groupDN": {
                "label": "Group DN",
                "description": "The DN of the selected directory containing groups."
              },
              "GroupOnSystemType#AZURE_ROLE": "Directory role",
              "GroupOnSystemPrimer#displayName": {
                "label": "Display name"
              },
              "LDAPSshPublicKeySupport#ALT_SECURITY_IDENTITIES": "In altSecurityIdentities",
              "ProvisionedSystem#groupOnSystemProvisioning": {
                "description": "Choose how Topicus KeyHub should manage the groups within this system.",
                "label": "Group provisioning"
              },
              "ProvisionedLDAPDirectory#numbering": {
                "description": "Choose an existing number sequence for UIDs or start a new sequence.",
                "label": "User ID (uid) sequence"
              },
              "ProvisionedSystemType#SOURCE_LDAP_DIRECTORY": "LDAP source directory",
              "ProvisionedAzureTenant#idpDomain": {
                "label": "Identity provider domain",
                "description": "With an identity provider domain set, users will be invited via that domain and log in via SSO."
              },
              "ADSamAccountNameScheme#TRANSFER": "Transfer value - Take the value from the sAMAccountName attribute on the account.",
              "ProvisionedNamespace#serviceAccountDN": {
                "label": "Service account RDN",
                "description": "The RDN under base DN under which service accounts are created."
              },
              "GroupOnSystemType#GROUP_UNKNOWN": "group (other)",
              "ProvisionNumberSequence#nextID": {
                "label": "Next ID"
              },
              "ADSamAccountNameScheme#USERNAME": "Username - Use the username, if it fits.",
              "ProvisionedSystemType#AZURE_TENANT": "Azure tenant",
              "ProvisionedSystem#status": {
                "label": "Status"
              },
              "LDAPSshPublicKeySupport#DISABLED": "Disabled",
              "ProvisionedSCIMVendor#DEFAULT": "Default",
              "GroupOnSystemType#POSIX_GROUP": "posixGroup",
              "ProvisionedSystemPrimer#active": {
                "label": "Enabled"
              },
              "ProvisionedSystemType#SOURCE_AZURE_OIDC_DIRECTORY": "Azure OIDC source directory",
              "ADSamAccountNameScheme#TRANSFER_TRUNCATE": "Transfer value and truncate - Take the value from the sAMAccountName attribute on the account and truncate if the result is too long.",
              "ProvisionedSystemSyncLog#createdAt": {
                "label": "Created at"
              },
              "ProvisionedSCIMVendor#KEYSTONE": "Keystone",
              "ProvisionedNamespace#baseSystem": {
                "label": "Base system"
              },
              "ADSamAccountNameScheme#OMIT": "Omit - The AD chooses a random value.",
              "GroupOnSystemType#GROUP_UNIVERSAL_SECURITY": "group (universal security)",
              "ProvisionedLDAPDirectory#directory": {
                "description": "The directory needs to be configured with write access.",
                "label": "LDAP directory"
              },
              "LDAPSshPublicKeySupport#SSH_PUBLIC_KEY": "In sshPublicKey via the ldapPublicKey objectClass",
              "ProvisionedSystemType#SCIM": "SCIM",
              "GroupOnSystemPrimer#nameInSystem": {
                "label": "Name on system"
              },
              "ProvisionedSystemSyncLog#errors": {
                "label": "Errors/warnings"
              },
              "ADSamAccountNameScheme#TRUNCATE": "Truncate username - The username is shortened to a maximum of 20 characters.",
              "ProvisionedAzureSyncLDAPDirectory#clientId": {
                "label": "Client identifier"
              }
            },
            "identity": {
              "AccountAttributeSource#EXTERNAL": "External source",
              "AccountAttributeSystemDefinition#MIDDLE_NAME": "Middle name",
              "AccountAttributeRule#attribute": {
                "label": "Attribute",
                "placeholder": "Select an attribute..."
              },
              "AccountAttributeSource#SELF_SERVICE": "Self-service",
              "AccountAttributeFormat#TEXT": "Text",
              "AccountAttributeFormat#TELEPHONE": "Phone number",
              "AccountAttributeSystemDefinition#USERNAME": "Username",
              "AccountAttributeRule#prioritySCIM": {
                "label": "Priority for SCIM",
                "description": "The priority (1-5) of a value provided via SCIM. A higher number gives this source priority over other sources. A missing value disables the source for this attribute."
              },
              "Identity#displayName": {
                "label": "Display name"
              },
              "AccountAttributeSource#SCIM": "SCIM",
              "AccountAttributeRule#updateAutomatically": {
                "label": "Update automatically",
                "description": "Automatically update the attribute when the calculated value changes."
              },
              "AccountAttributeSystemDefinition#TELEPHONE_PRIVATE": "Private phone number",
              "AccountAttributeFormat#BOOLEAN": "Boolean",
              "AccountAttributeDefinition#unique": {
                "label": "Unique"
              },
              "AccountAttributeValueSelectionStatus#IN_SYNC": "Synchronised",
              "AccountAttributeValueSelectionStatus#DUPLICATE": "Duplicate",
              "AccountAttributeSystemDefinition#DISPLAY_NAME": "Display name",
              "AccountAttributeSystemDefinition#EMAIL_PRIVATE": "Private email address",
              "AccountAttributeFormat#DATE": "Date",
              "AccountAttributeRule#priorityFormula": {
                "label": "Priority for the script",
                "description": "The priority (1-5) of a value calculated by the script. A higher number gives this source priority over other sources. A missing value disables the source for this attribute."
              },
              "Identity#givenName": {
                "label": "Given name"
              },
              "Identity#privateTelephone": {
                "label": "Private phone number"
              },
              "AccountAttributeRule#priorityExternalSource": {
                "description": "The priority (1-5) of a value provided by an external source. A higher number gives this source priority over other sources. A missing value disables the source for this attribute.",
                "label": "Priority for external sources"
              },
              "AccountAttributeRule#script": {
                "label": "Script",
                "description": "A script to calculate a value dynamically. Please refer to the manual for further explanation."
              },
              "AccountAttributeRule#allowSelfService": {
                "label": "Allow self-service",
                "description": "Users can provide a value for this attribute themselves. This value has priority over the other sources."
              },
              "AccountAttributeSystemDefinition#CAN_REQUEST_GROUPS": "Can request groups",
              "AccountAttributeSystemDefinition#FAMILY_NAME": "Family name",
              "AccountAttributeValueSelectionStatus#ERROR": "Error",
              "AccountAttributeRule#defaultValue": {
                "description": "This value is used if no value is available from any of the other sources.",
                "label": "Default value"
              },
              "Identity#middleName": {
                "label": "Middle name"
              },
              "AccountAttributeDefinition#format": {
                "label": "Format"
              },
              "AccountAttributeFormat#NUMBER": "Number",
              "Identity#privateEmail": {
                "label": "Private email address"
              },
              "AccountAttributeSystemDefinition#TELEPHONE": "Phone number",
              "AccountAttributeRule#priorityDirectory": {
                "label": "Priority for the directory",
                "description": "The priority (1-5) of a value read from the directory. A higher number gives this source priority over other sources. A missing value disables the source for this attribute."
              },
              "AccountAttributeSystemDefinition#GIVEN_NAME": "Given name",
              "AccountAttributeSource#FORMULA": "Script",
              "AccountAttributeSource#DEFAULT": "Default value",
              "AccountAttributeDefinition#list": {
                "label": "List"
              },
              "AccountAttributeValueSelectionStatus#INVALID": "Invalid",
              "AccountAttributeSource#OVERRIDE": "Manual override",
              "AccountAttributeDefinition#required": {
                "label": "Required"
              },
              "AccountAttributeRule#allowOverride": {
                "description": "Administrators can override the value for this attribute. This value always has priority over all other sources.",
                "label": "Allow manual override"
              },
              "AccountAttributeValueSelectionStatus#UNKNOWN": "Unknown",
              "Identity#familyName": {
                "label": "Family name"
              },
              "AccountAttributeFormat#EMAIL": "E-mail address",
              "AccountAttributeValueSelectionStatus#OUT_OF_SYNC": "Unsynchronised",
              "AccountAttributeSystemDefinition#EMAIL": "Email address",
              "AccountAttributeDefinition#name": {
                "label": "Name"
              },
              "AccountAttributeFormat#DATETIME": "Date/time",
              "AccountAttributeSystemDefinition#LICENSE": "License role",
              "AccountAttributeValueSelectionStatus#MISSING": "Missing",
              "Identity#telephone": {
                "label": "Phone number"
              },
              "AccountAttributeSource#DIRECTORY": "Directory"
            },
            "webhook": {
              "Webhook#trustedCertificate": {
                "label": "Trusted certificate",
                "description": "The certificate of the server that must be trusted. This can also be one of the certificates used to sign that particular certificate. For certificates issued officially this field can be left blank."
              },
              "Webhook#basicAuthPassword": {
                "label": "Password"
              },
              "Webhook#name": {
                "label": "Name"
              },
              "Webhook#clientCertificate": {
                "label": "Client certificate",
                "description": "The certificate that must be used to authenticate to the server. A client certificate consists of the certificate itself and a corresponding private key."
              },
              "Webhook#bearerToken": {
                "label": "Bearer Token"
              },
              "Webhook#authenticationScheme": {
                "label": "Authentication scheme"
              },
              "Webhook#customHeaderValue": {
                "label": "Header value"
              },
              "Webhook#system": {
                "label": "Linked system"
              },
              "Webhook#basicAuthUsername": {
                "label": "Username"
              },
              "Webhook#client": {
                "label": "Application"
              },
              "Webhook#url": {
                "label": "URL"
              },
              "Webhook#verbosePayloads": {
                "description": "If enabled, the full contents of the objects is added to the deliveries.",
                "label": "Verbose payloads"
              },
              "Webhook#account": {
                "label": "Account"
              },
              "Webhook#uuid": {
                "label": "UUID"
              },
              "Webhook#active": {
                "label": "Enabled"
              },
              "Webhook#tls": {
                "label": "TLS"
              },
              "Webhook#customHeaderName": {
                "label": "Header name"
              },
              "Webhook#group": {
                "label": "Group"
              },
              "Webhook#directory": {
                "label": "Directory"
              }
            },
            "client": {
              "ClientApplication#launchpadTile": {
                "label": "Launchpad tile"
              },
              "ClientApplicationPrimer#scopes": {
                "label": "Allowed scopes",
                "description": "The application can only request the selected scopes. For most applications, 'Profile' is sufficient."
              },
              "Saml2Client#idpCertificate": {
                "label": "IdP signing certificate",
                "description": "This certificate is used by Topicus KeyHub for signing the SAML2 messages."
              },
              "Saml2Client#metadataUrl": {
                "label": "Metadata URL"
              },
              "OAuth2ClientPermissionType": {
                "CLIENTS_QUERY": {
                  "main": "Read and query applications",
                  "context": "Read and query applications",
                  "long": "Applications - Read and query applications"
                },
                "PROVISIONEDSYSTEMS_QUERY": {
                  "long": "Linked systems - Read and query linked systems",
                  "main": "Read and query linked systems",
                  "context": "Read and query linked systems"
                },
                "ACCOUNTS_CREATE": {
                  "context": "Create new accounts",
                  "main": "Create new accounts",
                  "long": "Accounts - Create new accounts"
                },
                "GROUP_FULL_VAULT_ACCESS": {
                  "context": "Access to the vault of {group}",
                  "main": "Access the vault of a group",
                  "long": "Groups - Access the vault of a group"
                },
                "GROUP_LAUNCHPADTILES": {
                  "main": "Management of a group's launchpad tiles",
                  "long": "Groups - Management of a group's launchpad tiles",
                  "context": "Management of the launchpad tiles for {group}"
                },
                "GROUPS_CREATE": {
                  "context": "Create new groups",
                  "main": "Create new groups",
                  "long": "Groups - Create new groups"
                },
                "ACCOUNTS_QUERY": {
                  "main": "Read and query accounts",
                  "long": "Accounts - Read and query accounts",
                  "context": "Read and query accounts"
                },
                "GROUP_SET_AUTHORIZATION": {
                  "main": "Configure a group for additional authorisation or nesting",
                  "context": "Configure the group {group} for additional authorisation or nesting",
                  "long": "Groups - Configure a group for additional authorisation or nesting"
                },
                "ACCOUNTS_REMOVE": {
                  "main": "Remove accounts",
                  "context": "Remove accounts",
                  "long": "Accounts - Remove accounts"
                },
                "CLIENTS_CREATE": {
                  "main": "Create new applications",
                  "long": "Applications - Create new applications",
                  "context": "Create new applications within {group}"
                },
                "GROUPS_QUERY": {
                  "main": "Read and query groups",
                  "context": "Read and query groups",
                  "long": "Groups - Read and query groups"
                },
                "GROUP_READ_CONTENTS": {
                  "main": "Read group details",
                  "long": "Groups - Access group details",
                  "context": "Read the details of the group {group}"
                },
                "SERVICE_ACCOUNTS_CREATE": {
                  "main": "Create new service accounts",
                  "long": "Service accounts - Create new service accounts",
                  "context": "Create new service accounts on {system}"
                },
                "SERVICE_ACCOUNTS_UPDATE": {
                  "context": "Update service accounts for {group}",
                  "long": "Service accounts - Update service accounts",
                  "main": "Update service accounts"
                },
                "GROUPS_SET_CLASSIFICATION": {
                  "main": "Assign group classifications",
                  "long": "Groups - Assign group classifications",
                  "context": "Assign group classifications"
                },
                "GROUPONSYSTEM_CREATE": {
                  "long": "Groups on systems - Create new groups on systems",
                  "main": "Create new groups on systems",
                  "context": "Create new groups on the linked system {system}"
                },
                "SERVICE_ACCOUNTS_QUERY": {
                  "main": "Read and query service accounts",
                  "context": "Read and query service accounts",
                  "long": "Service accounts - Read and query service accounts"
                },
                "GROUPS_GRANT_PERMISSIONS_AFTER_CREATE": {
                  "context": "Grant applications permissions on a group at creation",
                  "long": "Groups - Grant applications permissions at creation",
                  "main": "Grant applications permissions on a group at creation"
                }
              },
              "LdapClient#clientCertificate": {
                "description": "When given, a client can use X509 client authentication in combination with a SASL external bind. The client will authenticate with the given certificate.",
                "label": "Client certificate"
              },
              "LdapClient#bindDn": {
                "description": "Use this DN for a simple bind. The secret is the corresponding password.",
                "label": "Bind DN"
              },
              "ClientApplicationPrimer#secret": {
                "label": "Secret"
              },
              "ClientApplication#owner": {
                "placeholder": "Select a group...",
                "description": "Managers from the selected group control access to and administration of this application.",
                "label": "Group with ownership"
              },
              "OAuth2ClientPermission#application": {
                "label": "Application"
              },
              "ClientApplicationType#SAML2": "SAML v2.0",
              "SubjectFormat#ID": "Primary identifier",
              "Saml2Client#attributes": {
                "label": "Custom attributes"
              },
              "OAuth2ClientProfile#BROWSER_BASED_APPLICATION_WITH_REFRESH_TOKEN": "Client-side browser application (with refresh tokens)",
              "SubjectFormat#UPN": "User Principal Name (UPN)",
              "OAuth2ClientProfile#BROWSER_BASED_APPLICATION": "Client-side browser application",
              "ClientApplicationType": "Application",
              "OAuth2ClientPermission#forGroup": {
                "label": "Group"
              },
              "OAuth2Client#attributes": {
                "label": "Custom attributes"
              },
              "OAuth2Client#idTokenClaims": {
                "description": "A space-separated list of claims. These claims are added to the 'id_token', even if the client does not explicitly request them to be added.",
                "label": "Claims for the id_token"
              },
              "ClientApplicationPrimer#clientId": {
                "label": "Client identifier"
              },
              "OAuth2ClientPermission#value": {
                "label": "Permission"
              },
              "Saml2Client#subjectFormat": {
                "label": "Subject format"
              },
              "ClientApplicationPrimer#uuid": {
                "label": "UUID"
              },
              "SubjectFormat#USERNAME": "Username",
              "OAuth2Client#initiateLoginURI": {
                "description": "The user will be redirected to this URI to initiate a login. This is required for IdP initiated login.",
                "label": "Initiate login URI"
              },
              "OAuth2Client#shareSecretInVault": {
                "label": "Save secret in vault",
                "description": "If enabled, the client's secret is automatically placed in the vault. When enabling on an existing client, the secret must be rotated to activate this option."
              },
              "OAuth2Client#useClientCredentials": {
                "description": "Choose the purpose of the application: Single sign-on or server-to-server authentication. This value cannot be changed when saved.",
                "label": "Supported grant types"
              },
              "OAuth2Client#vaultRecords": {
                "label": "Records in vault"
              },
              "ClientApplication#technicalAdministrator": {
                "description": "The configuration of this application is administered by members of the selected group.",
                "placeholder": "Select a group...",
                "label": "Technical administrators group"
              },
              "LdapClient#shareSecretInVault": {
                "description": "If enabled, the client's secret is automatically placed in the vault. When enabling on an existing client, the secret must be rotated to activate this option.",
                "label": "Save secret in vault"
              },
              "OAuth2Client#debugMode": {
                "label": "Debug mode",
                "description": "If enabled, Topicus KeyHub's REST API will return full errors to the client. Do not enable this on production systems."
              },
              "Saml2Client#metadata": {
                "label": "Manual metadata"
              },
              "OAuth2ClientProfile#CONFIDENTIAL_NATIVE_APPLICATION": "Native application with secret",
              "ClientApplicationType#LDAP": "LDAP",
              "ClientApplicationPrimer#name": {
                "label": "Name"
              },
              "OAuth2Client#profile": {
                "description": "Choose the profile that best matches with the application. Consult the manual for a detailed description of the profiles.",
                "label": "Application profile"
              },
              "OAuth2Client#callbackURI": {
                "label": "Application URIs",
                "description": "The application's URIs. Only requests from these URIs are accepted. One URI per line."
              },
              "OAuth2ClientProfile#PUBLIC_NATIVE_APPLICATION": "Public native application",
              "OAuth2ClientPermission#forSystem": {
                "label": "Linked system"
              },
              "OAuth2ClientProfile#WEB_APPLICATION": "Server-side web application",
              "OAuth2Client#resourceURIs": {
                "label": "Allowed resource URIs",
                "description": "Allowed URIs for resource indicators. Topicus KeyHub can be used as authorisation server for these resource servers."
              },
              "OAuth2Client#showLandingPage": {
                "label": "Show landing page",
                "description": "If enabled, a landing page is shown before navigating to the application. Enable this option if the application is a native desktop application and the browser window is stuck on the login."
              },
              "OAuth2ClientProfile#SERVER_TO_SERVER": "Server-to-server application",
              "SubjectFormat#EMAIL": "E-mail address",
              "OAuth2ClientProfile#PUBLIC_NATIVE_APPLICATION_WITH_SECURE_STORAGE": "Public native application with secure storage",
              "ClientApplicationType#OAUTH2": "OAuth2/OIDC"
            },
            "vault": {
              "VaultRecordWarningPeriod#TWO_WEEKS": "Remind me two weeks in advance",
              "VaultRecordColor#ANDROID_GREEN": "Android",
              "DeletedVaultRecovery#prefix": {
                "label": "Prefix",
                "description": "This prefix will be added to the name of every record during recovery."
              },
              "VaultRecord#holder": {
                "label": "Vault"
              },
              "MoveVaultRecordAction#SHARE": "Share",
              "VaultRecordWarningPeriod#AT_EXPIRATION": "Don't remind me in advance",
              "VaultRecord#totp": {
                "description": "Save a TOTP/2FA key to automatically generate 6 digit codes for 2FA. This key is often shown together with a QR code when pairing 2FA.",
                "label": "TOTP/2FA key"
              },
              "VaultRecordPrimer#name": {
                "placeholder": "(required)",
                "label": "Name"
              },
              "VaultRecordColor#GREEN": "Green",
              "MoveVaultRecord#shareDuration": {
                "description": "After this duration the vault record is automatically removed from the target vault.",
                "label": "Share for a limited duration"
              },
              "VaultHolderType#CLIENT": "Application vault",
              "VaultRecord#url": {
                "description": "A link (URL) that points to the application. This is usually 'https://', but for example 'rdp://' can be used for a link to a remote desktop.",
                "label": "Link"
              },
              "VaultRecovery#account": {
                "label": "User"
              },
              "MoveVaultRecordAction#MOVE": "Move",
              "VaultRecordColor#RED": "Red",
              "MoveVaultRecord#target": {
                "label": "Target"
              },
              "VaultUnlock#password": {
                "placeholder": "* * *"
              },
              "VaultRecordColor#SAGE": "Sage",
              "VaultRecord#file": {
                "placeholder": "Choose a file",
                "label": "File"
              },
              "VaultRecordColor#PINK_LAVENDER": "Pink",
              "DeletedVaultHolder#type": {
                "label": "Type"
              },
              "VaultHolderType#ACCOUNT": "Personal vault",
              "VaultRecordWarningPeriod#SIX_MONTHS": "Remind me six months in advance",
              "DeletedVaultHolder#name": {
                "label": "Name"
              },
              "VaultRecordPrimer#uuid": {
                "label": "UUID"
              },
              "VaultRecordWarningPeriod#THREE_MONTHS": "Remind me three months in advance",
              "VaultRecordColor#ARTICHOKE": "Artichoke",
              "VaultRecordWarningPeriod#ONE_MONTH": "Remind me one month in advance",
              "VaultRecord#endDate": {
                "description": "Indicate until when this record is valid and attach a warning to the expiration of the rule. This is purely indicative.",
                "label": "End date"
              },
              "DeletedVaultHolder#records": {
                "label": "Records"
              },
              "VaultRecord#comment": {
                "label": "This comment is stored encrypted."
              },
              "DeletedVaultRecovery#privateKey": {
                "placeholder": "Recovery private key",
                "label": "Recovery private key"
              },
              "MoveVaultRecord#account": {
                "label": "User"
              },
              "VaultRecordWarningPeriod#TWO_MONTHS": "Remind me two months in advance",
              "VaultRecovery#privateKey": {
                "label": "Recovery private key",
                "placeholder": "Recovery private key"
              },
              "VaultRecordColor#MIDDLE_YELLOW": "Yellow",
              "VaultHolderType#GROUP": "Group vault",
              "VaultRecordWarningPeriod#NEVER": "Don't remind me",
              "VaultRecordColor#CRIMSON_RED": "Crimson",
              "DeletedVaultRecovery#targetGroup": {
                "label": "Target",
                "placeholder": "Select a group"
              },
              "MoveVaultRecord#action": {
                "label": "Action"
              },
              "VaultRecordColor#DARK": "Dark",
              "VaultRecordColor#NONE": "No color",
              "VaultRecordColor#BLUE": "Blue",
              "MoveVaultRecordAction#COPY": "Copy",
              "VaultRecord#username": {
                "label": "Username"
              },
              "VaultRecord#password": {
                "label": "Password/secret"
              },
              "MoveVaultRecord#group": {
                "label": "Group"
              },
              "VaultRecord#launchpadTile": {
                "label": "Launchpad tile"
              }
            },
            "config": {
              "Settings#responsibleDisclosure": {
                "description": "Provide the responsible disclosure, as it is used by your company. This responsible disclosure will be accessible via KeyHubs login page. It is allowed to use HTML in this field.",
                "label": "Responsible disclosure"
              },
              "Settings#auditorGroup": {
                "label": "Auditor group",
                "description": "The group that has access to the auditor dashboards."
              },
              "Settings#passwordGenerator": {
                "label": "Password generation",
                "description": "Choose a password generation strategy. 'KEYHUB' is a strong generator, consult the manual for other options."
              },
              "NotificationCentreSettings#hideLinksInEmails": {
                "description": "Removes the links to KeyHub from emails sent by Topicus KeyHub.",
                "label": "No links in emails"
              },
              "Settings#removeGroupApproval": {
                "description": "Requests to remove groups are handled by the chosen group.",
                "label": "Approve 'Remove group'"
              },
              "Settings#performanceLogging": {
                "description": "Enable verbose logging to troubleshoot performance issues.",
                "label": "Verbose performance logging"
              },
              "Settings#provisioningTracing": {
                "label": "Verbose provisioning logging",
                "description": "Enable verbose provisioning logging to troubleshoot issues with accountprovisioning."
              },
              "Settings#enableTechAdminApproval": {
                "description": "Requests to enable technical administration on groups are handled by the chosen group.",
                "label": "Approve 'Enable technical administration'"
              },
              "Settings#auditRecordPseudonymization": {
                "description": "Specify when the usernames should be removed from the audit log. Use 'm' for months and 'y' for years, for example '5y'.",
                "label": "Audit log pseudonymisation"
              },
              "Settings#domain": {
                "description": "The domain to use as a qualifier for accounts when needed to communicate with third parties, such as SAML v2.0 clients and the LDAP naming context. Choose this domain carefully, because changes at a later moment are very likely to disconnect SSO-solutions.",
                "label": "Domain"
              },
              "Settings#createGroupApproval": {
                "label": "Approve 'Create group'",
                "description": "Requests to create new groups are handled by the chosen group."
              },
              "VaultRecoveryKey#privateKey": {
                "placeholder": "The old private key",
                "description": "Upload the old, to be replaced, private key. This can be left blank in case the old key is no longer available. This will make it impossible to recover vaults until they are opened at least once."
              },
              "Settings#twoFactorAuthTimeout": {
                "label": "2FA authentication timeout",
                "description": "Set the validity period of 2FA authentication. Use 'm' for minutes, 'h' for hours and 'd' for days, for example '7d'."
              },
              "Settings#recoveryFallback": {
                "label": "Password recovery fallback group",
                "description": "Password recovery requests for users with insufficient group managers are also sent to users in the chosen group."
              },
              "Settings#idpCertificate": {
                "label": "IdP signing certificate"
              },
              "Settings#brandingLogo": {
                "placeholder": "Branding logo",
                "label": "Branding logo",
                "description": "Choose a .png file to brand Topicus KeyHub with your company logo. This logo must be 540 by 280 pixels."
              },
              "Settings#maintenanceMessage": {
                "label": "Maintenance message",
                "description": "Show a maintenance message to all users within Topicus KeyHub."
              },
              "NotificationCentreSettings#licenseUserWarning": {
                "label": "User reserve",
                "description": "The number of users to be kept in reserve. A warning will be sent as soon as less than this number of users are available within the license."
              },
              "Settings#ldapServerCertificate": {
                "description": "This certificate is used for the internal LDAP server. This server only allows secure connections and cannot be used without a certificate.",
                "label": "LDAP server certificate"
              },
              "NotificationCentreSettings#emailSender": {
                "label": "Sender address for E-mail",
                "description": "If set, Topicus KeyHub will send e-mails with this sender address. If this is left blank, the e-mail address of the user will be used as the sender."
              },
              "VaultRecoveryKey#publicKey": {
                "description": "This key is used to recover access to vaults. Without a recover key, vaults cannot be used.",
                "placeholder": "Choose a public key file"
              },
              "Settings#createGroupPlaceholder": {
                "label": "Hint for new group names",
                "description": "This hint is shown to users when requesting new groups."
              },
              "NotificationCentreSettings#emailSignature": {
                "label": "Email signature",
                "description": "The signature under every email sent by Topicus KeyHub."
              },
              "Settings#passwordMinLength": {
                "description": "Choose a value between 8 and 20. For optimum security, it is recommended to choose a value of 12 or higher.",
                "label": "Minimum password length"
              },
              "Settings#vaultRecoveryKey": {
                "label": "Public key for recovery"
              },
              "Settings#auditRecordRetention": {
                "label": "Audit log retention",
                "description": "Specify how long the audit log should be kept. Use 'm' for months and 'y' for years, for example '5y'."
              },
              "Settings#passwordAuthTimeout": {
                "description": "Set the validity period of password authentication. Use 'm' for minutes, 'h' for hours and 'd' for days, for example '4h'.",
                "label": "Password authentication timeout"
              },
              "Settings#defaultLicenseRole": {
                "label": "Default license role",
                "description": "New accounts will get this license role."
              },
              "Settings#webSessionTimeout": {
                "label": "Web session timeout",
                "description": "Set the validity period of web session. Use 'm' for minutes and 'h' for hours, for example '4h'."
              }
            },
            "identitysource": {
              "IdentitySourcePrimer#uuid": {
                "label": "UUID"
              },
              "AFASIdentitySource#token": {
                "label": "Token"
              },
              "IdentitySourcePrimer#name": {
                "label": "Name"
              },
              "AFASIdentitySource#url": {
                "label": "URL"
              },
              "IdentitySourcePrimer#active": {
                "label": "Enabled"
              }
            },
            "TLSLevel#UNSECURE": "No",
            "launchpad": {
              "SsoApplicationLaunchpadTile#uri": {
                "label": "Link"
              },
              "ManualLaunchpadTile#uri": {
                "label": "Link"
              },
              "LaunchpadTile#logo": {
                "label": "Logo",
                "description": "Click to upload a custom logo."
              },
              "ManualLaunchpadTile#title": {
                "label": "Title"
              },
              "SsoApplicationLaunchpadTile#ssoIdpInitiatedFlow": {
                "label": "Use an IdP-initiated login"
              },
              "LaunchpadTile#group": {
                "label": "Group"
              }
            },
            "HttpAuthenticationScheme#BASIC": "Basic authentication",
            "TLSLevel#VERIFIED": "Client authentication",
            "serviceaccount": {
              "ServiceAccountPrimer#active": {
                "label": "Enabled"
              },
              "ServiceAccount#sshPublicKey": {
                "placeholder": "ssh-rsa AAAAB3NzaC1...",
                "label": "SSH Public key"
              },
              "ServiceAccount#description": {
                "label": "Description"
              },
              "PasswordRotationScheme#MANUAL_STORED_IN_VAULT": "Manual",
              "ServiceAccountPrimer#name": {
                "label": "Name"
              },
              "PasswordRotationScheme#DAILY": "Automatic (daily)",
              "ServiceAccountPrimer#uuid": {
                "label": "UUID"
              },
              "ServiceAccount#secret": {
                "label": "Password"
              },
              "ServiceAccount#passwordRotation": {
                "label": "Password rotation"
              },
              "ServiceAccount#technicalAdministrator": {
                "label": "Technical administrators group",
                "description": "The configuration of this service account is administered by members of the selected group."
              },
              "PasswordRotationScheme#MANUAL": "Manual (do not store in the vault)",
              "ServiceAccountPrimer#username": {
                "label": "Username"
              },
              "ServiceAccountPrimer#system": {
                "label": "Linked system"
              }
            },
            "certificate": {
              "CertificatePrimer#uuid": {
                "label": "UUID"
              },
              "CertificatePrimer#alias": {
                "label": "Certificate alias"
              },
              "CertificatePrimer#certificateData": {
                "label": "Certificate",
                "placeholder": "Choose a public certificate file (PEM)"
              },
              "Certificate#keyData": {
                "placeholder": "Choose a private key file (PEM)"
              }
            },
            "TLSLevel#ENCRYPTED": "TLS without validation (unsecure)",
            "TLSLevel#VERIFIED_PINNED": "Client authentication - Pinned certificate",
            "HttpAuthenticationScheme#CUSTOM": "Custom",
            "HttpAuthenticationScheme#NONE": "None",
            "TLSLevel#SECURE_PINNED": "Yes - Pinned certificate",
            "HttpAuthenticationScheme#BEARER": "Bearer Token",
            "TLSLevel#SECURE": "Yes"
          }
        },
        "system": {
          "ApplianceStatus#emailUnconfigured": {
            "label": "E-mail configuration",
            "description": "As long as the e-mail configuration is not complete, Topicus KeyHub cannot send notifications. It is also not possible to send the activation e-mails for internal accounts."
          },
          "HotfixMetadata#cluster": {
            "label": "For clusters"
          },
          "replication": {
            "ReplicationNodeInfo#sshReachable": {
              "label": "SSH reachable"
            },
            "PgpoolBackendRole#UNKNOWN": "Unknown",
            "ReplicationProblem#MULTIPLE_PRIMARY_DATABASES": "There are multiple primary databases in the cluster, including this node.",
            "PgpoolBackendNodeInfo#auditRecordCount": {
              "label": "Number of audit records",
              "description": "The number of audit records in the last 2 weeks."
            },
            "PgpoolBackendNodeInfo#status": {
              "label": "Status"
            },
            "PgpoolQuorumStatus#QUORUM_ABSENT": "Quorum absent",
            "ReplicationProblem#APPLICATION_NOT_READY": "The application on this node is unvailable.",
            "PgpoolBackendNodeInfo#primary": {
              "label": "Primary database"
            },
            "ReplicationProblem": {
              "short#APPLICATION_NOT_READY": "Application unavailable",
              "short#APPLICATION_NOT_LIVE": "Application offline",
              "short#NONE": "Ok",
              "short#NODE_DISABLED": "Node disabled",
              "short#SSH_UNREACHABLE": "SSH unreachable",
              "short#PGPOOL_DOWN": "Pgpool offline",
              "short#MULTIPLE_PRIMARY_DATABASES": "Multiple primary databases",
              "short#DATABASE_DOWN": "Database offline",
              "short#DATABASE_DETACHED": "Database detached",
              "short#DATABASE_INCONSISTENT": "Database inconsistent",
              "short#NODE_UNREACHABLE": "Cluster link unreachable",
              "short#NO_PRIMARY_DATABASE": "No primary database",
              "short#NOT_FOLLOWING_PRIMARY": "Wrong primary database"
            },
            "PgpoolWatchdogStatus#STANDING_FOR_LEADER": "Standing for leader",
            "ReplicationProblem#DATABASE_DOWN": "This cluster node is not running a database instance.",
            "PgpoolWatchdogStatus#ADD_MESSAGE_SENT": "Add message sent",
            "PgpoolBackendRole#PRIMARY": "Primary",
            "ReplicationInfo#pgPrimary": {
              "label": "Primary database"
            },
            "ReplicationNodeInfo#readyStatus": {
              "label": "Availabilty"
            },
            "ReplicationInfo#checkedAt": {
              "label": "Refreshed at"
            },
            "ReplicationNodeInfo#liveStatus": {
              "label": "Application status"
            },
            "PgpoolWatchdogStatus#IN_NETWORK_TROUBLE": "In network trouble",
            "PgpoolWatchdogStatus#NETWORK_ISOLATION": "Network isolation",
            "PgpoolBackendStatus#QUARANTINE": "Quarantine",
            "PgpoolQuorumStatus#UNKNOWN": "Unknown",
            "PgpoolBackendNodeInfo#lastAuditRecord": {
              "label": "Last audit record at"
            },
            "ReplicationNodeInfo#reachable": {
              "label": "Cluster link adres reachable"
            },
            "PgpoolWatchdogNodeInfo#status": {
              "label": "Status"
            },
            "NodeHealthStatus#UP": "Available",
            "ReplicationProblem#DATABASE_DETACHED": "The database on this cluster node has been detached.",
            "PgpoolWatchdogStatus#INITIALIZING": "Initializing",
            "ReplicationNodeInfo#minionId": {
              "label": "Identifier"
            },
            "PgpoolBackendNodeInfo#firstAuditRecord": {
              "label": "First audit record at"
            },
            "ReplicationProblem#NODE_DISABLED": "The node is disabled.",
            "PgpoolWatchdogInfo#quorumStatus": {
              "label": "Pgpool quorum status"
            },
            "ReplicationProblem#NO_PRIMARY_DATABASE": "None of the cluster nodes is running the primary database.",
            "PgpoolWatchdogStatus#PARTICIPATING_IN_ELECTION": "Participating in election",
            "PgpoolBackendNodeInfo#lastStatusChange": {
              "label": "Last status change"
            },
            "ReplicationInfo#availableNodes": {
              "label": "Available nodes"
            },
            "ReplicationProblem#NOT_FOLLOWING_PRIMARY": "The database on this cluster node is not replicating from the primary database.",
            "PgpoolBackendStatus#UP": "Up",
            "ReplicationProblem#SSH_UNREACHABLE": "The node is unreachable via SSH (port 50022).",
            "PgpoolBackendNodeInfo#role": {
              "label": "Role"
            },
            "PgpoolBackendNodeInfo#dbSize": {
              "label": "Database size"
            },
            "PgpoolWatchdogStatus#STANDBY": "Standby",
            "ReplicationProblem#APPLICATION_NOT_LIVE": "The application on this node is offline.",
            "ReplicationNodeInfo#tkhVersion": {
              "label": "Topicus KeyHub version"
            },
            "ReplicationProblem#DATABASE_INCONSISTENT": "The database on this cluster node is not replicating correctly.",
            "ReplicationNodeInfo#status": {
              "label": "Status"
            },
            "NodeHealthStatus#DOWN": "Unavailable",
            "PgpoolQuorumStatus#QUORUM_IS_ON_THE_EDGE": "Quorum is on the edge",
            "PgpoolBackendNodeInfo#replicationStateAbbr": {
              "label": "Replication state"
            },
            "PgpoolWatchdogStatus#LEADER": "Leader",
            "PgpoolWatchdogStatus#DEAD": "Dead",
            "PgpoolWatchdogStatus#LOADING": "Loading",
            "PgpoolBackendStatus#WAITING": "Waiting",
            "PgpoolQuorumStatus#NO_CLUSTER": "No cluster configured",
            "ReplicationProblem#NODE_UNREACHABLE": "The node is unreachable via its cluster link.",
            "ReplicationProblem#PGPOOL_DOWN": "This cluster node is not running pgpool or pgpool cannot join the cluster.",
            "PgpoolWatchdogStatus#SHUTDOWN": "Shutdown",
            "PgpoolWatchdogStatus#LOST": "Lost",
            "PgpoolBackendNodeInfo#replicationDelay": {
              "label": "Replication delay"
            },
            "PgpoolBackendStatus#DOWN": "Down",
            "PgpoolQuorumStatus#QUORUM_EXIST": "Quorum exist",
            "PgpoolBackendStatus#UNUSED": "Unused",
            "PgpoolWatchdogNodeInfo#nodeName": {
              "label": "Name"
            },
            "PgpoolWatchdogStatus#JOINING": "Joining",
            "ReplicationNodeInfo#host": {
              "label": "External IP address"
            },
            "PgpoolQuorumStatus#NO_LEADER_NODE": "No leader node",
            "ReplicationInfo#totalNodes": {
              "label": "Number of nodes"
            },
            "PgpoolBackendRole#STANDBY": "Standby",
            "PgpoolWatchdogNodeInfo#hostname": {
              "label": "Cluster link address"
            }
          },
          "stats": {
            "ApplicationStatusType#RUNNING": "Running",
            "ApplicationStatusType#SNAPSHOT_INVALID": "Snapshot invalid",
            "ApplicationStatusType#SNAPSHOT_CREATED": "Snapshot created",
            "ApplicationStatusType#MAINTENANCE_MODE": "Maintenance",
            "ApplicationStatusType#RESTORING_SNAPSHOT": "Restoring snapshot",
            "ApplicationStatusType#OFFLINE": "Offline"
          },
          "cron": {
            "ScheduledUpdateInfo#keyHubUpdates": {
              "label": "Topicus KeyHub updates",
              "description": "Automatically update Topicus KeyHub to the latest version."
            },
            "ScheduledUpdateInfo#systemUpdates": {
              "description": "Automatically install system updates.",
              "label": "System updates"
            },
            "AbstractScheduledTaskInfo#enabled": {
              "label": "Enabled"
            },
            "AbstractScheduledTaskInfo#schedule": {
              "description": "In the format: minute hour day-of-month month day-of-week (sunday is 0).",
              "label": "Cron expression"
            },
            "ScheduledUpdateInfo#reboot": {
              "label": "Reboot",
              "description": "Automatically reboot after an update if required."
            }
          },
          "HotfixMetadata#description": {
            "label": "Description"
          },
          "ApplianceStatus#pgMajorVersion": {
            "label": "Database version"
          },
          "HotfixMetadata#max_version": {
            "label": "Up to version"
          },
          "ApplianceStatus#osMajorRelease": {
            "label": "Operating system version"
          },
          "ApplianceStatus#sshAuthenticationUnconfigured": {
            "label": "SSH authentication",
            "description": "No SSH authentication is configured. As a result, it is not possible to log in via SSH."
          },
          "ApplianceStatus#rebootRequired": {
            "label": "Reboot required",
            "description": "A reboot of the appliance is required to finish the installation of the updates."
          },
          "HotfixMetadata#offline": {
            "label": "For installs in isolation mode"
          },
          "HotfixMetadata#aws": {
            "label": "For AWS"
          },
          "config": {
            "SaltPillarMTAEncryption#NONE": "None",
            "SaltPillarMTAEncryption#TLS": "TLS/StartTLS",
            "SaltPillarMTAEncryption#SSL": "SSL/SMTPS"
          },
          "HotfixMetadata#letsencrypt": {
            "label": "For Let's Encrypt"
          },
          "ApplianceStatus#keyhubVersion": {
            "label": "Topicus KeyHub version"
          },
          "ApplianceStatus#coordinator": {
            "description": "This node is not the cluster coordinator. Configuration changes can only be made from the cluster coordinator. Click on 'Promote to cluster coordinator' to move the role of coordinator to this node."
          },
          "HotfixMetadata#name": {
            "label": "Name"
          },
          "HotfixMetadata#azure": {
            "label": "For Azure"
          },
          "ApplianceStatus#lastUpdateCheck": {
            "label": "Updates"
          },
          "ApplianceStatus#availableUpdates": {
            "label": "Available system updates"
          },
          "HotfixMetadata#min_version": {
            "label": "From version"
          },
          "ApplianceStatus#lastBackup": {
            "label": "Backups"
          }
        },
        "rest": {
          "mail": {
            "GroupAccountChangeType": {
              "ADDED_TO_GROUP": {
                "NORMAL": {
                  "endDate": "You have become a member of the group \"{groupName}\". Your membership ends on {endDate}.",
                  "main": "You have become a member of the group \"{groupName}\"."
                },
                "MANAGER": {
                  "endDate": "You have become a manager of the group \"{groupName}\". Your membership ends on {endDate}.",
                  "main": "You have become a manager of the group \"{groupName}\"."
                }
              },
              "NESTING_SETUP": "The group \"{groupName}\" has been nested under the group \"{parentGroupName}\". Your account in \"{groupName}\" has been added or modified accordingly.",
              "MODIFIED": {
                "MANAGER": {
                  "main": "Your group membership of the group \"{groupName}\" has been changed. You now have management privileges with no end date on your group membership.",
                  "endDate": "Your membership of the group \"{groupName}\" has been changed. You now have management privileges and your membership ends on {endDate}."
                },
                "NORMAL": {
                  "main": "Your group membership of the group \"{groupName}\" has been changed. You now have normal privileges with no end date on your group membership.",
                  "endDate": "Your membership of the group \"{groupName}\" has been changed. You now have normal privileges and your membership ends on {endDate}."
                }
              },
              "REMOVED_FROM_GROUP": "Your account has been removed from the group \"{groupName}\".",
              "GROUP_REMOVED": "The group \"{groupName}\" has been removed.",
              "NESTING_DISCONNECTED": "The group \"{groupName}\" is no longer nested under the group \"{parentGroupName}\". Your account in \"{groupName}\" has accordingly been removed from the group."
            },
            "AuthenticationChangeType": {
              "WEBAUTHN_KEY_ADDED": "A WebAuthn security key has been added",
              "ACCOUNT_USERNAME_CHANGED": "The username for your account has been changed to {username}",
              "ACCOUNT_EMAIL_CHANGED": "The email address for your account has been changed to {email}",
              "TOTP_DISABLED": "TOTP has been disabled",
              "REREGISTRATION_DISABLED": "Your account relocation or rename has been aborted",
              "PASSWORD_UPDATED": "Your password or your password settings have been changed",
              "TOTP_ENABLED": "TOTP has been enabled",
              "REREGISTRATION_ENABLED": "Your account has been marked for relocation or renaming by a KeyHub administrator",
              "ACCOUNT_REREGISTERED": "Your account has been moved or renamed",
              "WEBAUTHN_KEY_REMOVED": "A WebAuthn security key has been removed"
            }
          }
        },
        "filter": {
          "AuditRecordFilter#after": {
            "label": "From"
          },
          "AuditRecordFilter#before": {
            "label": "Up to (not included)"
          }
        }
      },
      "cobra": {
        "restcontract": {
          "model": {
            "auth": {
              "UserAccountInfo#sub": {
                "label": "Username"
              },
              "UserAccountInfo#name": {
                "label": "Name"
              },
              "UserAccountInfo#email": {
                "label": "E-mail"
              }
            }
          }
        }
      }
    }
  },
  "page": {
    "title": {
      "logindone": "Login completed",
      "internaldirectory": "Internal directory",
      "login": "Login",
      "auditorgroupauditlog": "Group audit log",
      "registreer": {
        "resync": "Update your password",
        "pwd": "Choose your password",
        "2fa": "Setup Two-factor authentication",
        "group": "Request groups",
        "account": "Register a new account",
        "resetpwd": "Reset password"
      },
      "provisionedldap": "Linked LDAP",
      "provisionedazuresyncdirectory": "Linked Azure tenant with AD Connect",
      "organizationalunit": {
        "main": "Organisational unit",
        "settings": "Settings",
        "movegroups": {
          "confirm": "Confirm move",
          "select": "Select groups to move"
        },
        "clients": "Applications",
        "accounts": "Accounts"
      },
      "oidcdirectory": "OIDC Directory",
      "auditoraccountauditlog": "Account audit log",
      "attrdefs": "Account attribute definitions",
      "account": {
        "sessies": "Sessions",
        "consent": "Consent given to applications",
        "pwd": "Configure password management",
        "profile": "Profile",
        "main": "Account"
      },
      "authorizedgroupsdashboard": "Dashboard for authorised groups",
      "accessprofiles": "Access profiles",
      "group": {
        "accounts": "Accounts",
        "main": "Group",
        "koppelingen": "Linked system",
        "applications": "Applications"
      },
      "system": {
        "namespaces": "Namespaces",
        "groups": "Groups",
        "groupsinsystem": "Groups on system",
        "synclogs": "Synchronisations",
        "accessprofiles": "Access profiles",
        "permissions": "Issued permissions"
      },
      "provisionedad": "Linked Active Directory",
      "provisionedinternalldap": "Internal LDAP",
      "accounts": {
        "overview": "User accounts",
        "attributes": "Attributes",
        "bulkedit": "Bulk edit accounts",
        "cleanup": "Clean up accounts",
        "service": "Service accounts"
      },
      "backups": "Backups",
      "applications": "Applications",
      "applicationaudit": "Application audit log",
      "provisionedazureoidcdirectory": "Linked Azure OIDC source directory",
      "auditorgroupdetails": "Group details",
      "tokenprompt": "Verification code",
      "mygroupfolders": "Dashboard layout",
      "webhook": "Webhook",
      "ldapapplication": "LDAP Application",
      "requestgroup": "Request access to a group",
      "auditorserviceaccountauditlog": "Service account audit log",
      "passwordprompt": "Password",
      "launchpad": "Launchpad",
      "logs": "Logs",
      "internalaccount": "Internal account",
      "provisionedldapdirectory": "Linked LDAP source directory",
      "inloggen": "Sign in",
      "oauth2application": "OAuth2/OIDC Application",
      "auditoraccountsdashboard": "Auditor dashboard accounts",
      "identitysources": "Identity sources",
      "device": "Login on another device",
      "ldapdirectory": "LDAP Directory",
      "responsibledisclosure": "Responsible disclosure",
      "error": "Error",
      "saml2application": "SAML v2.0 Application",
      "application": {
        "groups": "Groups",
        "accessprofiles": "Access profiles"
      },
      "directories": "Directories",
      "supportdumps": "Support dumps",
      "accessprofile": "Access profile",
      "consent": "Give consent",
      "sequences": "Number sequences",
      "classification": "Classification",
      "provisionednamespace": "Namespace",
      "auditorgroupsdashboard": "Auditor dashboard groups",
      "mygroups": "My groups",
      "provisionedazuretenant": "Linked Azure tenant",
      "classifications": "Classifications",
      "groupaudit": "Group audit",
      "webhooks": "Webhooks",
      "lostmobile": "Lost phone/new phone",
      "groups": "Groups",
      "groupaudits": "Group audits",
      "activeer": "Activate account",
      "organizationalunits": "Organisational units",
      "404": "Page not found",
      "audit": "Audit log",
      "auditorserviceaccountsdashboard": "Auditor dashboard service accounts",
      "settings": "Global settings",
      "passwordlost": "Lost password",
      "schedules": "Cron jobs",
      "attributedefinition": "Account attribute definition",
      "vaultrecovery": "Vault recovery",
      "activationcode": "Activation code",
      "vaults": "Vaults",
      "access": "Manage access",
      "about": {
        "updatelicense": "Update license",
        "main": "About"
      },
      "provisionedscim": "Linked SCIM server",
      "notificationcentre": "Notification settings",
      "certificates": "Certificates",
      "systems": "Linked systems",
      "actions": "Actions",
      "vaultrecord": "Vault record",
      "managedgroupsdashboard": "Dashboard for managed groups",
      "confirmtotpoffsetchange": "Confirm verification code time drift",
      "mygroupauditlog": "Group audit log",
      "accountaudit": "Account audit log",
      "serviceaccount": {
        "groupsonsystem": "Groups on system",
        "main": "Service account"
      },
      "identitysource": {
        "afas": "AFAS identity source"
      },
      "grouponsystem": "Group on system",
      "auditorserviceaccountdetails": "Service account details",
      "dashboard": "Dashboard",
      "addprovisioninggroup": "Request group on system",
      "auditoraccountdetails": "Account details"
    },
    "error": {
      "ontwikkelaars": "The developers would like to get the information below.",
      "404": {
        "ietsmis": "Mayday! Unable to find the engine!",
        "main": "The requested page was not found: {0}.",
        "klikhieronder": "The page was not found. Use the back button to return to the home page."
      },
      "gaterug": "Back to home",
      "403": "You don't have permission to view the requested data.",
      "report": "The error was filed under {0} at {1}.",
      "klikhieronder": "An error occurred. Use the back button to return or let us know what happened.",
      "ietsmis": "Oops looks like we lost connection!"
    },
    "breadcrumb": {
      "namespaces": "Namespaces",
      "request": "Request join",
      "sessions": "Sessions",
      "accounts": "Accounts",
      "permissions": "Permissions",
      "directories": "Directories",
      "passwordlost": "Password recovery",
      "attributes": "Attributes",
      "mygroups": "My groups",
      "serviceaccounts": "Service accounts",
      "auditordashboard": {
        "accounts": "Auditor dashboard accounts",
        "serviceaccounts": "Auditor dashboard service accounts",
        "groups": "Auditor dashboard groups"
      },
      "password3": "Password management",
      "password2": "Password management",
      "password1": "Password management",
      "systems": "Linked systems",
      "sequences": "Number sequences",
      "profiles": "Access profiles",
      "audits": "Audits",
      "managed": "Manager dashboard",
      "auditlog": "Audit log",
      "webhooks": "Webhooks",
      "account": "Profile",
      "certificates": "Certificates",
      "systemgroups": "Groups on system",
      "groups": "Groups",
      "classifications": "Classifications",
      "settings": "Settings",
      "notificationcentre": "Notification settings",
      "cleanup": "Clean up",
      "synclogs": "Synchronisations",
      "groupsonsystem": "Groups on system",
      "vaultrecovery": "Vault recovery",
      "identitysources": "Identity sources",
      "passwordreset": "Reset password",
      "clientapplications": "Applications",
      "layout": "Dashboard layout",
      "launchpad": "Launchpad",
      "applications": "Applications",
      "newgos": "Group on system",
      "authorization": "Authorisation",
      "vaults": "Vaults",
      "consent": "Applications",
      "about": "About",
      "access": "Manage access",
      "organizationalunits": "Organisational units",
      "remove": "Remove"
    },
    "attention": {
      "identitysources": {
        "line1": "This page shows all identity sources.",
        "line2": "You can add a new identity source by using the 'Add' button located at the top right of the screen."
      },
      "accessprofiles": {
        "line2": "You can add a new access profile by using the 'Add' button located at the top right of the screen.",
        "line1": "This page shows all access profiles that you manage."
      },
      "access": {
        "line1": "This page displays all the access management for the different groups.",
        "line2": "You can add an application or linked system by using the 'Add' button located at the top right of the screen."
      },
      "attrdefs": {
        "line2": "You can add a new attribute definition by using the 'Add' button located at the top right of the screen.",
        "line1": "This page shows all custom account attribute definitions."
      },
      "vaults": {
        "line1": "This page shows all passwords and secrets you have access to.",
        "line2": "There are currently no vault records to show. Add records to any of your vaults with the button in the top right corner."
      },
      "requestgroup": {
        "line1": "There are no groups for which you can apply for membership.",
        "line2": "A request for a new group can be submitted. To do this, click on the 'Request new group' button in the top right corner of the screen."
      },
      "launchpad": {
        "line1": "On this page, tiles are displayed that allow you to quickly navigate to certain applications. These tiles are shared through the groups you are member of.",
        "line2": "At the moment, you don't have any tiles at your disposal."
      },
      "mygroups": {
        "line1": "This page shows all groups you have access to.",
        "line2": "At the moment, you are not yet a member of a group. You can request access to an existing group or ask to create a new group using the button in the top right corner."
      }
    }
  },
  "modrequest": {
    "extendaccess": {
      "subtitle": "Choose a date. Your access lasts until the end of the chosen day.",
      "sent": "Your request to extend your access to {0} until {1} has been submitted.",
      "request": "Extended access"
    },
    "short": {
      "createprovisionednamespace": {
        "main": "{namespaceName} on {system}",
        "me": "{namespaceName} on {system}"
      },
      "setupauthorizinggroup": {
        "PROVISIONING": {
          "connect": {
            "me": "{groupName} by {requestingGroup}",
            "main": "{groupName} by {requestingGroup}"
          },
          "disconnect": {
            "me": "{groupName} by {requestingGroup}",
            "main": "{groupName} by {requestingGroup}"
          }
        },
        "AUDITING": {
          "connect": {
            "me": "{groupName} by {requestingGroup}",
            "main": "{groupName} by {requestingGroup}"
          },
          "disconnect": {
            "main": "{groupName} by {requestingGroup}",
            "me": "{groupName} by {requestingGroup}"
          }
        },
        "DELEGATION": {
          "connect": {
            "me": "{groupName} to {requestingGroup}",
            "main": "{groupName} to {requestingGroup}"
          },
          "disconnect": {
            "me": "{groupName} to {requestingGroup}",
            "main": "{groupName} to {requestingGroup}"
          }
        },
        "MEMBERSHIP": {
          "connect": {
            "main": "{groupName} by {requestingGroup}",
            "me": "{groupName} by {requestingGroup}"
          },
          "disconnect": {
            "me": "{groupName} by {requestingGroup}",
            "main": "{groupName} by {requestingGroup}"
          }
        }
      },
      "movegroups": {
        "main": "Groups to {organizationalUnit}",
        "me": "Groups to {organizationalUnit}"
      },
      "transferorganizationalunitownership": {
        "main": "{organizationalUnit} to {groupName}",
        "me": "{organizationalUnit} to {groupName}"
      },
      "grantgrouponsystemrequest": {
        "static": {
          "main": "{groupName} to {system}",
          "me": "{groupName} to {system}"
        },
        "dynamic": {
          "main": "{groupName} to {system}",
          "me": "{groupName} to {system}"
        },
        "profile": {
          "me": "{accessProfile} to {system}",
          "main": "{accessProfile} to {system}"
        }
      },
      "removeaccessprofile": {
        "main": "{accessProfile}",
        "me": "{accessProfile}"
      },
      "transferaccessprofileownership": {
        "me": "{accessProfile} to {groupName}",
        "main": "{accessProfile} to {groupName}"
      },
      "updategroupmembership": {
        "add": {
          "me": "{accountToUpdate} of {groupName}",
          "main": "{accountToUpdate} of {groupName}"
        },
        "update": {
          "main": "{accountToUpdate} of {groupName}",
          "me": "{accountToUpdate} of {groupName}"
        }
      },
      "reviewaudit": {
        "me": "{groupName}",
        "main": "{groupName}"
      },
      "removegroup": {
        "me": "{groupName}",
        "main": "{groupName}"
      },
      "setupnestedgroup": {
        "disconnect": {
          "retain": {
            "main": "{groupName} within {requestingGroup}",
            "me": "{groupName} within {requestingGroup}"
          },
          "remove": {
            "me": "{groupName} within {requestingGroup}",
            "main": "{groupName} within {requestingGroup}"
          }
        },
        "connect": {
          "remove": {
            "me": "{groupName} within {requestingGroup}",
            "main": "{groupName} within {requestingGroup}"
          },
          "retain": {
            "main": "{groupName} within {requestingGroup}",
            "me": "{groupName} within {requestingGroup}"
          },
          "convert": {
            "me": "{groupName} within {requestingGroup}",
            "main": "{groupName} within {requestingGroup}"
          }
        }
      },
      "enableprofileadministration": {
        "main": "Access profile administration on {groupName}",
        "me": "Access profile administration on {groupName}"
      },
      "extendaccess": {
        "me": "{extendUntil}",
        "main": "{requester} to {extendUntil}"
      },
      "removeorganizationalunit": {
        "main": "{organizationalUnit}",
        "me": "{organizationalUnit}"
      },
      "transferprovisionedsystemcontentadministration": {
        "me": "{system} to {groupName}",
        "main": "{system} to {groupName}"
      },
      "revokeadmin": {
        "me": "{admin}",
        "main": "{admin}"
      },
      "grantapplication": {
        "group": {
          "main": "{groupName} to {application}",
          "me": "{groupName} to {application}"
        },
        "profile": {
          "me": "{accessProfile} to {application}",
          "main": "{accessProfile} to {application}"
        }
      },
      "joinvault": {
        "main": "{requester} to {groupName}",
        "me": "{groupName}"
      },
      "transferserviceaccountadministration": {
        "me": "{serviceAccount} to {groupName}",
        "main": "{serviceAccount} to {groupName}"
      },
      "creategrouponsystem": {
        "group": {
          "main": "{gosName} on {system}",
          "me": "{gosName} on {system}"
        },
        "profile": {
          "me": "{gosName} on {system}",
          "main": "{gosName} on {system}"
        }
      },
      "updatelicense": {
        "main": "Update license",
        "me": "Update license"
      },
      "grantgrouponsystem": {
        "static": {
          "main": "{groupName} to {system}",
          "me": "{groupName} to {system}"
        },
        "dynamic": {
          "main": "{groupName} to {system}",
          "me": "{groupName} to {system}"
        },
        "profile": {
          "me": "{accessProfile} to {system}",
          "main": "{accessProfile} to {system}"
        }
      },
      "transferprovisionedsystemadministration": {
        "main": "{system} to {groupName}",
        "me": "{system} to {groupName}"
      },
      "joingroup": {
        "main": "{requester} to {groupName}",
        "profile": {
          "me": "{groupName}",
          "main": "{requester} to {groupName}"
        },
        "me": "{groupName}"
      },
      "transfergrouponsystemownership": {
        "me": "{gosName} on {system} to {groupName}",
        "main": "{gosName} on {system} to {groupName}"
      },
      "transferapplicationownership": {
        "me": "{application} to {groupName}",
        "main": "{application} to {groupName}"
      },
      "resetpassword": {
        "me": "{requester}",
        "main": "{requester}"
      },
      "verifyinternalaccount": {
        "main": "{targetAccount} in {targetDirectory}",
        "me": "{targetAccount} in {targetDirectory}"
      },
      "disable2fa": {
        "me": "{requester}",
        "main": "{requester}"
      },
      "grantserviceaccountgroup": {
        "me": "{serviceAccount} to {gosName}",
        "main": "{serviceAccount} to {gosName}"
      },
      "creategroup": {
        "main": "{groupName}",
        "ou": {
          "main": "{groupName} within {organizationalUnit}",
          "me": "{groupName} within {organizationalUnit}"
        },
        "me": "{groupName}"
      },
      "linkdirectorytoaccessprofile": {
        "me": "{directory} to {accessProfile}",
        "main": "{directory} to {accessProfile}"
      },
      "grantaccess": {
        "main": "{requester} to {groupName}",
        "me": "{groupName}"
      },
      "grantclientpermission": {
        "me": "{permissionType} to {application}",
        "main": "{permissionType} to {application}"
      },
      "createserviceaccount": {
        "main": "{username} on {system}",
        "me": "{username} on {system}"
      },
      "enabletechnicaladministration": {
        "main": "Technical administration on {groupName}",
        "me": "Technical administration on {groupName}"
      },
      "addgroupadmin": {
        "me": "{newAdmin} for {groupName}",
        "main": "{newAdmin} for {groupName}"
      },
      "removeprovisionedsystem": {
        "main": "{system}",
        "me": "{system}"
      },
      "transferapplicationadministration": {
        "main": "{application} to {groupName}",
        "me": "{application} to {groupName}"
      },
      "addgrouptoaccessprofile": {
        "main": "{groupName} to {accessProfile}",
        "me": "{groupName} to {accessProfile}"
      },
      "transferprovisionedsystemownership": {
        "main": "{system} to {groupName}",
        "me": "{system} to {groupName}"
      }
    },
    "long": {
      "removeorganizationalunit": {
        "main": "{requester} wants to remove the organisational unit {organizationalUnit}.",
        "me": "I want to remove the organisational unit {organizationalUnit}."
      },
      "alreadyhandled": {
        "DISALLOWED": "The request has already been declined by somebody else.",
        "ALLOWED": "The request has already been accepted by somebody else.",
        "CANCELLED": "The request has been withdrawn by the requester."
      },
      "grantgrouponsystemrequest": {
        "static": {
          "main": "{requester} wants to request to give the users in the group {groupName} access to {gosType} {gosName} on {system} with static account provisioning.",
          "me": "I want to request to give the users in the group {groupName} access to {gosType} {gosName} on {system} with static account provisioning."
        },
        "dynamic": {
          "me": "I want to request to give the users in the group {groupName} access to {gosType} {gosName} on {system}.",
          "main": "{requester} wants to request to give the users in the group {groupName} access to {gosType} {gosName} on {system}."
        },
        "profile": {
          "main": "{requester} wants to request to give the users in the access profile {accessProfile} access to {gosType} {gosName} on {system}.",
          "me": "I want to request to give the users in the access profile {accessProfile} access to {gosType} {gosName} on {system}."
        }
      },
      "setupauthorizinggroup": {
        "PROVISIONING": {
          "disconnect": {
            "me": "I request that authorisation by {requestingGroup} on activation of {groupName} is stopped.",
            "main": "{requester} requests that authorisation by {requestingGroup} on activation of {groupName} is stopped."
          },
          "connect": {
            "me": "I request that activation of {groupName} is authorised by {requestingGroup}.",
            "main": "{requester} requests that activation of {groupName} is authorised by {requestingGroup}."
          }
        },
        "DELEGATION": {
          "connect": {
            "main": "{requester} requests that management of {groupName} is delegated to {requestingGroup}.",
            "me": "I request that management of {groupName} is delegated to {requestingGroup}."
          },
          "disconnect": {
            "me": "I request that delegation of management of {groupName} to {requestingGroup} is stopped.",
            "main": "{requester} requests that delegation of management of {groupName} to {requestingGroup} is stopped."
          }
        },
        "AUDITING": {
          "connect": {
            "main": "{requester} requests that audits of {groupName} are reviewed by {requestingGroup}.",
            "me": "I request that audits of {groupName} are reviewed by {requestingGroup}."
          },
          "disconnect": {
            "main": "{requester} requests that reviewing of audits for {groupName} by {requestingGroup} is stopped.",
            "me": "I request that reviewing of audits for {groupName} by {requestingGroup} is stopped."
          }
        },
        "MEMBERSHIP": {
          "connect": {
            "main": "{requester} requests that management of membership of {groupName} is authorised by {requestingGroup}.",
            "me": "I request that management of membership of {groupName} is authorised by {requestingGroup}."
          },
          "disconnect": {
            "me": "I request that authorisation by {requestingGroup} on management of membership of {groupName} is stopped.",
            "main": "{requester} requests that authorisation by {requestingGroup} on management of membership of {groupName} is stopped."
          }
        }
      },
      "transferprovisionedsystemownership": {
        "me": "I want to transfer ownership of the linked system {system} to the group {groupName}.",
        "main": "{requester} wants to transfer ownership of the linked system {system} to the group {groupName}."
      },
      "setupnestedgroup": {
        "disconnect": {
          "retain": {
            "me": "I request that {groupName} no longer be nested within {requestingGroup}. The inherited group memberships will be retained and converted into regular memberships.",
            "main": "{requester} requests that {groupName} no longer be nested within {requestingGroup}. The inherited group memberships will be retained and converted into regular memberships."
          },
          "remove": {
            "main": "{requester} requests that {groupName} no longer be nested within {requestingGroup}. The inherited group memberships will be removed.",
            "me": "I request that {groupName} no longer be nested within {requestingGroup}. The inherited group memberships will be removed."
          }
        },
        "connect": {
          "remove": {
            "main": "{requester} requests that {groupName} be nested within {requestingGroup}. Existing group memberships will be deleted and replaced with the inherited memberships.",
            "me": "I request that {groupName} be nested within {requestingGroup}. Existing group memberships will be deleted and replaced with the inherited memberships."
          },
          "convert": {
            "main": "{requester} requests that {groupName} be nested within {requestingGroup}. Existing group memberships will be converted into nested memberships if possible.",
            "me": "I request that {groupName} be nested within {requestingGroup}. Existing group memberships will be converted into nested memberships if possible."
          },
          "retain": {
            "main": "{requester} requests that {groupName} be nested within {requestingGroup}. Existing group memberships will be retained.",
            "me": "I request that {groupName} be nested within {requestingGroup}. Existing group memberships will be retained."
          }
        }
      },
      "grantclientpermission": {
        "CLIENTS_CREATE": {
          "me": "I want to give the application {application} permission to create new applications within {group}.",
          "main": "{requester} wants to give the application {application} permission to create new applications within {group}."
        },
        "GROUPS_QUERY": {
          "main": "{requester} wants to give the application {application} permission to read and query groups.",
          "me": "I want to give the application {application} permission to read and query groups."
        },
        "GROUPS_CREATE": {
          "main": "{requester} wants to give the application {application} permission to create new groups.",
          "me": "I want to give the application {application} permission to create new groups."
        },
        "SERVICE_ACCOUNTS_UPDATE": {
          "me": "I want to give the application {application} permission to update service accounts for {group}.",
          "main": "{requester} wants to give the application {application} permission to update service accounts for {group}."
        },
        "GROUP_SET_AUTHORIZATION": {
          "main": "{requester} wants to give the application {application} permission to configure {groupName} as a group that performs additional authorisation or which other groups are nested under.",
          "me": "I want to give the application {application} permission to configure {groupName} as a group that performs additional authorisation or which other groups are nested under."
        },
        "ACCOUNTS_QUERY": {
          "main": "{requester} wants to give the application {application} permission to read and query accounts.",
          "me": "I want to give the application {application} permission to read and query accounts."
        },
        "PROVISIONEDSYSTEMS_QUERY": {
          "main": "{requester} wants to give the application {application} permission to read and query provisioned systems.",
          "me": "I want to give the application {application} permission to read and query linked systems."
        },
        "ACCOUNTS_CREATE": {
          "me": "I want to give the application {application} permission to create new accounts.",
          "main": "{requester} wants to give the application {application} permission to create new accounts."
        },
        "CLIENTS_QUERY": {
          "me": "I want to give the application {application} permission to read and query applications.",
          "main": "{requester} wants to give the application {application} permission to read and query applications."
        },
        "SERVICE_ACCOUNTS_QUERY": {
          "main": "{requester} wants to give the application {application} permission to read and query service accounts.",
          "me": "I want to give the application {application} permission to read and query service accounts."
        },
        "GROUP_LAUNCHPADTILES": {
          "me": "O want to give the application {application} permission to manage launchpad tiles for {groupName}.",
          "main": "{requester} wants to give the application {application} permission to manage launchpad tiles for {groupName}."
        },
        "GROUP_READ_CONTENTS": {
          "main": "{requester} wants to give the application {application} access to the details of the group {groupName}.",
          "me": "I want to give the application {application} access to the details of the group {groupName}."
        },
        "SERVICE_ACCOUNTS_CREATE": {
          "main": "{requester} wants to give the application {application} permission to create new service accounts on the linked system {system}.",
          "me": "I want to give the application {application} permission to create new service accounts on the linked system {system}."
        },
        "GROUPS_GRANT_PERMISSIONS_AFTER_CREATE": {
          "main": "{requester} wants to give the application {application} the right to grant permissions on groups created by the application.",
          "me": "I want to give the application {application} the right to grant permissions on groups created by the application."
        },
        "ACCOUNTS_REMOVE": {
          "me": "I want to give the application {application} permission to remove accounts.",
          "main": "{requester} wants to give the application {application} permission to remove accounts."
        },
        "GROUPS_SET_CLASSIFICATION": {
          "main": "{requester} wants to give the application {application} permission to assign classifications to groups.",
          "me": "I want to give the application {application} permission to assign classifications to groups."
        },
        "GROUPONSYSTEM_CREATE": {
          "me": "I want to give the application {application} permission to create new groups on the linked system {system}.",
          "main": "{requester} wants to give the application {application} permission to create new groups on the linked system {system}."
        },
        "GROUP_FULL_VAULT_ACCESS": {
          "me": "I want to give the application {application} access to the vault of {groupName}.",
          "main": "{requester} wants to give the application {application} access to the vault of {groupName}."
        }
      },
      "addgrouptoaccessprofile": {
        "me": "I want to add the group {groupName} to the access profile {accessProfile}.",
        "main": "{requester} wants to add the group {groupName} to the access profile {accessProfile}."
      },
      "grantgrouponsystem": {
        "dynamic": {
          "main": "{originalRequester} wants to give the users in the group {groupName} access to {gosType} {gosName} on {system}. This request was approved and forwarded by {requester}.",
          "me": "I want to give the users in the group {groupName} access to {gosType} {gosName} on {system}."
        },
        "profile": {
          "main": "{originalRequester} wants to give the users in the access profile {accessProfile} access to {gosType} {gosName} on {system}. This request was approved and forwarded by {requester}.",
          "me": "I want to give the users in the access profile {accessProfile} access to {gosType} {gosName} on {system}."
        },
        "static": {
          "main": "{originalRequester} wants to give the users in the group {groupName} access to {gosType} {gosName} on {system} with static account provisioning. This request was approved and forwarded by {requester}.",
          "me": "I want to give the users in the group {groupName} access to {gosType} {gosName} on {system} with static account provisioning."
        }
      },
      "removegroup": {
        "me": "I want to remove the group {groupName}.",
        "main": "{requester} wants to remove the group {groupName}."
      },
      "creategroup": {
        "main": "{requester} requests the group {groupName} to be created.",
        "ou": {
          "main": "{requester} requests the group {groupName} to be created within the organisational unit {organizationalUnit}.",
          "me": "I requested a group {groupName} to be created within the organisational unit {organizationalUnit}."
        },
        "me": "I requested a group {groupName}."
      },
      "reviewaudit": {
        "me": "I request a review of an audit of {groupName}.",
        "main": "{requester} requests a review of an audit of {groupName}."
      },
      "extendaccess": {
        "main": "{requester} wants extended access to {groupName} until the end of {extendUntil}.",
        "me": "I requested extended access to {groupName} until the end of {extendUntil}."
      },
      "resetpassword": {
        "main": "{requester} wants to have his/her password recovered.",
        "me": "I want to have my password recovered."
      },
      "creategrouponsystem": {
        "profile": {
          "me": "I requested to create {gosType} {gosName} on {system} for the access profile {accessProfile}.",
          "main": "{requester} requests {gosType} {gosName} on {system} to be created for the access profile {accessProfile}."
        },
        "group": {
          "main": "{requester} requests {gosType} {gosName} on {system} to be created for the group {groupName}.",
          "me": "I requested to create {gosType} {gosName} on {system} for the group {groupName}."
        }
      },
      "verifyinternalaccount": {
        "me": "I created an account for {targetAccount} in {targetDirectory}.",
        "main": "{requester} created an account for {targetAccount} in {targetDirectory}."
      },
      "joinvault": {
        "main": "{requester} wants to be granted access to the vault of {groupName}.",
        "me": "I requested access to the vault of {groupName}."
      },
      "enabletechnicaladministration": {
        "main": "{requester} wants to enable technical administration on {groupName}.",
        "me": "I want to enable technical administration on {groupName}."
      },
      "transferserviceaccountadministration": {
        "main": "{requester} wants to transfer administration of the service account {serviceAccount} on {system} to the group {groupName}.",
        "me": "I want to transfer administration of the service account {serviceAccount} on {system} to the group {groupName}."
      },
      "updategroupmembership": {
        "add": {
          "main": "{requester} requests that {accountToUpdate} is added to {groupName}.",
          "me": "I request that {accountToUpdate} is added to {groupName}."
        },
        "update": {
          "main": "{requester} requests the membership of {accountToUpdate} of {groupName} to be updated.",
          "me": "I request the membership of {accountToUpdate} of {groupName} to be updated."
        }
      },
      "grantapplication": {
        "profile": {
          "me": "I want to give the users in the access profile {accessProfile} access to the application {application}.",
          "main": "{requester} wants to give the users in the access profile {accessProfile} access to the application {application}."
        },
        "group": {
          "me": "I want to give the users in {groupName} access to the application {application}.",
          "main": "{requester} wants to give the users in {groupName} access to the application {application}."
        }
      },
      "transferapplicationownership": {
        "main": "{requester} wants to transfer ownership of the application {application} to the group {groupName}.",
        "me": "I want to transfer ownership of the application {application} to the group {groupName}."
      },
      "removeprovisionedsystem": {
        "me": "I want to remove the linked system {system}.",
        "main": "{requester} wants to remove the linked system {system}."
      },
      "transferprovisionedsystemcontentadministration": {
        "me": "I want to transfer content administration of the linked system {system} to the group {groupName}.",
        "main": "{requester} wants to transfer content administration of the linked system {system} to the group {groupName}."
      },
      "addgroupadmin": {
        "me": "I want to give {newAdmin} management privileges for {groupName}.",
        "main": "{requester} wants to give {newAdmin} management privileges for {groupName}."
      },
      "revokeadmin": {
        "main": "{requester} wants to remove {admin} from KeyHub Administrators.",
        "me": "I want to remove {admin} from KeyHub Administrators."
      },
      "enableprofileadministration": {
        "main": "{requester} wants to enable access profile administration on {groupName}.",
        "me": "I want to enable access profile administration on {groupName}."
      },
      "removeaccessprofile": {
        "main": "{requester} wants to remove the access profile {accessProfile}.",
        "me": "I want to remove the access profile {accessProfile}."
      },
      "transfergrouponsystemownership": {
        "main": "{requester} wants to transfer ownership of {gosType} {gosName} on {system} to the group {groupName}.",
        "me": "I want to transfer ownership of {gosType} {gosName} on {system} to the group {groupName}."
      },
      "transferprovisionedsystemadministration": {
        "me": "I want to transfer administration of the linked system {system} to the group {groupName}.",
        "main": "{requester} wants to transfer administration of the linked system {system} to the group {groupName}."
      },
      "transferorganizationalunitownership": {
        "main": "{requester} wants to transfer ownership of the organisational unit {organizationalUnit} to the group {groupName}.",
        "me": "I want to transfer ownership of the organisational unit {organizationalUnit} to the group {groupName}."
      },
      "updatelicense": {
        "main": "{requester} wants to make a change to the license.",
        "me": "I want to make a change to the license."
      },
      "grantaccess": {
        "main": "{requester} requests access to {groupName}.",
        "me": "I requested access to {groupName}."
      },
      "createserviceaccount": {
        "me": "I requested a service account {username} on {system}.",
        "main": "{requester} requests a new service account {username} on {system} to be created."
      },
      "linkdirectorytoaccessprofile": {
        "me": "I want to assign the management of attributes for accounts from {directory} to the access profile {accessProfile}.",
        "main": "{requester} wants to assign the management of attributes for accounts from {directory} to the access profile {accessProfile}."
      },
      "transferapplicationadministration": {
        "me": "I want to transfer administration of the application {application} to the group {groupName}.",
        "main": "{requester} wants to transfer administration of the application {application} to the group {groupName}."
      },
      "disable2fa": {
        "main": "{requester} wants two-factor authentication to be disabled.",
        "me": "I want two-factor authentication to be disabled."
      },
      "joingroup": {
        "me": "I want to be added to the group {groupName}.",
        "profile": {
          "me": "I want to be added to the group {groupName} via the access profile {accessProfile}.",
          "main": "{requester} wants to be added to the group {groupName} via the access profile {accessProfile}."
        },
        "main": "{requester} wants to be added to the group {groupName}."
      },
      "movegroups": {
        "me": "I want to move {groupCount} groups to {organizationalUnit}.",
        "main": "{requester} wants to move {groupCount} groups to {organizationalUnit}."
      },
      "transferaccessprofileownership": {
        "main": "{requester} wants to transfer ownership of the access profile {accessProfile} to the group {groupName}.",
        "me": "I want to transfer ownership of the access profile {accessProfile} to the group {groupName}."
      },
      "createprovisionednamespace": {
        "main": "{requester} requests a new namespace {namespaceName}, based on {system}, to be created.",
        "me": "I requested a namespace {namespaceName}, based on {system}."
      },
      "grantserviceaccountgroup": {
        "main": "{requester} wants to give the service account {serviceAccount} access to {gosType} {gosName} on {system}.",
        "me": "I want to give the service account {serviceAccount} access to {gosType} {gosName} on {system}."
      }
    },
    "setupauthorizinggroup": {
      "connect": {
        "subtitle": "Choose a group for which this group will perform additional authorisation.",
        "sent": "Your request for authorisation has been sent.",
        "header": "Setup authorisation"
      },
      "disconnect": {
        "header": "Stop authorisation",
        "subtitle": "Choose the type of authorisation that will be stopped.",
        "sent": "Your request to stop authorisation has been sent."
      }
    },
    "setupnestedgroup": {
      "disconnect": {
        "subtitle": "Request to remove the nested group from this group.",
        "sent": "Your request to remove the nested group from this group has been sent.",
        "header": "Remove nesting"
      },
      "connect": {
        "header": "Add nested group",
        "sent": "Your request to add a nested group has been sent.",
        "accepted": "Your request to add a nested group has been been automatically accepted.",
        "subtitle": "Choose a group to nest within this group."
      }
    },
    "transferprovisionedsystemownership": {
      "subtitle": "Transfer the ownership of {0} to another group.",
      "header": "Transfer ownership",
      "sent": "Your request to transfer ownership of {0} to {1} has been submitted."
    },
    "grantserviceaccountgroup": {
      "sent": "Your request to give {2} access to {0} on {1} has been submitted.",
      "accepted": "Because you are owner of {0} on {1}, your request to give {2} access to {0} on {1} has been automatically accepted.",
      "subtitle": "Request a group on {0} for the service account {1}.",
      "header": "Request group on system"
    },
    "movegroups": {
      "sent": "Your request to move {0} groups to {1} has been submitted."
    },
    "addgroupadmin": {
      "newmember": "{0} is not yet member of this group. To give {0} access to the vault the recovery key is required.",
      "sent": "Your request to give {0} management privileges for {1} has been submitted."
    },
    "transferorganizationalunitownership": {
      "header": "Transfer ownership",
      "sent": "Your request to transfer ownership of {0} to {1} has been submitted.",
      "subtitle": "Transfer the ownership of {0} to another group."
    },
    "creategroup": {
      "request": "Request a new group",
      "accept": {
        "options": "Change the name",
        "hint": "Update the name of the group before it is created."
      },
      "sent": "Your request to create the group {0} has been submitted.",
      "subtitle": "Specify the name of the new group and explain why it is needed."
    },
    "enableprofileadministration": {
      "subtitle": "Request to enable access profile administration on {0}.",
      "sent": "Your request to enable access profile administration on {0} has been submitted.",
      "header": "Enable access profile administration"
    },
    "creategrouponsystem": {
      "accept": {
        "options": "Change the name",
        "hint": "Update the name of the group on system before it is created."
      },
      "sent": "Your request to create {0} on {1} has been submitted.",
      "accepted": "Because you are content administrator of {1}, your request to create {0} on {1} has been automatically accepted."
    },
    "enabletechnicaladministration": {
      "sent": "Your request to enable technical administration on {0} has been submitted.",
      "header": "Enable technical administration",
      "subtitle": "Request to enable technical administration on {0}."
    },
    "transferserviceaccountadministration": {
      "sent": "Your request to transfer administration of {0} on {1} to {2} has been submitted.",
      "header": "Transfer administration",
      "subtitle": "Transfer the administration of {0} on {1} to another group."
    },
    "admins": {
      "none": {
        "group": "Nobody can process this request. Please contact a manager of {0} to correct this issue.",
        "main": "Nobody can process this request. Please contact a KeyHub Administrator."
      },
      "main": "This request can be processed by {0}",
      "requester": "This request will be processed by {0}"
    },
    "createserviceaccount": {
      "subtitle": "Specify the username of the new service account and explain what it is needed for.",
      "sent": "Your request to create the service account {0} on {1} has been submitted.",
      "accept": {
        "options": "Change the username",
        "hint": "Update the username of the service account before it is created."
      },
      "request": "Request a new service account"
    },
    "joingroup": {
      "accept": {
        "options": "Set end date or add as manager",
        "makemanager": {
          "true": "Add with management privileges",
          "false": "Normal privileges"
        }
      },
      "request": {
        "main": "Request access to a group",
        "subtitle": "Give a reason for requesting membership of this group."
      },
      "sent": "Your request to be added to the group {0} has been submitted."
    },
    "grantaccess": {
      "duration": "Duration of the permission"
    },
    "createnamespace": {
      "accept": {
        "hint": "Update the name of the namespace before it is created."
      }
    },
    "invalidstatus": "The request is no longer open.",
    "joinvault": {
      "request": {
        "subtitle": "You have lost access to the vault of {0}. Submit a request to regain access to this vault record.",
        "main": "Vault access"
      },
      "sent": "Your request to get access to the vault of {0} has been submitted."
    },
    "linkdirectorytoaccessprofile": {
      "sent": "Your request to link the directory {1} to the access profile {0} has been sent.",
      "subtitle": "Select a directory for which attribute management should be assigned to the access profile {0}.",
      "request": "Link directory"
    },
    "norights": "You are not allowed to process this request. You may have been involved in this request before or you are missing required permissions.",
    "transferapplicationownership": {
      "sent": "Your request to transfer ownership of {0} to {1} has been submitted.",
      "header": "Transfer ownership",
      "subtitle": "Transfer the ownership of {0} to another group."
    },
    "transfergrouponsystemownership": {
      "sent": "Your request to transfer ownership of {0} on {1} to {2} has been submitted.",
      "subtitle": "Transfer the ownership of {0} on {1} to another group.",
      "header": "Transfer ownership"
    },
    "transferprovisionedsystemadministration": {
      "header": "Transfer administration",
      "subtitle": "Transfer the administration of {0} to another group.",
      "sent": "Your request to transfer administration of {0} to {1} has been submitted."
    },
    "report": {
      "header": {
        "errors": "Errors",
        "changes": "Changes"
      },
      "nochanges": "No other changes"
    },
    "feedbacklabel": {
      "DISALLOWED": "Reason for refusal",
      "ALLOWED": "Reason for approval"
    },
    "clientpermission": {
      "accepted": "Your request to grant '{1}' the permission '{0}' has been accepted automatically.",
      "sent": "Your request to grant '{1}' the permission '{0}' has been submitted.",
      "subtitle": "Request additional permissions for the application {0}.",
      "header": "Grant permissions"
    },
    "transferaccessprofileownership": {
      "header": "Transfer ownership",
      "subtitle": "Transfer the ownership of {0} to another group.",
      "sent": "Your request to transfer ownership of {0} to {1} has been submitted."
    },
    "createprovisionednamespace": {
      "request": "Request a new namespace",
      "sent": "Your request to create the namespace {0}, based on {1}, has been submitted.",
      "subtitle": "Specify the name and content administration group of the new namespace."
    },
    "grantapplication": {
      "profile": {
        "app": {
          "subtitle": "Add an application to the access profile {0}."
        },
        "header": "Add application to access profile",
        "profile": {
          "subtitle": "Add an access profile to the application {0}."
        }
      },
      "subtitle": "Give the members of a group access to {0}.",
      "sent": "Your request to give {1} access to {0} has been submitted.",
      "header": "Give a group access",
      "accepted": "Because you are owner of {0}, your request to give {0} access to {1} has accepted automatically."
    },
    "addgrouptoaccessprofile": {
      "sent": "Your request to add {1} to {0} has been submitted.",
      "header": "Add group",
      "subtitle": "Add a group to the access profile {0}."
    },
    "grantgrouponsystem": {
      "sent": "Your request to give {2} access to {0} on {1} has been submitted.",
      "accepted": "Because you are owner of {0} on {1}, your request to give {2} access to {0} on {1} has been automatically accepted."
    },
    "transferapplicationadministration": {
      "header": "Transfer administration",
      "sent": "Your request to transfer administration of {0} to {1} has been submitted.",
      "subtitle": "Transfer the administration of {0} to another group."
    },
    "transferprovisionedsystemcontentadministration": {
      "sent": "Your request to transfer content administration of {0} to {1} has been submitted.",
      "header": "Transfer content administration",
      "subtitle": "Transfer the content administration of {0} to another group."
    },
    "feedbackplaceholder": "Optional reason...",
    "changecount": "{0} change(s)",
    "removerequest": {
      "sent": "Your request to remove {0} has been submitted."
    },
    "revokeadmin": {
      "sent": "Your request to remove {0} from KeyHub Administrators has been submitted."
    },
    "nocomment": "No reason given",
    "updategroupmembership": {
      "sent": "Your membership request for {0} for {1} has been submitted."
    }
  },
  "provisioning": {
    "authorization": {
      "desc": {
        "required": "Give a reason for the activation. This reason is required.",
        "main": "Give a reason for the activation."
      },
      "subtitle": "Authorisation is required for activation of {0}.",
      "label": "Reason",
      "sent": "Your request for activation of {0} has been submitted.",
      "header": "Authorisation required"
    },
    "numbering": {
      "start": "Start numbering",
      "toevoegen": "Add number sequence",
      "next": "Next ID",
      "subtitle": "This number sequence can be used to generate UIDs when provisioning LDAP systems.",
      "bewerken": "Edit number sequence",
      "new": "Start a new number sequence"
    },
    "showtoken": "Your temporary password",
    "reason": {
      "label": "Reason",
      "subtitle": "Give a reason for activating {0}.",
      "header": "Reason for activation",
      "desc": "This reason will be recorded in the audit log.",
      "hint": "It is required to give a reason when activated."
    },
    "status": {
      "operational": "Fully operational",
      "intermittent": "Operational with interruptions",
      "disconnected": "Disconnected for problems"
    },
    "error": {
      "account": "Your account on {0} could not be activated. It is likely that you cannot sign in on all systems.",
      "group": "The group {1} ({2}) on {0} could not be activated. It is likely that you cannot sign in on all systems."
    },
    "rotatetoken": {
      "title": "Refresh your temporary password.",
      "feedback": "Your temporary password has been refreshed"
    },
    "layout": "Manage layout...",
    "toegang": {
      "dag": "I've got access until the end of <span class=\"servers--logout-time\">{0}<\/span>",
      "uur": "I need access until <span class=\"servers--logout-time\"><\/span>"
    },
    "account": {
      "uid": "UID",
      "loginname": "Login name"
    },
    "showall": "Show all groups",
    "newgroup": "Create a new group",
    "extend": "Extend access",
    "system": {
      "type": "Type"
    },
    "existinggroup": "Use an existing group",
    "requestgos": "Request group on system",
    "tokencopied": "Password copied"
  },
  "login": {
    "reset": {
      "acceptable": "The request has been granted and can be completed.",
      "pwdlabel": {
        "main": "The new password",
        "cancel": "Password"
      },
      "finish": "Complete request",
      "cancelled": "Your request has been cancelled, your account has been unlocked and you can login again with your original password.",
      "pwdhint": {
        "main": "To complete the request, you must enter your new password. Cancellation is also possible with your old password.",
        "cancel": "If you want to cancel this request you can use either your current password or the new password you chose earlier."
      },
      "cancel": "Cancel request",
      "completed": "You request has been completed, your account has been unlocked and you can login again with your new password.",
      "header": "Account locked for recovery",
      "loginheader": "Confirm your password recovery request",
      "message": {
        "main": "Your account has been locked because there is an open request to recover your password. Enter your new password below to complete the request.",
        "cancel": "Your account has been locked because there is an open request to recover your password. Wait for the request to be approved."
      },
      "notacceptable": {
        "1": "The request must still be granted by at least one of the following persons: {0}",
        "cooldown": "Your password can be recovered at {1}, or as soon as one of the following persons approves the request: {0}",
        "cooldown0": "Your password can be recovered at {0}."
      }
    },
    "native": {
      "close": {
        "main": "You are logged in to {0} and can close this window.",
        "retry": "You are logged in to {0} and can close this window. If the application does not open correctly, click on 'Retry' below."
      },
      "done": "Login completed",
      "retry": "Retry",
      "console": "Open the KeyHub Console"
    },
    "LICENSE_WRONG_DOMAIN": {
      "header": "Invalid license"
    },
    "passwordrequired": "Your password is required to sign in.",
    "device": {
      "help": "Enter the user code displayed to you. The code is case insensitive and the dashes can be omitted.",
      "warn": "Never grant access if you have received the link or code from someone else or if you do not trust the displayed application.",
      "header": "Login on another device",
      "invalidcode": "The given code is incorrect, expired or already used.",
      "placeholder": "Code",
      "verify": "You are about to give another system or device access to your data in Topicus KeyHub. Check the details below before continuing."
    },
    "registreer": {
      "header": {
        "main": "Register a new account",
        "rereg": "Re-register your account"
      },
      "groups": {
        "count": "{0} group(s) selected",
        "sendlogin": "Send and sign in",
        "info": "Access is granted via groups in KeyHub. Here, you can request access to one or more groups directly. Search for the groups you need and check them. On the next screen you can provide a reason for your request(s).",
        "reason": {
          "main": "Give a reason for requesting these group(s): {0}",
          "placeholder": "Reason"
        },
        "main": "Request groups"
      },
      "federated": {
        "info": "You need to sign in at {0} before you can proceed.",
        "other": "Wrong user? Sign in as a different user at {0}.",
        "signin": "Sign in"
      },
      "main": "Register",
      "step": {
        "groups": "Request groups",
        "pwd": "Choose password",
        "2fa": "Setup 2FA"
      },
      "2fa": {
        "main": "Two-factor authentication (or 2FA) greatly enhances the security of your account and is required for many parts of KeyHub. To use 2FA, you'll need to install an app on your mobile phone. KeyHub supports the TOTP-system, for which multiple apps are available, such as Google Authenticator, Duo Mobile or Microsoft Authenticator. However, for the best experience, it is recommended to use the KeyHub 2FA app. This app uses a push notification to perform the verification, so you do not have to enter the 6-digit code.",
        "savelogin": "Save and sign in"
      },
      "autohelp": "Welcome {0}. You do not yet have an account in Topicus KeyHub. To register your account, choose 'Register now' below. If the information displayed is not correct, choose 'Register manually'.",
      "help": {
        "main": "Choose the directory from which to create a KeyHub account and sign in.",
        "rereg": "Your account has been marked for re-registration. This allows your directory and username to be changed. Choose the directory in which your account resides and sign in to complete the re-registration."
      },
      "password": "Choose your password",
      "login": "Sign in directly",
      "nameinuse": "Your username is already taken. Your account will be created with a customized username."
    },
    "password": {
      "placeholder": "Password",
      "confirmchange": "Confirm your password change"
    },
    "header": {
      "main": "Sign in",
      "as": {
        "main": "Sign in as {0}",
        "on": "Sign in to {0} as {1}"
      },
      "on": "Sign in to {0}"
    },
    "passwordlost": {
      "main": "I forgot my password",
      "sent": "The e-mail for a password recovery has been sent.",
      "message": "When you've forgotten your password and are unable to sign in, request a password recovery. You will receive an e-mail with further instructions.",
      "header": "I forgot my password",
      "tkh": "I forgot my Topicus KeyHub password",
      "username": {
        "placeholder": "Username..."
      }
    },
    "LICENSE_TERMINATED": {
      "header": "Invalid license"
    },
    "lostmobile": {
      "message": "When you've lost your mobile phone or security key, performed a factory reset or bought a new device and are unable to sign in, submit a request to reset your two-factor authentication. A KeyHub administrator will process your request.",
      "main": "I am unable to sign in using two-factor authentication",
      "comment": {
        "placeholder": "Reason of reset"
      },
      "instruction": "When you are still able to sign in with one of your existing 2FA methods (such as your old mobile phone), you should simply sign in to the KeyHub console and reconfigure two-factor authentication under your profile.",
      "sent": "Your request to reset your two-factor authentication has been submitted.",
      "header": "I would like two-factor authentication to be disabled"
    },
    "actie": {
      "inloggen": "Sign in"
    },
    "TOKEN_LOGIN_NOT_POSSIBLE": {
      "header": "Two-factor authentication required"
    },
    "heractiveer": {
      "header": "Reactivate your account"
    },
    "activationcode": {
      "placeholder": "Code",
      "ongeldig": "The given code is invalid. It may be expired.",
      "main": "I've got an activation code",
      "header": "Activation code",
      "help": "Enter the activation code from the e-mail, including dashes."
    },
    "CLIENT_NOT_ALLOWED": {
      "header": "Sign in not permitted"
    },
    "mislukt": {
      "main": "Your username and/or password is incorrect, or your account is disabled.",
      "remote": "Your account does not exist in Topicus KeyHub. Register your account first.",
      "2fa": "Your two-factor authentication code is incorrect."
    },
    "activeer": {
      "help": "Check the details below and choose your password. If any of the values is incorrect, please notify your contact person.",
      "header": "Activate your account"
    },
    "2fa": {
      "webauthn": "Use your security key to login to KeyHub.",
      "totp": "Open the app for two-factor authentication on your mobile phone or take your hard token and enter the verification code for KeyHub."
    },
    "CLIENT_ACTIVATION_REQUIRED": {
      "header": "Activation required"
    },
    "responsibledisclosure": "Responsible disclosure",
    "rememberme": "Keep me signed in on this system",
    "LICENSE_NOT_YET_ACTIVE": {
      "header": "Invalid license"
    },
    "accountgeblokkeerd": "Your account has been temporarily blocked. Try again in {0}.",
    "verifypow": "Your browser is being verified",
    "LICENSE_LIMIT_REACHED": {
      "header": "License limit reached"
    },
    "resetpassword": "Reset password and wipe associated data",
    "systeemnietbeschikbaar": "KeyHub is currently unavailable. Please try again later.",
    "username": {
      "placeholder": "Username"
    },
    "confirmtotpoffsetchange": {
      "loginheader": "Confirm your verification code time drift",
      "explanation": "The clock of your 2FA device seems to have drifted. Please enter 2 consecutive codes to verify your device."
    },
    "LICENSE_KEY_MALFORMED": {
      "header": "Invalid license"
    },
    "directorydegraded": "Due to a partial outage, it may not be possible to sign in with {0}. Please contact your KeyHub administrator when you are having trouble signing in.",
    "powinvalid": "Your browser did not perform a valid verification. Try logging in again or use a different browser.",
    "maintenancemode": "Topicus KeyHub is running in maintenance mode. Only 'keyhub' logins are possible.",
    "SAML_UNRESOLVABLE_SUBJECT": {
      "header": "Login failed"
    },
    "directoryoffline": "Due to an outage, it is currently not possible to sign in with {0}. Please contact your KeyHub administrator when you are having trouble signing in."
  },
  "menu": {
    "system": {
      "syncs": "Synchronisations",
      "details": "Details",
      "profiles": "Access profiles",
      "groups": "Groups",
      "serviceaccounts": "Service accounts",
      "namespaces": "Namespaces",
      "groupsinsystem": "Groups on system",
      "permissions": "Issued permissions"
    },
    "auditor": {
      "dashboard": {
        "groups": "Groups",
        "serviceaccounts": "Service accounts",
        "main": "Dashboard",
        "accounts": "Accounts"
      },
      "classifications": "Classifications"
    },
    "application": {
      "details": "Details",
      "profiles": "Access profiles",
      "groups": "Groups"
    },
    "settings": {
      "webhooks": "Webhooks",
      "main": "Settings",
      "vaultrecovery": "Vault recovery",
      "notificationcentre": "Notifications",
      "about": "About",
      "sequences": "Number sequences",
      "algemeen": "General",
      "certificates": "Certificates"
    },
    "deployment": {
      "disk": "Disk management",
      "main": "Deployment",
      "replication": "Replication"
    },
    "organizationalunit": {
      "settings": "Settings",
      "accounts": "Accounts",
      "clients": "Applications",
      "details": "Details"
    },
    "group": {
      "applications": "Applications",
      "accounts": "Accounts",
      "koppelingen": "Linked systems",
      "details": "Details"
    },
    "mygroups": {
      "main": "My groups",
      "managed": "Manager dashboard"
    },
    "config": {
      "application": "Application",
      "authentication": "Authentication",
      "backup": "Backups",
      "mail": "E-mail",
      "firewall": "Firewall",
      "monitoring": "Monitoring",
      "logging": "Logging",
      "time": "Time",
      "certificate": "Certificates",
      "network": "Network"
    },
    "install": {
      "step4a": "Authentication",
      "step4b": "Backup",
      "step41": "Directory",
      "step42": "Initial account",
      "step21": "Time",
      "step23": "Certificates",
      "step22": "Network",
      "step24": "Apply",
      "step5": "Completed",
      "step3": "Start KeyHub",
      "step2": "Configuration",
      "step1": "Password",
      "step0": "Welcome"
    },
    "profile": {
      "account": "Account",
      "folders": "Dashboard layout",
      "sessions": "Sessions",
      "consent": "Applications",
      "main": "Profile"
    },
    "schedules": "Cron jobs",
    "account": {
      "auditlog": "Audit log",
      "attributes": "Attributes",
      "details": "Details"
    },
    "accounts": {
      "main": "Accounts",
      "cleanup": "Clean up",
      "bulkedit": "Bulk edit",
      "overview": "User accounts",
      "service": "Service accounts"
    },
    "systems": "Linked systems",
    "administration": "Administration",
    "serviceaccount": {
      "details": "Details",
      "groupsonsystem": "Groups on system"
    },
    "uitloggen": "Logout",
    "directory": {
      "details": "Details",
      "accounts": "Accounts"
    },
    "backups": "Backups",
    "attributedefinitions": "Attribute definitions",
    "applications": "Applications",
    "support": {
      "main": "Support",
      "logs": "Logs",
      "supportdumps": "Support dumps"
    },
    "dashboard": "Dashboard",
    "access": "Manage access",
    "directories": "Directories",
    "help": "Help",
    "replication": {
      "step1": "Setup link",
      "step2": "Configuration",
      "step3": "Start replication",
      "step0": "Welcome",
      "step23": "Apply",
      "step21": "Network",
      "step22": "Certificates"
    },
    "auditing": "Auditing",
    "launchpad": "Launchpad",
    "vault": "Vaults",
    "identitysources": "Identity sources",
    "actions": "Actions",
    "groups": "Groups",
    "audit": "Audit log",
    "configuration": "Configuration",
    "organizationalunits": "Organisation",
    "accessprofiles": "Access profiles"
  },
  "base": {
    "actie": {
      "toestaan": "Approve",
      "copytoclipboard": "Copy to clipboard",
      "weigeren": "Decline",
      "upload": "Upload",
      "opslaanenvolgende": "Save and next",
      "aanvragen": "Request",
      "restore": "Restore",
      "verstuur": "Send",
      "dismiss": "Dismiss",
      "deactiveer": {
        "succes": {
          "main": "Deactivated",
          "detail": "{0} has been deactivated."
        },
        "main": "Deactivate"
      },
      "recover": "Recover",
      "opslaanmetfouten": "Save with errors",
      "movegroups": "Move groups",
      "search": "Search",
      "approve": "Approve",
      "clear": "Clear",
      "registermanual": "Register manually",
      "refresh": "Refresh",
      "annuleren": "Cancel",
      "bewerken": "Edit",
      "restorebackup": "Restore backup",
      "verwijderen": {
        "main": "Remove",
        "succes": {
          "main": "Removed",
          "detail": "{0} has been removed."
        }
      },
      "opslaan": {
        "succes": {
          "main": "Saved successfully.",
          "detail": "{0} has been saved successfully."
        },
        "main": "Save"
      },
      "applyall": "Apply all",
      "activeer": "Activate",
      "download": "Download",
      "terug": "Back",
      "bevestig": "Confirm",
      "enable": "Enable",
      "newgroup": "Request new group",
      "afronden": "Finish",
      "share": "Share",
      "toevoegen": "Add",
      "revoke": "Revoke access",
      "review": "Review",
      "view": "View",
      "sync": {
        "now": "Synchronise now",
        "started": "Synchronisation has started in the background."
      },
      "register": "Register now",
      "retry": "Retry",
      "apply": "Apply",
      "instellen": "Configure",
      "reject": "Reject",
      "start": "Start",
      "assign": "Assign",
      "toggleall": "(de)select all",
      "create": "Create",
      "volgende": "Next",
      "select": "Select",
      "repair": "Repair",
      "wijzigen": "Change",
      "openen": "Open",
      "reload": "Reload",
      "refreshall": "Refresh all",
      "audit": "Audit",
      "overslaan": "Skip",
      "ok": "OK",
      "close": "Close",
      "export": "Export",
      "test": "Test"
    },
    "all": "All",
    "more": {
      "load": "Load more",
      "1": "1 more element",
      "n": "{0} more elements",
      "lower": "more...",
      "main": "More..."
    },
    "enabled": "Enabled",
    "none": {
      "placeholder": "<none>",
      "main": "None"
    },
    "blank": " ",
    "applicationname": "Topicus KeyHub",
    "search": {
      "start": "Start your search here...",
      "keywords": "Search for keywords...",
      "main": "Search...",
      "olderthan": "Before...",
      "inactivesince": "Inactive since..."
    },
    "input": {
      "noperiod": "Indefinitely"
    },
    "notapplicable": "N/A",
    "disabled": "Disabled",
    "hidden": {
      "n": "{0} hidden elements",
      "1": "1 hidden element"
    },
    "off": "Off",
    "filter": "Filter",
    "or": "or",
    "on": "On",
    "generated": "Available when saved",
    "nieuw": "New",
    "valuechanged": "{0} (was {1})",
    "val": "{0}",
    "nodata": "<< no elements >>"
  },
  "access": {
    "hiddengroups": "> Show the {hiddenGroups} hidden group(s) on system without access",
    "type": {
      "serviceaccount": {
        "long": "Service account",
        "main": "Service account"
      },
      "client": {
        "LDAP": {
          "main": "LDAP app.",
          "long": "LDAP application"
        },
        "OAUTH2": {
          "sso": {
            "long": "OAuth2/OIDC application",
            "main": "OIDC app."
          },
          "client": {
            "main": "OAuth2 client",
            "long": "OAuth2 client"
          }
        },
        "SAML2": {
          "main": "SAML2 app.",
          "long": "SAML v2.0 application"
        }
      },
      "system": {
        "SOURCE_AZURE_OIDC_DIRECTORY": {
          "long": "Azure OIDC source directory",
          "main": "Azure OIDC source dir."
        },
        "AZURE_TENANT": {
          "main": "Azure tenant",
          "long": "Linked Azure tenant"
        },
        "PROVISIONED_NAMESPACE": {
          "main": "Namespace",
          "long": "Namespace"
        },
        "LDAP": {
          "long": "Linked LDAP",
          "main": "Linked LDAP"
        },
        "SOURCE_AZURE_SYNC_LDAP_DIRECTORY": {
          "main": "Azure tenant with AD Connect",
          "long": "Azure tenant with AD Connect"
        },
        "SOURCE_LDAP_DIRECTORY": {
          "long": "LDAP source directory",
          "main": "LDAP source dir."
        },
        "ACTIVE_DIRECTORY": {
          "main": "Linked AD",
          "long": "Linked Active Directory"
        },
        "INTERNAL_LDAP": {
          "main": "Internal LDAP",
          "long": "Internal LDAP"
        },
        "SCIM": {
          "long": "Linked SCIM server",
          "main": "Linked SCIM"
        }
      },
      "directory": {
        "INTERNAL": {
          "long": "Internal directory",
          "main": "Internal directory"
        }
      },
      "webhook": {
        "long": "Webhook",
        "main": "Webhook"
      },
      "grouponsystem": {
        "main": "Group on system",
        "long": "Group on system"
      }
    },
    "rights": {
      "manager": "Manager",
      "both": "Manager and technical administration",
      "technicalAdministrator": "Technical administration"
    },
    "head": {
      "technicalAdministrator": "Technical administration",
      "type": "Type",
      "options": "Access",
      "name": "Name",
      "owner": "Owner"
    },
    "warn": {
      "business": "Provisioning in this group is not available for its members with a Business license."
    },
    "filter": {
      "group": "Select a group...",
      "type": "Filter on type..."
    },
    "transfer": "Transfer"
  },
  "groupauditrequested": {
    "description": {
      "requested": "Requested by {0}",
      "long": "Group {0} requires an audit",
      "pending": "This request is pending to be completed before {0}",
      "overdue": "This request is overdue since {0}",
      "periodic": "Triggered by a periodic auditing on this group",
      "short": "Group {0} requires an audit"
    }
  },
  "admin": {
    "config": {
      "BACKUP_KEY": {
        "label": "Encrypted backups"
      },
      "apply": {
        "error": {
          "snmpport": "When SNMP is enabled, UDP-port 161 needs to be exposed in the firewall.",
          "letsencrypt": {
            "proxy": "Let's Encrypt cannot be used when the appliance is placed behind a proxy.",
            "offline": "Let's Encrypt cannot be used when the appliance is running offline."
          }
        },
        "main": "Apply configuration changes"
      },
      "backup": {
        "main": "Backups",
        "downloadkey": "Download the backup decryption key",
        "encrypt": "Encrypt backups",
        "generatingkeys": "Generating encryption keys"
      },
      "LOGGING_REMOTE_TLS_CLIENT_CERT": {
        "label": "Client certificate",
        "description": "The certificate KeyHub uses to authenticate itself with the log server."
      },
      "mail": "E-mail delivery",
      "MAIL_ADMIN": {
        "label": "Administrator e-mail address"
      },
      "PROXY_PROXIED": {
        "label": "Proxied setup",
        "description": "Only enable this option when Topicus KeyHub is running behind a reverse proxy. In such a setup a few HTTP headers are processed differently."
      },
      "stage": "Stage changes",
      "TIME_ZONE": {
        "label": "Time zone"
      },
      "panel": {
        "applyconfig": {
          "description": "The configuration will be applied, and a number of tests will be executed. If the new configuration turns out to be incorrect, the old settings will be restored.",
          "6final": "Finalizing configuration",
          "head": "Apply the given configuration",
          "1certs": "Testing certificate validity",
          "revert": "Reverting configuration to previous settings",
          "4internet": "Testing internet connectivity",
          "5url": "Testing URL reachability",
          "3redirect": "Redirect the session to the new URL",
          "2config": "Applying configuration",
          "start": "Apply configuration"
        },
        "mail": {
          "head": "Configure the e-mail delivery",
          "test": "Send test e-mail",
          "description": "Choose the e-mail server for Topicus KeyHub. E-mail is required for account registration during installation and normal use and for notifications.",
          "sent": "An email has been sent to {0}."
        },
        "firewall": {
          "monitoring": {
            "description": "SNMP (UDP port 161), if enabled, and the metrics and health endpoints (port 9443) are exposed through the monitoring zone.",
            "head": "Configure the monitoring zone in the firewall"
          },
          "backup": {
            "description": "The Topicus KeyHub appliance does not connect ports to the backup zone by default. This zone can, for example, be used to make a backup agent accessible.",
            "head": "Configure the backup zone in the firewall"
          },
          "management": {
            "head": "Configure the management zone in the firewall",
            "description": "The Management Console (port 50443), SSH (port 50022) and internal LDAP (port 389) are exposed through the management zone."
          }
        },
        "loadlistener": {
          "memrequired": "The overload protection setting requires at least {0} MB of memory for the Topicus KeyHub application.",
          "cpurequired": "The overload protection setting requires at least {0} CPU cores."
        },
        "logging": {
          "description": "Topicus KeyHub can stream the logging to a remote server. It is recommended to use a secure TLS connection. Upload the CA certificate used for the remote server and, when using client authentication, the client certificate KeyHub should use.",
          "info": "Information about the certificate",
          "missing": "No certificate given.",
          "head": "Configure log forwarding"
        },
        "start": {
          "2start": "Starting the application",
          "description": "The configuration is completed. It is now time to start Topicus KeyHub. This will take about five minutes.",
          "1pull": "Fetching container images",
          "head": "Start Topicus KeyHub",
          "start": "Start the application"
        },
        "memory": {
          "manager": "Appliance manager:",
          "dbos": "Database and operating system:",
          "total": "Total:",
          "app": "Topicus KeyHub application:"
        },
        "certificates": {
          "cainfo": "Certificate authority(-ies)",
          "info": "Information about the certificate",
          "missing": "No certificate given.",
          "description": "Topicus KeyHub must be used via a secured connection. It is recommended to use a certificate signed by a trusted certificate authority. When Topicus KeyHub is served on an internal URL, the used CA certificate must also be provided.",
          "head": "Configure the server certificates"
        },
        "authentication": {
          "head": "Change the authentication information for maintenance",
          "description": "Choose a password for the maintenance login on Topicus KeyHub. This password can be used to logon to the Topicus KeyHub maintenance application, even if Topicus KeyHub itself is not running. Choose a strong password and store it in a safe location. A public key can be specified for logging in via SSH."
        },
        "otlp": {
          "head": "Configure OTLP"
        },
        "transferurl": {
          "msg": "The browser will be redirected to the new URL as soon as it is available:",
          "revert": "The configuration will be reverted in # seconds."
        },
        "application": {
          "description": "Change the configuration of the Topicus KeyHub application.",
          "head": "Configure the application"
        },
        "restore": {
          "description": "The uploaded backup will be restored. This can take several minutes, depending on the size of the backup.",
          "head": "Restore the backup"
        },
        "backup": {
          "description": "Create a user to access the backups or open ports in the firewall for specialized backup software.",
          "head": "Configure backup software"
        },
        "network": {
          "head": "Configure the network parameters",
          "description": "Choose the network settings for Topicus KeyHub. Change these settings carefully, because a misconfiguration can render the Topicus KeyHub machine completely inaccessible."
        },
        "snmp": {
          "head": "Configure SNMP"
        },
        "monitoring": {
          "head": "Monitoring"
        },
        "time": {
          "head": "Configure the time"
        }
      },
      "MANAGEMENT_FIREWALL_WHITELIST": {
        "label": "IP whitelist for firewall for management",
        "description": "Management ports will only be accessible from IP addresses in this whitelist."
      },
      "MONITORING_SAMPLING_INTERVAL": {
        "description": "The number of seconds between statistics measurements.",
        "label": "Sampling interval"
      },
      "MONITORING_FIREWALL_TCPPORTS": {
        "description": "Specify ports between 1 and 65535 separated by commas. A range can be specified as 'start-end'. This list always contains port 9443 (metics and health).",
        "label": "Exposed TCP ports for monitoring"
      },
      "task": {
        "idpkeys": "Regenerating IdP signing certifcate",
        "renewletsencrypt": "Renewing web certificates",
        "writeconfig": "Writing configuration"
      },
      "MONITORING_OTLP_TLS_CA_BUNDLE": {
        "label": "Certificate authority(-ies)",
        "description": "Provide a PEM bundle with all the certificates needed to construct a complete certificate chain from root to the final certificate.",
        "placeholder": "Choose a CA bundle (PEM)"
      },
      "MONITORING_FIREWALL_UDPPORTS": {
        "description": "Specify ports between 1 and 65535 separated by commas. A range can be specified as 'start-end'.",
        "label": "Exposed UDP ports for monitoring"
      },
      "IP_DEFAULT_GW": {
        "label": "Gateway"
      },
      "CERTIFICATE_CA": {
        "placeholder": "Choose a CA bundle (PEM)",
        "label": "Certificate authority(-ies)",
        "description": "Provide a PEM bundle with all the certificates needed to construct a complete certificate chain from root to the final certificate."
      },
      "CERTIFICATE_LETSENCRYPT": {
        "label": "Let's Encrypt",
        "description": "Automatically configure the certificates using Let's Encrypt."
      },
      "MONITORING_OTLP_HEADER_NAME": {
        "label": "Custom header name",
        "description": "Name of a custom header to send along, for instance containing an API-key."
      },
      "global": "Cluster-wide configuration",
      "firewall": "Firewall",
      "BACKUP_FIREWALL_TCPPORTS": {
        "description": "Specify ports between 1 and 65535 separated by commas. A range can be specified as 'start-end'.",
        "label": "Exposed TCP ports for backup"
      },
      "LOGGING_REMOTE_URI": {
        "label": "Server address"
      },
      "YUM_REPO": {
        "unsupported": "Only the stable release channel will receive support. Using a different channel is at your own risk.",
        "label": "Release channel"
      },
      "LOGGING_REMOTE_TLS_CA_BUNDLE": {
        "placeholder": "Choose a CA bundle (PEM)",
        "label": "Certificate authority(-ies)",
        "description": "Provide a PEM bundle with all the certificates needed to construct a complete certificate chain from root to the final certificate. This chain must be used both for the log server's certificate and, if appropriate, for the client certificate."
      },
      "MONITORING_OTLP_TLS_LEVEL": {
        "label": "TLS"
      },
      "SSH_PASSWORD_AUTHENTICATION": {
        "label": "SSH password authentication"
      },
      "MAIL_CUSTOM_PARAMETERS": {
        "description": "Additional configuration options that will be passed to Postfix directly. One configuration option per line.",
        "label": "Additional Postfix configuration"
      },
      "MONITORING_SNMP_V3USER": {
        "label": "SNMP v3 username"
      },
      "LOGGING_REMOTE_PORT": {
        "label": "Server port"
      },
      "BACKUP_FIREWALL_WHITELIST": {
        "label": "IP whitelist for firewall for backup",
        "description": "Backup ports will only be accessible from IP addresses in this whitelist."
      },
      "MANAGEMENT_FIREWALL_TCPPORTS": {
        "label": "Exposed TCP ports for management",
        "description": "Specify ports between 1 and 65535 separated by commas. A range can be specified as 'start-end'. This list always contains port 389, 50022 en 50443 (LDAP, SSH and the Management Console)."
      },
      "BACKUP_SSH_KEY": {
        "label": "SSH key for backup user"
      },
      "JAVA_MEM": {
        "label": "Memory allocation",
        "description": "Divide the VM's memory among the different components."
      },
      "MANAGEMENT_FIREWALL_UDPPORTS": {
        "label": "Exposed UDP ports for management",
        "description": "Specify ports between 1 and 65535 separated by commas. A range can be specified as 'start-end'."
      },
      "IP_DNS_SERVERS": {
        "label": "DNS servers"
      },
      "LOGGING_REMOTE_TLS_LEVEL": {
        "label": "TLS"
      },
      "COMPANY_REPO": {
        "description": "Provide your own RPM repository for downloading updates and/or your own packages.",
        "label": "Company repository"
      },
      "MAIL_USERNAME": {
        "label": "Username"
      },
      "MONITORING_SNMP_V3PASSWORD": {
        "label": "SNMP v3 password"
      },
      "IP_DHCP_ENABLED": {
        "label": "DHCP",
        "option": {
          "false": "Static IP configuration",
          "true": "DHCP enabled"
        }
      },
      "BACKUP_FIREWALL_UDPPORTS": {
        "description": "Specify ports between 1 and 65535 separated by commas. A range can be specified as 'start-end'.",
        "label": "Exposed UDP ports for backup"
      },
      "MAIL_PASSWORD": {
        "label": "Password"
      },
      "IP_STATIC": {
        "label": "IP address"
      },
      "MAIL_SENDER": {
        "label": "Sender address for E-mail",
        "description": "This email address is only used for mail sent by the Topicus KeyHub appliance manager."
      },
      "MONITORING_OTLP_TLS_CLIENT_CERT": {
        "label": "Client certificate",
        "description": "The certificate KeyHub uses to authenticate itself with the OTLP endpoint."
      },
      "MONITORING_SNMP_V3": {
        "description": "Expose monitoring information via SNMP v3 using the credentials given below. Authentication is secured with SHA and traffic is encrypted with AES.",
        "label": "Enable SNMP v3"
      },
      "MACHINE_DOMAIN": {
        "label": "Domain"
      },
      "KEYHUB_USER_PASSWORD": {
        "label": "New maintenance password"
      },
      "time": "Time",
      "SHUTDOWN_ON_LOST_QUORUM": {
        "description": "Stop the application on nodes that do not hold a quorum within the cluster. This prevents a possible split-brain scenario but also increases the chance of downtime in the event of failures.",
        "label": "Shutdown on lost quorum"
      },
      "LOGGING_REMOTE_ENABLED": {
        "label": "Send logs to remote server"
      },
      "CERTIFICATE_FILE": {
        "label": "Server certificate",
        "description": "Ensure this certificate is trusted by the browser you are currently using."
      },
      "MONITORING_SNMP_V2COMMUNITY": {
        "label": "SNMP v2c community"
      },
      "MONITORING_SNMP_V2C": {
        "label": "Enable SNMP v2c",
        "description": "Expose monitoring information via SNMP v2c using the community string given below. V2c is not encrypted and the community string offers very limited protection."
      },
      "OFFLINE": {
        "label": "Offline",
        "description": "Run Topicus KeyHub without an internet connection."
      },
      "MONITORING_FIREWALL_WHITELIST": {
        "label": "IP whitelist for firewall for monitoring",
        "description": "Monitoring ports will only be accessible from IP addresses in this whitelist."
      },
      "TIME_NTP_SERVERS": {
        "label": "NTP servers",
        "description": "Use these NTP servers instead of servers from the NTP pool. One server per line."
      },
      "LOGGING_REMOTE_TEMPLATE": {
        "description": "The format for the sent messages. Refer to the rsyslog documentation for possible values.",
        "label": "Template"
      },
      "MONITORING_OTLP_HEADER_VALUE": {
        "label": "Custom header value",
        "description": "Value of a custom header to send along, for instance containing an API-key."
      },
      "BACKUP_USER_ENABLED": {
        "label": "Create backup user",
        "description": "Create a user named 'keyhub-backup' with read permissions on the backups. This user does not have a shell and therefore cannot login via SSH."
      },
      "KEYHUB_USER_SSH_KEY": {
        "label": "SSH key for keyhub user"
      },
      "MONITORING_OTLP_ENABLED": {
        "label": "Enable OTLP",
        "description": "Send monitoring information and metrics via OTLP to the endpoint specified below."
      },
      "certificate": "Server certificates",
      "network": "Network parameters",
      "MACHINE_HOSTNAME": {
        "label": "Hostname"
      },
      "BACKUP_RETENTION": {
        "label": "Backup retention",
        "description": "The number of backups to keep before the oldest backup is removed."
      },
      "LOAD_LISTENER_FACTOR": {
        "label": "Overload protection",
        "description": "Sets the sensitivity of the overload protection."
      },
      "CERTIFICATE_IDP": {
        "label": "IdP signing certificate"
      },
      "application": "Application",
      "staged": "The changes have been staged and need to be applied before they take effect.",
      "authentication": "Authentication",
      "BACKUP_USER_PASSWORD": {
        "label": "Password backup user"
      },
      "CLUSTER_COORDINATOR_ID": {
        "label": "Cluster coordinator"
      },
      "MAIL_ENCRYPTION": {
        "label": "Encryption"
      },
      "MAINTENANCE_MODE": {
        "label": "Maintenance mode",
        "description": "When the application runs in maintenance mode, you can only logon with the admin account and the maintenance password. "
      },
      "EXTERNAL_URL": {
        "label": "External URL"
      },
      "logging": "Logging",
      "MAIL_URI": {
        "label": "E-mail server"
      },
      "IP_NETMASK": {
        "label": "Netmask"
      },
      "MONITORING_OTLP_ENDPOINT": {
        "label": "OTLP endpoint"
      },
      "monitoring": "Monitoring",
      "MONITORING_SNMP_V3PRIVPASSWORD": {
        "label": "SNMP v3 privacy password"
      }
    },
    "dashboard": {
      "status": {
        "lastupdatecheck": "Last check:",
        "setupnow": "Configure now",
        "disabled": "Disabled",
        "checkupdates": "Check now",
        "autoupdates": {
          "keyhubonly": "Only Topicus KeyHub updates",
          "systemonly": "Only system updates",
          "main": "Automatic updates:"
        },
        "backupnow": "Backup now",
        "enabled": "Enabled",
        "autobackup": "Automatic backups:",
        "never": "Never",
        "lastbackup": "Last backup:",
        "notconfigured": "Not configured",
        "checkosupdates": "Check os updates"
      },
      "disk": {
        "main": "Disk usage",
        "free": "Free",
        "used": "Used",
        "mbfree": "{0} free"
      },
      "snapshot": "Snapshot status",
      "appstatus": "Application status",
      "cpu": {
        "main": "CPU usage",
        "system": "System",
        "iowait": "IO-Wait",
        "user": "User",
        "idle": "Idle"
      }
    },
    "replication": {
      "details": {
        "pg": {
          "head": "PostgreSQL database"
        },
        "overall": {
          "head": "Topicus KeyHub node {0}"
        },
        "pgpool": {
          "head": "Pgpool status"
        }
      },
      "problem": {
        "DATABASE_DETACHED": {
          "repair": {
            "label": "Recover database"
          }
        },
        "repair": {
          "ok": "The operation has been executed. The effect should be visible within a few minutes."
        },
        "NO_PRIMARY_DATABASE": {
          "repair": {
            "error": "A primary database already exists in the cluster.",
            "label": "Force promotion",
            "confirm": "Are you sure you want to promote the database on this node to primary? Always make sure the old primary node is shut down."
          }
        },
        "NOT_FOLLOWING_PRIMARY": {
          "repair": {
            "label": "Recover database"
          }
        },
        "PGPOOL_DOWN": {
          "repair": {
            "error": "The status of the node has changed.",
            "label": "Recover Pgpool",
            "confirm": "Are you sure you want to try to restore pgpool? This may require a pgpool restart on multiple nodes, resulting in an interruption of the service."
          }
        },
        "MULTIPLE_PRIMARY_DATABASES": {
          "repair": {
            "label": "Recover database"
          }
        },
        "DATABASE_DOWN": {
          "repair": {
            "error": "The status of the database has changed.",
            "label": "Recover database"
          }
        },
        "cluster": {
          "head": "A problem has been detected within the cluster.",
          "msg": "Inspect the node for details and a possible solution."
        },
        "APPLICATION_NOT_READY": {
          "repair": {
            "label": "Set available"
          }
        },
        "DATABASE_INCONSISTENT": {
          "repair": {
            "label": "Recover database"
          }
        },
        "APPLICATION_NOT_LIVE": {
          "repair": {
            "label": "Repair"
          }
        },
        "head": "A problem with this node has been detected."
      },
      "step0": {
        "list": {
          "cert": "Server certificate with corresponding private key",
          "config": "Network settings (IP address, subnet mask, DNS servers, etc.)",
          "instance": "A cleanly deployed Topicus KeyHub VM with exactly the same version as this VM: {0}.",
          "sshpwd": "SSH password authentication must be enabled on the new VM.",
          "main": "Before continuing, the following items should be available:"
        },
        "dhcp": "Clustering cannot be used with a DHCP network configuration.",
        "info": "This wizard will guide you through the steps to add a new Topicus KeyHub instance to the cluster. This process will take about 30 minutes and you can track the progress via the menu on the left.",
        "header": "Add Topicus KeyHub instance",
        "main": "Replication"
      },
      "step23": {
        "description": "The configuration will be applied, and a number of tests will be executed.",
        "head": "Apply the given configuration",
        "main": "Apply configuration"
      },
      "step21": {
        "ipwhitelist": "The firewall management zone of the node with IP {0} does not allow traffic from {1}.",
        "main": "Configure network parameters",
        "fwerror": "The firewall rules in the cluster do not allow free communication on port 50022 between the nodes."
      },
      "restartpgpool": {
        "main": "Restart Pgpool",
        "confirm": "Are you sure you want to restart Pgpool on all nodes? This will result in an interruption of service."
      },
      "promote": "Promote to coordinator",
      "task": {
        "initdbwait": "Waiting until the database has synchronised",
        "restartpgpool": "Restarting Pgpool",
        "synctimers": "Synchronising cron jobs",
        "initdb": "Initializing database",
        "setuplink": "Setting up link",
        "linkupwait": "Waiting for the cluster link",
        "promotedb": "Promote database",
        "refresh": "Refreshing",
        "shutdownnode": "Stopping instance",
        "recoverdb": "Recover database",
        "testlink": "Testing link",
        "removenode": "Disconnecting link"
      },
      "repair": {
        "warning": {
          "lastaudit": "The timestamp of the target database's last audit record is after that of the source database. The target database may have been more recently updated.",
          "auditcount": "The target database contains more audit records than the source database. The target database may contain more data.",
          "dberror": "There was a problem reading the database on this node. The backup may not contain any data.",
          "firstaudit": "The timestamp of the target database's first audit record does not match that of the source database. The timelines of the databases may be different.",
          "size": "The target database is larger than the source database. The target database may contain more data.",
          "main": "Data will be lost when restoring the primary database over this target database. This cannot be undone."
        },
        "primary": {
          "head": "Primary database on {0}"
        },
        "backup": "Create a backup before the database is overwritten.",
        "error": {
          "noprimary": "There is no primary database in the cluster to recover from."
        },
        "repair": {
          "head": "Database on the failing node {0}"
        }
      },
      "step1": {
        "head": "Establish link",
        "description": "Enter the IP address and 6-digit password of the VM to be connected. Please note, this VM must be a clean installation with exactly the same version as this VM.",
        "main": "Setup link"
      },
      "remove": {
        "head": "Remove replicated node {0}",
        "coordinator": "This node is the cluster coordinator and therefore cannot be removed.",
        "description": "You are about to remove the replicated node {0} ({1}). The node will be removed from the cluster and shut down. When removing a node from the cluster, all other nodes will have to restart to update their configuration."
      },
      "step3": {
        "head": "Start replication",
        "description": "The database will be replicated and Topicus KeyHub will be started.",
        "main": "Apply configuration"
      },
      "save": {
        "description": "You are about to update the status of the nodes in the cluster. Disabled nodes will be removed from the cluster. During the updating of the changes, the services on the nodes will restart.",
        "head": "Update node configuration"
      },
      "current": "current host",
      "warning": {
        "notproxied": "Clustering is only available in a proxied setup.",
        "toomanynodes": "You have more cluster nodes than allowed by your license.",
        "clusternotallowed": "Clustering is not allowed by your license."
      },
      "head": "Topicus KeyHub cluster",
      "step22": "Configure server certificates"
    },
    "impact": {
      "URI": "When changing the external URL, always check if this new URL is accepted by the license, has a matching certificate and the DNS record is correct.",
      "NETWORK": "Changing the network configuration can make Topicus KeyHub inaccessible. These settings can always be reverted on the terminal.",
      "MAIL": "A test e-mail will be sent to {0}.",
      "KEYHUB_RESTART": "Topicus KeyHub will restart when these changes are applied."
    },
    "disk": {
      "assign": {
        "subtitle": "Divide the available disk space over the 4 volumes.",
        "title": "Assign disk space",
        "error": "Assign exactly all available space. Remaining must be 0.",
        "confirm": "Always take a snapshot of the entire VM before making these changes. Are you sure you want to continue?",
        "main": "Assign disk space"
      },
      "reserved": "reserved",
      "scan": "Rescan disk",
      "unallocated": "unallocated"
    },
    "updates": {
      "available": {
        "subtitle": "These system updates are available for installation on the system.",
        "title": "Available updates"
      },
      "task": {
        "upgrade_db": "Updating PostgreSQL",
        "setunavailable": "Removing the node from the cluster",
        "performosupgrade": "Updating the operating system",
        "checkosupgrade": "Preparing the operating system upgrade",
        "create_snapshot": "Creating a snapshot of the system",
        "reboot": "Rebooting",
        "wait_snapshot": "Waiting until the snapshot can be created",
        "update_os": "Installing operating system updates",
        "uploadrecovery": "Storing vault recovery public key",
        "update_tkh": "Updating Topicus KeyHub",
        "adminrestart": "Restarting appliance manager",
        "failover": "Assign tasks to other nodes in the cluster",
        "finalize_db": "Finalizing database upgrade",
        "wait_lb": "Waiting for the loadbalancer to pickup the state change",
        "upgrade_salt": "Updating SaltStack",
        "reboot_required": "Checking if reboot is required",
        "pull": "Fetching updated container images",
        "check_cluster": "Checking the cluster for problems",
        "upgrade_docker": "Updating Docker",
        "shutdown": "Shutting down",
        "cleanup": "Cleaning up update files",
        "check_updates": "Checking for available updates",
        "remove_snapshot": "Cleaning up",
        "refresh_node_state": "Refreshing the state of the node",
        "prepare_offline": "Preparing offline update",
        "syncconf": "Updating system configuration",
        "waituser1": "Waiting for the first user to be registered",
        "unpack_offline": "Unpacking offline update file",
        "setavailable": "Putting the node back in the cluster",
        "stoppgpool": "Stopping Pgpool",
        "cleanuposupgrade": "Finishing the operating system upgrade",
        "decrypt_offline": "Verifying offline update file",
        "syncconflocal": "Updating system configuration (local)",
        "pg_upgrade_available": "Checking if a database upgrade is available",
        "waitstart": "Waiting for the application to become available",
        "startpgpool": "Starting Pgpool"
      },
      "offline": "Update",
      "upload": {
        "title": "Update offline",
        "notice": "Always update Topicus KeyHub in a cluster to the next version. Do not skip versions.",
        "subtitle": "Upload an update file for Topicus KeyHub."
      },
      "uptodate": "This is the latest version",
      "reboot": "Reboot now",
      "osupgrade": {
        "warn": {
          "subtitle": "Upgrade the operating system to AlmaLinux 8.",
          "main": "The operating system upgrade cannot be undone. If something goes wrong during the upgrade, the system will not be restored. Always take a snapshot of the entire VM before proceeding. If you have any questions, please contact Topicus KeyHub support.",
          "title": "Upgrade operating system"
        },
        "nosnapshot": "Place the checkmark to continue."
      },
      "hotfixes": {
        "versionstring": "{0} (hotfixes: {1})",
        "apply": {
          "title": "Apply hotfix",
          "subtitle": "Apply the hotfix to the system.",
          "error": "Unable to apply the hotfix: {0}"
        },
        "upload": {
          "title": "Hotfix",
          "subtitle": "Upload the hotfix."
        },
        "task": "Applying hotfix {0}"
      },
      "now": "Update now",
      "noofflinelicense": "Your license does not allow offline updating.",
      "updateavailable": "Topicus KeyHub <strong>{0}<\/strong> is available",
      "diskfull": "There is not enough disk space to perform the update. Provide at least 5GB of free space in /.",
      "osupgradeavailable": "An update to <strong>AlmaLinux 8<\/strong> is available",
      "dbupgradeavailable": "An update to <strong>PostgreSQL {0}<\/strong> is available"
    },
    "install": {
      "step0": {
        "list": {
          "config": "Network and e-mail settings (IP address, subnet mask, DNS servers, URL for KeyHub, e-mail server address, etc.)",
          "usb": "2 USB keys",
          "main": "The following items are prerequisites for a smooth installation:",
          "cert": "Server certificate with corresponding private key"
        },
        "memerror": "The VM has insufficient memory. Make sure that at least 6GB is available.",
        "main": "Welcome",
        "header": "Welcome to Topicus KeyHub",
        "info": "This installation wizard will guide you through the steps necessary to install Topicus KeyHub. The complete installation will take around 30 minutes and you can track the progress via the menu on the left."
      },
      "step23": {
        "generate": "Generate certificate",
        "main": "Configure server certificates"
      },
      "step41": {
        "wipeConfirm": "Are you sure you want to clear all fields?",
        "wipe": "Clear all",
        "directoryType": "Directory type",
        "main": "Setup primary directory"
      },
      "step5": {
        "paragraph2": "Further configuration of the appliance is possible after completing this wizard. Options such as e-mail, backups and monitoring can be set up via the dashboard and the configuration menu.",
        "paragraph1": "Topicus KeyHub has been installed successfully. You can now continue setting up KeyHub for your organisation via the link below.",
        "main": "Installation completed",
        "title": "Installation completed!"
      },
      "step1": "Change maintenance password",
      "step3": "Start Topicus KeyHub",
      "steps": "Installation steps",
      "step42": {
        "click": "Open the link below and register the first user:",
        "head": "Register the first user",
        "description": "Now register the first user. This first user will automatically be assigned KeyHub administrator privileges. Return to this screen after the registration to complete the installation.",
        "main": "Create first administrator account"
      },
      "step24": "Apply configuration",
      "step22": "Configure network parameters",
      "step21": "Configure time",
      "step4b": "Restore backup"
    },
    "actions": {
      "shutdown": {
        "main": "Shutdown",
        "confirm": "Shutdown the Topicus KeyHub appliance?",
        "description": "Shutdown the Topicus KeyHub virtual appliance."
      },
      "syncconfig": {
        "main": "Update configuration",
        "confirm": "Update the Topicus KeyHub appliance configuration?",
        "description": "Check and update the system configuration of the Topicus KeyHub virtual appliance against the definition."
      },
      "applyhotfix": {
        "description": "Apply a hotfix to the system.",
        "main": "Apply hotfix"
      },
      "forceletsencryptrenewal": {
        "description": "Renew the web certificates via Let's Encrypt. This normally happens automatically.",
        "main": "Renew certificates",
        "confirm": "Renew the web certificates?"
      },
      "syncconfiglocal": {
        "main": "Update configuration (local)",
        "confirm": "Update the Topicus KeyHub appliance configuration on this node?",
        "description": "Check and update the system configuration of the Topicus KeyHub virtual appliance against the definition on this node."
      },
      "reboot": {
        "description": "Reboot the Topicus KeyHub virtual appliance.",
        "main": "Reboot",
        "confirm": "Reboot the Topicus KeyHub appliance?"
      },
      "head": "Available actions",
      "rebootall": {
        "main": "Reboot all nodes",
        "description": "Reboot all Topicus KeyHub nodes in the cluster one by one.",
        "confirm": "Reboot all Topicus KeyHub appliances?"
      }
    },
    "logs": {
      "5mb": "/ Last 5 MB",
      "all": "Entire file"
    },
    "pending": {
      "applying": "Applying configuration changes",
      "applyfirst": "Apply the pending changes first.",
      "apply": "Apply",
      "changes": "{0} changes pending",
      "backup": "Create a backup before the changes are applied.",
      "change": "1 change pending",
      "discard": "Discard",
      "emailtest": "Sending test e-mail",
      "description": "These changes are pending to be committed to the Topicus KeyHub appliance. Please check these changes carefully before applying."
    },
    "support": {
      "task": {
        "process": "Merging data to {0}",
        "gather": "Collecting data for {0}",
        "cleanup": "Cleaning up support dumps",
        "stats": "Collecting usage statistics"
      },
      "create": {
        "subtitle": "Create a dump with all logs from a given day and the current status of the application.",
        "title": "Create support dump"
      },
      "dumps": {
        "head": "Existing support dumps"
      }
    },
    "schedule": {
      "update": "Scheduled updates",
      "backup": "Scheduled backups"
    },
    "backups": {
      "restore": {
        "confirm": "Are you sure you want to restore the backup '{0}'? All data will be overwritten.",
        "error": "The backup cannot be decrypted, the key may be invald: {0}",
        "title": "Restore backup",
        "subtitle": "Restore the backup '{0}'."
      },
      "task": {
        "stop": "Stopping Topicus KeyHub",
        "create": "Creating a backup",
        "restore": "Restoring {0}",
        "restoretimers": "Restoring cron jobs",
        "remove": "Removing {0}"
      },
      "upload": {
        "title": "Upload a backup",
        "subtitle": "The backup can be restored after uploading."
      },
      "head": "Available backups"
    },
    "deployment": {
      "replication": "Replication",
      "disk": "Disk management"
    },
    "login": {
      "main": "Topicus KeyHub Maintenance",
      "sso": "Sign in via Topicus KeyHub",
      "keyhub": "Login using the KeyHub maintenance account",
      "keyhubpwd": "Enter the maintenance password"
    },
    "tasks": {
      "collapsed": "> {0} steps collapsed for {1}",
      "allenabled": "all nodes",
      "notfinished": "A background process is already running. Please wait until this process is finished.",
      "local": "local",
      "allenabledbutlocal": "all nodes except local"
    },
    "vault": {
      "recovery": {
        "downloadprivate": "Download the vault recovery private key",
        "generating": "Generating the vault recovery keypair",
        "key": "Vault recovery key"
      }
    }
  },
  "enum": {
    "setting": {
      "NOTIFICATIONS_EMAIL_SENDER": "The sender address for E-mail; set to '{0}'.",
      "NOTIFICATIONS_LICENSE_USER_WARN": "The user license reserve; set to '{0}'.",
      "BRANDING_LOGO": "The branding logo",
      "PROVISIONING_TRACING": {
        "true": "Verbose provisioning logging enabled.",
        "false": "Verbose provisioning logging disabled."
      },
      "TWO_FACTOR_AUTH_TIMEOUT": "The 2FA authentication timeout; set to '{0}'.",
      "NOTIFICATIONS_EMAIL_SIGNATURE": "The e-mail signature.",
      "AUDITOR_GROUP": {
        "empty": "The group for auditing was emptied.",
        "main": "The group for auditing; set to '{0}'."
      },
      "REMOVE_GROUP_APPROVE_GROUP": {
        "empty": "The group for approval of 'Remove group' requests was emptied.",
        "main": "The group for approval of 'Remove group' requests; set to '{0}'."
      },
      "RECOVERY_FALLBACK_GROUP": {
        "empty": "The password recovery fallback group was emptied.",
        "main": "The password recovery fallback group; set to '{0}'."
      },
      "ENABLE_TECH_ADMIN_APPROVE_GROUP": {
        "main": "The group for approval of 'Enable technical administration' requests; set to '{0}'.",
        "empty": "The group for approval of 'Enable technical administration' requests was emptied."
      },
      "CREATE_GROUP_PLACEHOLDER": {
        "empty": "The hint for new group names was emptied.",
        "main": "The hint for new group names; set to '{0}'."
      },
      "WEB_SESSION_TIMEOUT": "The web session timeout; set to '{0}'.",
      "PASSWORD_GENERATOR": "The password generation scheme; set to '{0}'.",
      "NOTIFICATIONS_EMAIL_HIDE_LINKS": {
        "false": "Do not hide links in e-mails.",
        "true": "Hide links in e-mails."
      },
      "PASSWORD_AUTH_TIMEOUT": "The password authentication timeout; set to '{0}'.",
      "LDAP_SERVER_PRIVATE_KEY": "The LDAP server certificate.",
      "VAULT_RECOVERY_PUBLIC_KEY": "The key for vault recovery.",
      "CREATE_GROUP_APPROVE_GROUP": {
        "empty": "The group for approval of 'Create group' requests was emptied.",
        "main": "The group for approval of 'Create group' requests; set to '{0}'."
      },
      "RESPONSIBLE_DISCLOSURE": "The contents of the responsible disclosure.",
      "AUDIT_RECORD_PSEUDONYMIZATION": "The audit log pseudonymisation period; set to '{0}'.",
      "PERFORMANCE_LOGGING": {
        "true": "Verbose performance logging enabled.",
        "false": "Verbose performance logging disabled."
      },
      "PASSWORD_MIN_LENGTH": "The minimum password length; set to '{0}'.",
      "DOMAIN": "The domain; set to '{0}'.",
      "MAINTENANCE_MESSAGE": "The Maintenance message; set to '{0}'.",
      "AUDIT_RECORD_RETENTION": "The audit log retention period; set to '{0}'.",
      "DEFAULT_LICENSE_ROLE": "The default license role; set to '{0}'."
    },
    "MANUALLY_DISABLED": "by {0}",
    "DIRECTORY_VERIFICATION_FAILED": "verification with the directory failed",
    "KEYHUB_PASSWORD_VERIFICATION_FAILED": "the supplied KeyHub password is invalid",
    "TWO_FACTOR_AUTHENTICATION_REJECTED": "2fa was aborted",
    "TWO_FACTOR_AUTHENTICATION_TOKEN_MISMATCH": "the 2fa code was incorrect",
    "INVALID_IN_DIRECTORY": "because it became invalid in its directory",
    "DIRECTORY_AUTHENTICATION_FAILED": "the authentication was rejected by the directory",
    "TWO_FACTOR_AUTHENTICATION_DISABLED": "2fa was disabled",
    "MANUALLY_ENABLED": "by {0}",
    "VALID_IN_DIRECTORY": "because it became valid (again) in its directory",
    "ABUSE_REPORTED": "because abuse was reported via the KeyHub app"
  },
  "certificate": {
    "regenerate": {
      "msg": "Will be regenerated on save",
      "main": "Regenerate",
      "warn": "When the IdP signing certificate is regenerated, all users will be logged out and access tokens will be invalidated. For single sign-on connections it may be necessary to configure the new certificate at the relying party.\n\nAre you sure you want to continue?\n"
    },
    "fetch": {
      "failed": "The certificate could not be retrieved.",
      "main": "Fetch the certificate from the server"
    },
    "toevoegen": "Add certificate",
    "keypassword": "Password",
    "pkcs12": {
      "placeholder": "Choose a PKCS#12 file (.pfx or .p12)"
    },
    "certificate": {
      "select": {
        "nocert": "No certificate / Use the OS truststore",
        "addnew": "Choose a new certificate..."
      }
    },
    "expiresat": "Expires at: {0}",
    "bewerken": "Edit certificate",
    "subtitle": "This certificate can be used throughout KeyHub as a trusted certificate."
  },
  "audit": {
    "JOIN_VAULT_REQUESTED": "{performedBy} requested to be added to the vault for {onGroup}. {reason}",
    "TRANSFER_PROVISIONED_SYSTEM_ADMINISTRATION_DECLINED": "The request to transfer administration of {onSystem} to {onGroup} was rejected by {performedBy}. {reason}",
    "SETUP_AUTHORIZING_GROUP_DISCONNECT_DECLINED": {
      "AUDITING": "{performedBy} declined the request to stop reviewing of audits for {onGroup} by {onGroup2}. {reason}",
      "DELEGATION": "{performedBy} declined the request to remove the delegation of management of {onGroup} to {onGroup2}. {reason}",
      "MEMBERSHIP": "{performedBy} declined the request to remove the authorisation by {onGroup2} on management of membership of {onGroup}. {reason}",
      "PROVISIONING": "{performedBy} declined the request to remove the authorisation by {onGroup2} on activation of {onGroup}. {reason}"
    },
    "TRANSFER_ORGANIZATIONAL_UNIT_OWNERSHIP_ACCEPTED": "The request to transfer ownership of {onOrganizationalUnit} to {onGroup} was approved by {performedBy}. {reason}",
    "UPDATE_GROUP_MEMBERSHIP_DECLINED": "{performedBy} declined the request to give {onAccount} the following access to {onGroup2}: {parameter3} {reason}",
    "LICENSE_KEY_UPLOADED": {
      "bothLimits": "{performedBy} has uploaded a new license key for {parameter2} accounts that expires on {parameter1}. ",
      "userLimitOnly": "{performedBy} has uploaded a new license key for {parameter2} accounts.",
      "expirationOnly": "{performedBy} has uploaded a new license key that expires on {parameter1}.",
      "main": "{performedBy} has uploaded a new license key."
    },
    "UPDATE_LICENSE_ACCEPTED": "{performedBy} approved the request to use the new license. {reason}",
    "SETUP_AUTHORIZING_GROUP_CONNECT_ACCEPTED": {
      "AUDITING": "{performedBy} approved the request to have audits for {onGroup} reviewed by {onGroup2}. {reason}",
      "MEMBERSHIP": "{performedBy} approved the request to have management of membership of {onGroup} authorised by {onGroup2}. {reason}",
      "PROVISIONING": "{performedBy} approved the request to have activation of {onGroup} authorised by {onGroup2}. {reason}",
      "DELEGATION": "{performedBy} approved the request to setup delegation of management of {onGroup} to {onGroup2}. {reason}"
    },
    "SETUP_NESTED_GROUP_DISCONNECT_ACCEPTED": "{performedBy} approved the request to remove the nesting of {onGroup2} within {onGroup}. {reason}",
    "ENABLE_TECHNICAL_ADMINISTRATION_ACCEPTED": "The request to enable technical administration on {onGroup} was approved by {performedBy}. {reason}",
    "VERIFY_INTERNAL_ACCOUNT_REQUESTED": "{performedBy} requested verification of the internal account {onAccount}. {reason}",
    "export": {
      "subtitle": "Give a range for the audit log to be exported.",
      "title": "Export"
    },
    "MOVE_GROUPS_ACCEPTED": "{performedBy} approved the request by {onAccount} to move {parameter2} groups to {onOrganizationalUnit}. {reason}",
    "updaterequest": {
      "NORMAL": {
        "noenddate": "Normal privileges without an end date on the membership.",
        "enddate": "Normal privileges, the membership ends at {0}."
      },
      "MANAGER": {
        "noenddate": "Management privileges without an end date on the membership.",
        "enddate": "Management privileges, the membership ends at {0}."
      }
    },
    "GRANT_GROUP_ON_SYSTEM_ACCEPTED": {
      "group": "The request to grant the users in the group {onGroup} access to {gosType} {gosName} on {onSystem} was approved by {performedBy}. {reason}",
      "profile": "The request to grant the users in the access profile {onAccessProfile} access to {gosType} {gosName} on {onSystem} was approved by {performedBy}. {reason}"
    },
    "INTERNAL_ACCOUNT_ACTIVATED": "{onAccount} activated his/her internal account.",
    "VAULT_RECORD_MODIFIED": {
      "personal": "{performedBy} modified {onVaultRecord} in the personal vault of {onVaultHolder}.",
      "main": "{performedBy} modified {onVaultRecord} in the vault for {onGroup}."
    },
    "GROUP_AUTHORIZATION_DISCONNECTED": {
      "DELEGATION": "{performedBy} has removed the delegation of management of the group {onGroup} to {onGroup2}.",
      "MEMBERSHIP": "{performedBy} has removed the extra authorisation for the management of membership by {onGroup2} for the group {onGroup}.",
      "PROVISIONING": "{performedBy} has removed the extra authorisation for activation by {onGroup2} for the group {onGroup}.",
      "AUDITING": "{performedBy} has removed the extra authorisation for auditing by {onGroup2} for the group {onGroup}."
    },
    "INVALID_SIGNATURE_DETECTED": {
      "GROUP_MEMBERSHIP": "An invalid signature was detected for the membership of {onAccount} of the group {onGroup}.",
      "KEY_AUTHENTICATION_CODE": {
        "account": "An invalid authentication code was detected for {onAccount}'s account.",
        "group": "An invalid authentication code was detected for the group {onGroup}."
      },
      "ACCOUNT_SIGNED_ATTESTATIONS": "An invalid signature was detected for {onAccount}'s account.",
      "GROUP_KEY_ATTESTATION": "An invalid attestation was detected for the key of {onGroup} by {onAccount}.",
      "REPLACEMENT_KEY": "An invalid signature was detected for a replacement key for the group {onGroup}.",
      "GROUP_AUTHORIZATION": "An invalid signature was detected for properties of the group {onGroup}."
    },
    "TRANSFER_GROUP_ON_SYSTEM_OWNERSHIP_REQUESTED": "{performedBy} requested to transfer ownership of {gosType} {gosName} on {onSystem} to {onGroup}. {reason}",
    "JOIN_VAULT_DECLINED": "{performedBy} declined the request by {onAccount} to be added to the vault for {onGroup}. {reason}",
    "PROVISIONED_SYSTEM_ADDED_TO_GROUP": "{gosTypeCap} {gosName} on {onSystem} was added to the group {onGroup}.",
    "ACCOUNT_LOGIN": {
      "account": {
        "LOW": "{performedBy} successfully authenticated with a remembered login.",
        "MEDIUM": "{performedBy} successfully authenticated with a username and password.",
        "HIGH": "{performedBy} successfully authenticated with two-factor authentication."
      },
      "client": {
        "HIGH": "{performedBy} successfully authenticated with a client certificate.",
        "MEDIUM": "{performedBy} successfully authenticated with a client secret."
      }
    },
    "TRANSFER_GROUP_ON_SYSTEM_OWNERSHIP_ACCEPTED": "The request to transfer ownership of {gosType} {gosName} on {onSystem} to {onGroup} was approved by {performedBy}. {reason}",
    "VERIFY_INTERNAL_ACCOUNT_ACCEPTED": "{performedBy} approved the creation of the internal account {onAccount}. {reason}",
    "TRANSFER_ORGANIZATIONAL_UNIT_OWNERSHIP_REQUESTED": "{performedBy} requested to transfer ownership of {onOrganizationalUnit} to {onGroup}. {reason}",
    "GRANT_ACCESS_REQUESTED": "{performedBy} requested access to the group {onGroup2}. {reason}",
    "ACCOUNT_VAULT_UNLOCKED": "{performedBy} unlocked the vault.",
    "ACCOUNT_REMOVED_FROM_GROUP": {
      "MANUAL": {
        "main": "{onAccount} was removed from the group {onGroup} by {performedBy}.",
        "self": "{onAccount} left the group {onGroup}."
      },
      "AUDIT": "{onAccount} was removed from the group {onGroup} by {performedBy} as part of an audit.",
      "PASSWORD_RESET": "{onAccount} was removed from the group {onGroup} after a password reset.",
      "GROUP_MOVED": "The membership of {onAccount} for the group {onGroup} was removed as result of a move of the group to a different organisational unit.",
      "EXPIRED": "The membership of {onAccount} for the group {onGroup} has expired."
    },
    "JOIN_GROUP_ACCEPTED": {
      "profile": "{performedBy} approved the request for {onAccount} from the access profile {onAccessProfile} to be added to the group {onGroup}. {reason}",
      "group": "{performedBy} approved the request by {onAccount} to be added to the group {onGroup}. {reason}"
    },
    "ACCOUNT_REMOVED": "{performedBy} removed {onAccount}.",
    "SERVICE_ACCOUNT_PROVISIONING_INITED": "The service account {onServiceAccount} was added to the linked system {onSystem}.",
    "VAULT_RECORD_REMOVED": {
      "main": "{performedBy} removed {onVaultRecord} from the vault for {onGroup}.",
      "personal": "{performedBy} removed {onVaultRecord} from the personal vault of {onVaultHolder}.",
      "expired": {
        "main": "{onVaultRecord} was removed from the vault for {onGroup}.",
        "personal": "{onVaultRecord} was removed from the personal vault of {onVaultHolder}."
      }
    },
    "UPDATE_GROUP_MEMBERSHIP_REQUESTED": "{performedBy} requested to give {onAccount} the following access to {onGroup2}: {parameter3} {reason}",
    "ACCOUNT_PROVISIONING_SETUP": {
      "uid": "{onAccount} was setup on {onSystem} and was assigned UID {parameter1}.",
      "main": "{onAccount} was setup on {onSystem}."
    },
    "DIRECTORY_REMOVED": "{performedBy} removed the directory {onDirectory}.",
    "GRANT_GROUP_ON_SYSTEM_REQUESTED": {
      "group": "{performedBy} requested to give the users in the group {onGroup} access to {gosType} {gosName} on {onSystem}. {reason}",
      "profile": "{performedBy} requested to give the users in the access profile {onAccessProfile} access to {gosType} {gosName} on {onSystem}. {reason}"
    },
    "SETTING_MODIFIED": "{performedBy} modified a setting: {parameter1}",
    "JOIN_GROUP_DECLINED": {
      "profile": "{performedBy} declined the request for {onAccount} from the access profile {onAccessProfile} to be added to the group {onGroup}. {reason}",
      "group": "{performedBy} declined the request by {onAccount} to be added to the group {onGroup}. {reason}"
    },
    "SETUP_AUTHORIZING_GROUP_CONNECT_DECLINED": {
      "PROVISIONING": "{performedBy} declined the request to have activation of {onGroup} authorised by {onGroup2}. {reason}",
      "MEMBERSHIP": "{performedBy} declined the request to have management of membership of {onGroup} authorised by {onGroup2}. {reason}",
      "DELEGATION": "{performedBy} declined the request to setup delegation of management of {onGroup} to {onGroup2}. {reason}",
      "AUDITING": "{performedBy} declined the request to have audits for {onGroup} reviewed by {onGroup2}. {reason}"
    },
    "SETUP_AUTHORIZING_GROUP_DISCONNECT_ACCEPTED": {
      "MEMBERSHIP": "{performedBy} approved the request to remove the authorisation by {onGroup2} on management of membership of {onGroup}. {reason}",
      "DELEGATION": "{performedBy} approved the request to remove the delegation of management of {onGroup} to {onGroup2}. {reason}",
      "PROVISIONING": "{performedBy} approved the request to remove the authorisation by {onGroup2} on activation of {onGroup}. {reason}",
      "AUDITING": "{performedBy} approved the request to stop reviewing of audits for {onGroup} by {onGroup2}. {reason}"
    },
    "IDENTITY_SOURCE_REMOVED": "{performedBy} removed the identity source {onIdentitySource}.",
    "INTERNAL_ACCOUNT_MODIFIED": "{performedBy} modified the internal account {onAccount}.",
    "GRANT_ACCESS_ACCEPTED": "{performedBy} approved the request by {onAccount} to get access to {onGroup2} until {parameter3}. {reason}",
    "PROVISIONED_SYSTEM_REMOVED_FROM_GROUP": "{gosTypeCap} {gosName} on {onSystem} was removed from the group {onGroup}.",
    "CREATE_PROVISIONED_NAMESPACE_REQUESTED": "{performedBy} requested to create a namespace {parameter3}, based on {onSystem}. {reason}",
    "SETUP_NESTED_GROUP_DISCONNECT_DECLINED": "{performedBy} declined the request to remove the nesting of {onGroup2} within {onGroup}. {reason}",
    "GROUP_AUTHORIZATION_CONNECTED": {
      "MEMBERSHIP": "{performedBy} has set up extra authorisation for the management of membership by {onGroup2} for the group {onGroup}.",
      "AUDITING": "{performedBy} has set up extra authorisation for auditing by {onGroup2} for the group {onGroup}.",
      "PROVISIONING": "{performedBy} has set up extra authorisation for activation by {onGroup2} for the group {onGroup}.",
      "DELEGATION": "{performedBy} has delegated the management of the group {onGroup} to {onGroup2}."
    },
    "ORGANIZATIONAL_UNIT_REMOVED": "{performedBy} removed the organisational unit {onOrganizationalUnit}.",
    "ACCOUNT_DISABLED": "The account for {onAccount} was disabled {parameter1}.",
    "UPDATE_LICENSE_DECLINED": "{performedBy} declined the request to use the new license. {reason}",
    "CREATE_GROUP_REQUESTED": "{performedBy} requested to create the group {parameter3}. {reason}",
    "ACCOUNT_ADDED_TO_ORGANIZATIONAL_UNIT": "{performedBy} has added {onAccount} to the organisational unit {onOrganizationalUnit}.",
    "ACCOUNT_ADDED_TO_GROUP": {
      "NORMAL": {
        "endDate": "{performedBy} added {onAccount} to the group {onGroup} with normal privileges. The group membership ends at {parameter2}.",
        "main": "{performedBy} added {onAccount} to the group {onGroup} with normal privileges."
      },
      "MANAGER": {
        "main": "{performedBy} added {onAccount} to the group {onGroup} with management privileges.",
        "endDate": "{performedBy} added {onAccount} to the group {onGroup} with management privileges. The group membership ends at {parameter2}."
      }
    },
    "ENABLE_PROFILE_ADMINISTRATION_REQUESTED": "{performedBy} has requested to enable access profile administration on {onGroup}. {reason}",
    "GRANT_SERVICE_ACCOUNT_GROUP_REQUESTED": "{performedBy} requested to give the service account {onServiceAccount} access to {gosType} {gosName} on {onSystem}. {reason}",
    "GRANT_GROUP_ON_SYSTEM_REQUEST_REQUESTED": {
      "profile": "{performedBy} requested to give the users in the access profile {onAccessProfile} access to {gosType} {gosName} on {onSystem}. {reason}",
      "group": "{performedBy} requested to give the users in the group {onGroup} access to {gosType} {gosName} on {onSystem}. {reason}"
    },
    "PROVISIONED_SYSTEM_UNKNOWN_ACCOUNT_DESTROYED": "The unknown account {parameter1} was removed from the linked system {onSystem}.",
    "GROUP_CLASSIFICATION_MODIFIED": "{performedBy} modified the group classification {onGroupClassification}.",
    "ACCOUNT_GROUP_ACTIVATED": "{performedBy} activated {onGroup}.",
    "SERVICE_ACCOUNT_DEPROVISIONED": "The service account {onServiceAccount} was deactivated on the linked system {onSystem}.",
    "VAULT_RECORD_MOVED_COPIED_SHARED": {
      "MOVE": "{performedBy} moved {onVaultRecord} to the vault for {parameter3}.",
      "COPY": "{performedBy} copied {onVaultRecord} to the vault for {parameter3}.",
      "SHARE": "{performedBy} shared {onVaultRecord} with the vault for {parameter3}."
    },
    "GRANT_APPLICATION_ACCEPTED": {
      "profile": "The request to grant the users in the access profile {onAccessProfile} access to {onClient} was approved by {performedBy}. {reason}",
      "group": "The request to grant the users in {onGroup} access to {onClient} was approved by {performedBy}. {reason}"
    },
    "SERVICE_ACCOUNT_PASSWORD_ROTATED": "The password for the service account {onServiceAccount} on the linked system {onSystem} is rotated.",
    "ACCOUNT_ADDED_TO_ACCESS_PROFILE": {
      "MANUAL": "{performedBy} added {onAccount} to the access profile {onAccessProfile}.",
      "BUSINESS_RULE": "{onAccount} has been added to the access profile {onAccessProfile} via a business rule."
    },
    "ENABLE_TECHNICAL_ADMINISTRATION_DECLINED": "The request to enable technical administration on {onGroup} was rejected by {performedBy}. {reason}",
    "ACCESS_PROFILE_CREATED": "{performedBy} added a new access profile {onAccessProfile}.",
    "VAULT_RECORD_READ": {
      "main": "{performedBy} accessed the secret '{onVaultRecord}' from the vault for {onGroup}.",
      "shared": "{performedBy} accessed the secret '{onVaultRecord}' from the vault for {onGroup} via a shared vault record.",
      "personal": {
        "shared": "{performedBy} accessed the secret '{onVaultRecord}' from the personal vault of {onVaultHolder} via a shared vault record. ",
        "main": "{performedBy} accessed the secret '{onVaultRecord}' from the personal vault of {onVaultHolder}."
      }
    },
    "GRANT_GROUP_ON_SYSTEM_REQUEST_ACCEPTED": {
      "profile": "The request to grant the users in the access profile {onAccessProfile} access to {gosType} {gosName} on {onSystem} was approved and sent on by {performedBy}. {reason}",
      "group": "The request to grant the users in the group {onGroup} access to {gosType} {gosName} on {onSystem} was approved and sent on by {performedBy}. {reason}"
    },
    "ACCOUNT_SSH_PUBLIC_KEY_MODIFIED": "{performedBy} has set a new SSH public key.",
    "GROUP_REMOVED": "{performedBy} removed the group {onGroup}.",
    "VAULT_RECORD_CREATED": {
      "personal": "{performedBy} added {onVaultRecord} to the personal vault of {onVaultHolder}.",
      "main": "{performedBy} added {onVaultRecord} to the vault for {onGroup}."
    },
    "VAULT_ACCESS_RESTORED": {
      "personal": "{performedBy} recovered access for {onParty} to the personal vault.",
      "main": "{performedBy} recovered access for {onParty} to the vault for {onGroup}."
    },
    "SETUP_AUTHORIZING_GROUP_CONNECT_REQUESTED": {
      "DELEGATION": "{performedBy} requested to setup delegation of management of {onGroup} to {onGroup2}. {reason}",
      "AUDITING": "{performedBy} requested to have audits for {onGroup} reviewed by {onGroup2}. {reason}",
      "PROVISIONING": "{performedBy} requested to have activation of {onGroup} authorised by {onGroup2}. {reason}",
      "MEMBERSHIP": "{performedBy} requested to have management of membership of {onGroup} authorised by {onGroup2}. {reason}"
    },
    "CERTIFICATE_REMOVED": "{performedBy} removed the certificate {onCertificate}.",
    "REMOVE_PROVISIONED_SYSTEM_DECLINED": "The request to remove the linked system {onSystem} was declined by {performedBy}. {reason}",
    "WEBHOOK_MODIFIED": "{performedBy} modified the webhook {onWebhook}.",
    "toonDagelijks": "Show daily use",
    "CLIENT_ADDED_TO_ORGANIZATIONAL_UNIT": "{performedBy} has added {onClient} to the organisational unit {onOrganizationalUnit}.",
    "SERVICE_ACCOUNT_GROUP_PROVISIONED": "{gosTypeCap} {gosName} on {onSystem} has been enabled for the service account {onServiceAccount}.",
    "TRANSFER_APPLICATION_OWNERSHIP_DECLINED": "The request to transfer ownership of {onClient} to {onGroup} was rejected by {performedBy}. {reason}",
    "GRANT_APPLICATION_REQUESTED": {
      "profile": "{performedBy} requested to grant the users in the access profile {onAccessProfile} access to {onClient}. {reason}",
      "group": "{performedBy} requested to grant the users in {onGroup} access to {onClient}. {reason}"
    },
    "error": "An error occurred fetching the audit log: {0}",
    "CLIENT_ADDED_TO_GROUP": "{onClient} was added to the group {onGroup}.",
    "GROUP_ON_SYSTEM_PROVISIONED": "{gosTypeCap} {gosName} was created at {onSystem}.",
    "GROUP_ON_SYSTEM_REMOVED": "{performedBy} deleted {gosType} {gosName} for {onSystem}.",
    "ADD_GROUP_ADMIN_ACCEPTED": "{performedBy} approved the request to give {onAccount} management privileges for the group {onGroup}. {reason}",
    "TRANSFER_PROVISIONED_SYSTEM_CONTENT_ADMINISTRATION_ACCEPTED": "The request to transfer content administration of {onSystem} to {onGroup} was approved by {performedBy}. {reason}",
    "ACCOUNT_LOGIN_FAILED": "A login attempt by {performedBy} failed because {parameter1}.",
    "DIRECTORY_CREATED": "{performedBy} added a new directory {onDirectory}.",
    "TRANSFER_APPLICATION_OWNERSHIP_REQUESTED": "{performedBy} requested to transfer ownership of {onClient} to {onGroup}. {reason}",
    "CLIENT_MODIFIED_FOR_GROUP": "The application {onClient} within the group {onGroup} was modified.",
    "WEBHOOK_CREATED": "{performedBy} added a new webhook {onWebhook}.",
    "ACCESS_PROFILE_MODIFIED": "{performedBy} modified the access profile {onAccessProfile}.",
    "LINK_DIRECTORY_TO_ACCESS_PROFILE_REQUESTED": "{performedBy} requested to assign the management of attributes for accounts from {onDirectory} to the access profile {onAccessProfile}. {reason}",
    "ADD_GROUP_TO_ACCESS_PROFILE_DECLINED": "{performedBy} declined the request to add {onGroup} to the access profile {onAccessProfile}. {reason}",
    "REMOVE_ACCESS_PROFILE_DECLINED": "The request to remove the access profile {onAccessProfile} was declined by {performedBy}. {reason}",
    "SERVICE_ACCOUNT_PROVISIONED": "The service account {onServiceAccount} was enabled on the linked system {onSystem}.",
    "CREATE_GROUP_DECLINED": "{performedBy} declined the request by {onAccount} to create the group {parameter3}. {reason}",
    "ACCOUNT_GROUP_DEPROVISIONED": "{onAccount} disabled {gosType} {gosName} from {onSystem} via {onGroup}.",
    "TRANSFER_ORGANIZATIONAL_UNIT_OWNERSHIP_DECLINED": "The request to transfer ownership of {onOrganizationalUnit} to {onGroup} was rejected by {performedBy}. {reason}",
    "TRANSFER_PROVISIONED_SYSTEM_ADMINISTRATION_ACCEPTED": "The request to transfer administration of {onSystem} to {onGroup} was approved by {performedBy}. {reason}",
    "PROVISIONED_SYSTEM_ADDED_TO_ACCESS_PROFILE": "{gosTypeCap} {gosName} on {onSystem} was added to the access profile {onAccessProfile}.",
    "LINK_DIRECTORY_TO_ACCESS_PROFILE_ACCEPTED": "The request to assign the management of attributes for accounts from {onDirectory} to the access profile {onAccessProfile} was approved by {performedBy}. {reason}",
    "CREATE_GROUP_ON_SYSTEM_ACCEPTED": "{performedBy} approved the request by {onAccount} to create {parameter3} on {parameter2}. {reason}",
    "ACCOUNT_DEPROVISIONED": "{onAccount} was deactivated on the linked system {onSystem}.",
    "TRANSFER_PROVISIONED_SYSTEM_OWNERSHIP_ACCEPTED": "The request to transfer ownership of {onSystem} to {onGroup} was approved by {performedBy}. {reason}",
    "GRANT_GROUP_ON_SYSTEM_DECLINED": {
      "profile": "The request to grant the access profile {onAccessProfile} access to {gosType} {gosName} on {onSystem} was declined by {performedBy}. {reason}",
      "group": "The request to grant the group {onGroup} access to {gosType} {gosName} on {onSystem} was declined by {performedBy}. {reason}"
    },
    "TRANSFER_PROVISIONED_SYSTEM_CONTENT_ADMINISTRATION_REQUESTED": "{performedBy} requested to transfer content administration of {onSystem} to {onGroup}. {reason}",
    "CLIENT_REMOVED": "{performedBy} removed the application {onClient}.",
    "SERVICE_ACCOUNT_MODIFIED": "{performedBy} modified the service account {onServiceAccount} on {onSystem}.",
    "ACCESS_PROFILE_REMOVED": "{performedBy} removed the access profile {onAccessProfile}.",
    "GROUP_ON_SYSTEM_MODIFIED": "{performedBy} modified {gosType} {gosName} on {onSystem}.",
    "GRANT_APPLICATION_DECLINED": {
      "group": "The request to grant the users in {onGroup} access to {onClient} was declined by {performedBy}. {reason}",
      "profile": "The request to grant the users in the access profile {onAccessProfile} access to {onClient} was declined by {performedBy}. {reason}"
    },
    "CERTIFICATE_MODIFIED": "{performedBy} modified the certificate {onCertificate}.",
    "SETUP_NESTED_GROUP_DISCONNECT_REQUESTED": "{performedBy} requested to remove the nesting of {onGroup2} within {onGroup}. {reason}",
    "ACCOUNT_MODIFIED_FOR_GROUP": {
      "NORMAL": {
        "main": "{performedBy} has given {onAccount} normal privileges for the group {onGroup}.",
        "endDate": "{performedBy} has given {onAccount} normal privileges for the group {onGroup}. The group membership ends at {parameter2}."
      },
      "MANAGER": {
        "endDate": "{performedBy} has given {onAccount} management privileges for the group {onGroup}. The group membership ends at {parameter2}.",
        "main": "{performedBy} has given {onAccount} management privileges for the group {onGroup}."
      }
    },
    "TRANSFER_APPLICATION_OWNERSHIP_ACCEPTED": "The request to transfer ownership of {onClient} to {onGroup} was approved by {performedBy}. {reason}",
    "ADD_GROUP_TO_ACCESS_PROFILE_ACCEPTED": "{performedBy} approved the request to add {onGroup} to the access profile {onAccessProfile}. {reason}",
    "CREATE_GROUP_ACCEPTED": "{performedBy} approved the request by {onAccount} to create the group {parameter3}. {reason}",
    "RESET_PASSWORD_DECLINED": "The request to recover the password for {onAccount} was declined by {performedBy}. {reason}",
    "PROVISIONED_SYSTEM_MODIFIED_FOR_GROUP": "{gosTypeCap} {gosName} on {onSystem} within the group {onGroup} was modified.",
    "GROUP_ON_SYSTEM_CREATED": "{performedBy} created {gosType} {gosName} on {onSystem}.",
    "ACCOUNT_2FA_DISABLED": "{performedBy} disabled two-factor authentication for {onAccount}.",
    "TRANSFER_PROVISIONED_SYSTEM_OWNERSHIP_DECLINED": "The request to transfer ownership of {onSystem} to {onGroup} was rejected by {performedBy}. {reason}",
    "REMOVE_ACCESS_PROFILE_ACCEPTED": "The request to remove the access profile {onAccessProfile} was approved by {performedBy}. {reason}",
    "SETUP_AUTHORIZING_GROUP_DISCONNECT_REQUESTED": {
      "AUDITING": "{performedBy} requested to stop reviewing of audits for {onGroup} by {onGroup2}. {reason}",
      "DELEGATION": "{performedBy} requested to remove the delegation of management of {onGroup} to {onGroup2}. {reason}",
      "PROVISIONING": "{performedBy} requested to remove the authorisation by {onGroup2} on activation of {onGroup}. {reason}",
      "MEMBERSHIP": "{performedBy} requested to remove the authorisation by {onGroup2} on management of membership of {onGroup}. {reason}"
    },
    "DISABLE_2FA_ACCEPTED": "The request to disable 2FA for {onAccount} was approved by {performedBy}. {reason}",
    "CREATE_SERVICE_ACCOUNT_ACCEPTED": "{performedBy} approved the request by {onAccount} to create the service account {parameter3} on {onSystem}. {reason}",
    "ACCOUNT_TOKEN_SIGNED": "{performedBy} was granted access to the application {onClient}.",
    "EXTENDED_ACCESS_ACCEPTED": "{performedBy} approved the request by {onAccount} to get extended access to {onGroup} until {parameter3}. {reason}",
    "ACCOUNT_MODIFIED_FOR_ACCESS_PROFILE": {
      "MANUAL": "{performedBy} has modified {onAccount}'s membership of the access profile {onAccessProfile}. Membership is now determined by business rules.",
      "BUSINESS_RULE": "{performedBy} has modified {onAccount}'s membership of the access profile {onAccessProfile}. {onAccount} is now a forced member."
    },
    "AUDITOR_EXPORT_GENERATED": "{performedBy} generated an export with hash: {parameter1}.",
    "UPDATE_LICENSE_REQUESTED": "{performedBy} requested to take a new license into use. {reason}",
    "CLIENT_CREATED": "{performedBy} added a new application {onClient}.",
    "RESET_PASSWORD_ACCEPTED": "The request to recover the password for {onAccount} was approved by {performedBy}. {reason}",
    "CREATE_SERVICE_ACCOUNT_DECLINED": "{performedBy} declined the request by {onAccount} to create the service account {parameter3} on {onSystem}. {reason}",
    "VERIFY_INTERNAL_ACCOUNT_DECLINED": "{performedBy} declined the creation of the internal account {onAccount}, the account has been removed. {reason}",
    "GROUP_CLASSIFICATION_ASSIGNED": {
      "unset": "{performedBy} removed the classification from {onGroup}.",
      "set": "{performedBy} classified {onGroup} as {onGroupClassification}."
    },
    "ACCOUNT_CREATED": "{performedBy} registered an account for {onDirectory}.",
    "PROVISIONED_SYSTEM_MODIFIED": "{performedBy} modified a linked system {onSystem}.",
    "CLIENT_ADDED_TO_ACCESS_PROFILE": "{onClient} was added to the access profile {onAccessProfile}.",
    "DISABLE_2FA_DECLINED": "The request to disable 2FA for {onAccount} was declined by {performedBy}. {reason}",
    "ACCOUNT_PROVISIONING_MOVED": "{onAccount} was moved within the linked system {onSystem} from {parameter1} to {parameter2}.",
    "EXTENDED_ACCESS_DECLINED": "{performedBy} declined the request by {onAccount} to get extended access to {onGroup} until {parameter3}. {reason}",
    "toonEigenRecords": "Only show my records",
    "EXTENDED_ACCESS_REQUESTED": "{performedBy} requested extended access to the group {onGroup} until {parameter3}. {reason}",
    "ACCOUNT_REREGISTERED": "{performedBy}'s account has been re-registered. The old username was {parameter1}.",
    "PROVISIONED_SYSTEM_REMOVED_FROM_ACCESS_PROFILE": "{gosTypeCap} {gosName} on {onSystem} was removed from the access profile {onAccessProfile}.",
    "reason": "{0} gave '{1}' as reason.",
    "REVIEW_AUDIT_REQUESTED": "{performedBy} requested a review of an audit of {onGroup2}. {reason}",
    "VAULT_EXPORTED": {
      "main": "{performedBy} exported the contents of the vault of {onGroup}.",
      "personal": "{performedBy} exported the contents of the personal vault."
    },
    "TRANSFER_SERVICE_ACCOUNT_ADMINISTRATION_ACCEPTED": "The request to transfer administration of {onServiceAccount} on {onSystem} to {onGroup} was approved by {performedBy}. {reason}",
    "DIRECTORY_MODIFIED": "{performedBy} modified the directory {onDirectory}.",
    "GRANT_SERVICE_ACCOUNT_GROUP_DECLINED": "The request to grant the service account {onServiceAccount} access to {gosType} {gosName} on {onSystem} was declined by {performedBy}. {reason}",
    "ACCOUNT_PROVISIONING_INITED": "{onAccount} was added to the linked system {onSystem}.",
    "CREATE_GROUP_ON_SYSTEM_REQUESTED": "{performedBy} requested to create {parameter3} on {parameter2}. {reason}",
    "GROUP_AUDIT_REQUESTED": "{performedBy} has requested an audit of the group {onGroup}.",
    "REVOKE_ADMIN_DECLINED": "{performedBy} declined the request to remove {onAccount} from KeyHub Administrators. {reason}",
    "ACCOUNT_PASSWORD_CHANGED": "{performedBy} changed his/her password.",
    "SETUP_NESTED_GROUP_CONNECT_ACCEPTED": "{performedBy} approved the request to have {onGroup} nested within {onGroup2}. {reason}",
    "CLIENT_PERMISSION_GRANTED": "The permission '{parameter3}' is granted to {onClient}.",
    "VAULT_PERSONAL_RESET": "{performedBy} reset his/her personal vault.",
    "GROUP_CREATED": "{performedBy} added a new group {onGroup}.",
    "resumeSearch": "Search further back",
    "ACCOUNT_GROUP_PROVISIONED": "{onAccount} enabled {gosType} {gosName} on {onSystem} via {onGroup}.",
    "REVOKE_ADMIN_ACCEPTED": "{performedBy} approved the request to remove {onAccount} from KeyHub Administrators. {reason}",
    "ACCOUNT_PROVISIONING_DESTROYED": "{onAccount} was removed from the linked system {onSystem}.",
    "CREATE_PROVISIONED_NAMESPACE_DECLINED": "{performedBy} declined the request by {onAccount} to create the namespace {parameter3}, based on {onSystem}. {reason}",
    "TRANSFER_PROVISIONED_SYSTEM_CONTENT_ADMINISTRATION_DECLINED": "The request to transfer content administration of {onSystem} to {onGroup} was rejected by {performedBy}. {reason}",
    "TRANSFER_SERVICE_ACCOUNT_ADMINISTRATION_REQUESTED": "{performedBy} requested to transfer administration of {onServiceAccount} on {onSystem} to {onGroup}. {reason}",
    "GROUP_AUDIT_CREATED": "{performedBy} has audited the group {onGroup}.",
    "ENABLE_TECHNICAL_ADMINISTRATION_REQUESTED": "{performedBy} has requested to enable technical administration on {onGroup}. {reason}",
    "TRANSFER_APPLICATION_ADMINISTRATION_DECLINED": "The request to transfer administration of {onClient} to {onGroup} was rejected by {performedBy}. {reason}",
    "SERVICE_ACCOUNT_ADDED_TO_GROUP": "{performedBy} has added the service account {onServiceAccount} to {gosType} {gosName} on {onSystem}.",
    "CREATE_SERVICE_ACCOUNT_REQUESTED": "{performedBy} requested to create a service account {parameter3} on {onSystem}. {reason}",
    "WEBHOOK_REMOVED": "{performedBy} removed the webhook {onWebhook}.",
    "TRANSFER_PROVISIONED_SYSTEM_ADMINISTRATION_REQUESTED": "{performedBy} requested to transfer administration of {onSystem} to {onGroup}. {reason}",
    "ORGANIZATIONAL_UNIT_MODIFIED": "{performedBy} modified the organisational unit {onOrganizationalUnit}.",
    "GRANT_GROUP_ON_SYSTEM_REQUEST_DECLINED": {
      "profile": "The request to grant the access profile {onAccessProfile} access to {gosType} {gosName} on {onSystem} was declined by {performedBy}. {reason}",
      "group": "The request to grant the group {onGroup} access to {gosType} {gosName} on {onSystem} was declined by {performedBy}. {reason}"
    },
    "GROUP_MOVED": "{performedBy} moved the group {onGroup} to {onOrganizationalUnit}.",
    "ACCOUNT_ACCESS_PROFILE_PROVISIONED": "{gosType} {gosName} on {onSystem} from {onAccessProfile} is enabled for {onAccount}.",
    "CLIENT_SECRET_ROTATED": "{performedBy} rotated the client secret for {onClient}.",
    "TRANSFER_SERVICE_ACCOUNT_ADMINISTRATION_DECLINED": "The request to transfer administration of {onServiceAccount} on {onSystem} to {onGroup} was rejected by {performedBy}. {reason}",
    "CLIENT_REMOVED_FROM_ORGANIZATIONAL_UNIT": "{performedBy} has removed {onClient} from the organisational unit {onOrganizationalUnit}.",
    "REMOVE_PROVISIONED_SYSTEM_ACCEPTED": "The request to remove the linked system {onSystem} was approved by {performedBy}. {reason}",
    "ACCOUNT_REMOVED_FROM_ORGANIZATIONAL_UNIT": "{performedBy} has removed {onAccount} from the organisational unit {onOrganizationalUnit}.",
    "TRANSFER_APPLICATION_ADMINISTRATION_ACCEPTED": "The request to transfer administration of {onClient} to {onGroup} was approved by {performedBy}. {reason}",
    "TRANSFER_PROVISIONED_SYSTEM_OWNERSHIP_REQUESTED": "{performedBy} requested to transfer ownership of {onSystem} to {onGroup}. {reason}",
    "REMOVE_ORGANIZATIONAL_UNIT_ACCEPTED": "The request to remove the organisational unit {onOrganizationalUnit} was approved by {performedBy}. {reason}",
    "CREATE_GROUP_ON_SYSTEM_DECLINED": "{performedBy} declined the request by {onAccount} to create {parameter3} on {parameter2}. {reason}",
    "REMOVE_PROVISIONED_SYSTEM_REQUESTED": "{performedBy} requested to remove the linked system {onSystem}. {reason}",
    "ADD_GROUP_ADMIN_REQUESTED": "{performedBy} requested to give {onAccount} management privileges for the group {onGroup}. {reason}",
    "LINK_DIRECTORY_TO_ACCESS_PROFILE_DECLINED": "The request to assign the management of attributes for accounts from {onDirectory} to the access profile {onAccessProfile} was rejected by {performedBy}. {reason}",
    "CREATE_PROVISIONED_NAMESPACE_ACCEPTED": "{performedBy} approved the request by {onAccount} to create the namespace {parameter3}, based on {onSystem}. {reason}",
    "GRANT_CLIENT_PERMISSION_REQUESTED": "{performedBy} requested to grant {onClient} the permission '{parameter3}'. {reason}",
    "CERTIFICATE_CREATED": "{performedBy} added a new certificate {onCertificate}.",
    "ENABLE_PROFILE_ADMINISTRATION_DECLINED": "The request to enable access profile administration on {onGroup} was rejected by {performedBy}. {reason}",
    "SETUP_NESTED_GROUP_CONNECT_DECLINED": "{performedBy} declined the request to have {onGroup} nested within {onGroup2}. {reason}",
    "ACCOUNT_2FA_ENABLED": "{performedBy} enabled two-factor authentication.",
    "GROUP_CLASSIFICATION_CREATED": "{performedBy} added a new group classification {onGroupClassification}.",
    "GROUP_MODIFIED": "{performedBy} modified the group {onGroup}.",
    "ADD_GROUP_ADMIN_DECLINED": "{performedBy} declined the request to give {onAccount} management privileges for the group {onGroup}. {reason}",
    "RESET_PASSWORD_FINISHED": "{performedBy} finished the password recovery.",
    "VAULT_PERSONAL_SETUP": "{performedBy} setup access to his/her vaults.",
    "resultsEnd": "Results until {0}",
    "REMOVE_ORGANIZATIONAL_UNIT_DECLINED": "The request to remove the organisational unit {onOrganizationalUnit} was declined by {performedBy}. {reason}",
    "TRANSFER_ACCESS_PROFILE_OWNERSHIP_REQUESTED": "{performedBy} requested to transfer ownership of {onAccessProfile} to {onGroup}. {reason}",
    "ENABLE_PROFILE_ADMINISTRATION_ACCEPTED": "The request to enable access profile administration on {onGroup} was approved by {performedBy}. {reason}",
    "SERVICE_ACCOUNT_PROVISIONING_DESTROYED": "The service account {onServiceAccount} was removed from the linked system {onSystem}.",
    "ACCOUNT_REMOVED_FROM_ACCESS_PROFILE": {
      "BUSINESS_RULE": "{onAccount} has been removed from the access profile {onAccessProfile}.",
      "MANUAL": "{performedBy} has removed {onAccount} from the access profile {onAccessProfile}."
    },
    "GRANT_CLIENT_PERMISSION_ACCEPTED": "The request to grant {onClient} the permission '{parameter3}' was approved by {performedBy}. {reason}",
    "IDENTITY_SOURCE_CREATED": "{performedBy} added a new identity source {onIdentitySource}.",
    "CLIENT_MODIFIED": "{performedBy} modified the application {onClient}.",
    "GROUP_ON_SYSTEM_DEPROVISIONED": "{gosTypeCap} {gosName} has been removed from the system {onSystem}.",
    "TRANSFER_GROUP_ON_SYSTEM_OWNERSHIP_DECLINED": "The request to transfer ownership of {gosType} {gosName} on {onSystem} to {onGroup} was rejected by {performedBy}. {reason}",
    "GROUP_NESTING_CONNECTED": "{performedBy} nested the group {onGroup} within {onGroup2}.",
    "DIRECTORY_HELPDESK_MODIFIED": {
      "unset": "{performedBy} has withdrawn the help desk function for {onGroup} for the directory {onDirectory}.",
      "set": "{performedBy} has set {onGroup} as help desk for the directory {onDirectory}."
    },
    "GRANT_ACCESS_DECLINED": "{performedBy} declined the request by {onAccount} to get access to {onGroup2}. {reason}",
    "REVIEW_AUDIT_ACCEPTED": "{performedBy} approved an audit of {onGroup2}. {reason}",
    "REMOVE_GROUP_REQUESTED": "{performedBy} requested to remove the group {onGroup}. {reason}",
    "TRANSFER_APPLICATION_ADMINISTRATION_REQUESTED": "{performedBy} requested to transfer administration of {onClient} to {onGroup}. {reason}",
    "REVOKE_ADMIN_REQUESTED": "{performedBy} requested to remove {onAccount} from KeyHub Administrators. {reason}",
    "SETUP_NESTED_GROUP_CONNECT_REQUESTED": "{performedBy} requested to have {onGroup} nested within {onGroup2}. {reason}",
    "SERVICE_ACCOUNT_REMOVED_FROM_GROUP": "{performedBy} has removed the service account {onServiceAccount} from {gosType} {gosName} on {onSystem}.",
    "VAULT_RECOVERED": {
      "personal": "{performedBy} recovered the contents of the personal vault of {onAccount}.",
      "main": "{performedBy} recovered the contents of the vault of {parameter1} into the vault of {onGroup}."
    },
    "PROVISIONED_SYSTEM_REMOVED": "{performedBy} removed the linked system {onSystem}.",
    "GROUP_ADDED_TO_ACCESS_PROFILE": "{onGroup} was added to the access profile {onAccessProfile}.",
    "DISABLE_2FA_REQUESTED": "{performedBy} requested to disable 2FA. {reason}",
    "RESET_PASSWORD_REQUESTED": "{performedBy} requested to recover his/her password. {reason}",
    "REMOVE_GROUP_DECLINED": "The request to remove the group {onGroup} was declined by {performedBy}. {reason}",
    "TRANSFER_ACCESS_PROFILE_OWNERSHIP_DECLINED": "The request to transfer ownership of {onAccessProfile} to {onGroup} was rejected by {performedBy}. {reason}",
    "ACCOUNT_PROVISIONED": "{onAccount} was enabled on the linked system {onSystem}.",
    "CLIENT_REMOVED_FROM_GROUP": "The application {onClient} was removed from the group {onGroup}.",
    "GRANT_SERVICE_ACCOUNT_GROUP_ACCEPTED": "The request to grant the service account {onServiceAccount} access to {gosType} {gosName} on {onSystem} was approved by {performedBy}. {reason}",
    "GROUP_CLASSIFICATION_REMOVED": "{performedBy} removed the group classification {onGroupClassification}.",
    "GROUP_REMOVED_FROM_ACCESS_PROFILE": "{onGroup} was removed from the access profile {onAccessProfile}.",
    "ACCOUNT_GROUP_ACTIVATION_REASON": "{performedBy} activated {onGroup} with the following reason: {parameter1}.",
    "ACCOUNT_ACTIVATION_CODE_USED": "{performedBy} used the activation code {parameter1} for a password recovery.",
    "IDENTITY_SOURCE_MODIFIED": "{performedBy} modified the identity source {onIdentitySource}.",
    "ACCOUNT_TOTP_OFFSET_CHANGED": "The verification code time offset for {performedBy} was changed to {parameter1}.",
    "PROVISIONED_SYSTEM_CREATED": "{performedBy} added a new linked system {onSystem}.",
    "JOIN_GROUP_REQUESTED": {
      "profile": "A request was created from the access profile {onAccessProfile} to add {onAccount} to the group {onGroup}. {reason}",
      "group": "{onAccount} requested to be added to the group {onGroup}. {reason}"
    },
    "REVIEW_AUDIT_DECLINED": "{performedBy} declined an audit of {onGroup2}. {reason}",
    "GROUP_NESTING_DISCONNECTED": "{performedBy} unlinked the nesting of group {onGroup} within {onGroup2}.",
    "GRANT_CLIENT_PERMISSION_DECLINED": "The request to grant {onClient} the permission '{parameter3}' was declined by {performedBy}. {reason}",
    "JOIN_VAULT_ACCEPTED": "{performedBy} approved the request by {onAccount} to be added to the vault for {onGroup}. {reason}",
    "ORGANIZATIONAL_UNIT_CREATED": "{performedBy} added a new organisational unit {onOrganizationalUnit}.",
    "noreason": "{0} did not give a reason.",
    "INTERNAL_ACCOUNT_CREATED": "{performedBy} added a new internal account {onAccount}.",
    "TRANSFER_ACCESS_PROFILE_OWNERSHIP_ACCEPTED": "The request to transfer ownership of {onAccessProfile} to {onGroup} was approved by {performedBy}. {reason}",
    "UPDATE_GROUP_MEMBERSHIP_ACCEPTED": "{performedBy} approved the request to give {onAccount} the following access to {onGroup2}: {parameter3} {reason}",
    "CLIENT_REMOVED_FROM_ACCESS_PROFILE": "The application {onClient} was removed from the access profile {onAccessProfile}.",
    "ADD_GROUP_TO_ACCESS_PROFILE_REQUESTED": "{performedBy} requested to add {onGroup} to the access profile {onAccessProfile}. {reason}",
    "REMOVE_ORGANIZATIONAL_UNIT_REQUESTED": "{performedBy} requested to remove the organisational unit {onOrganizationalUnit}. {reason}",
    "SERVICE_ACCOUNT_CREATED": "{performedBy} added a new service account {onServiceAccount} on {onSystem}.",
    "ACCOUNT_ACCESS_PROFILE_DEPROVISIONED": "{gosType} {gosName} on {onSystem} from {onAccessProfile} is disabled for {onAccount}.",
    "REMOVE_ACCESS_PROFILE_REQUESTED": "{performedBy} requested to remove the access profile {onAccessProfile}. {reason}",
    "ACCOUNT_ENABLED": "The account for {onAccount} was enabled {parameter1}.",
    "REMOVE_GROUP_ACCEPTED": "The request to remove the group {onGroup} was approved by {performedBy}. {reason}",
    "MOVE_GROUPS_REQUESTED": "{performedBy} requested to move {parameter2} groups to {onOrganizationalUnit}. {reason}",
    "INTERNAL_ACCOUNT_REMOVED": "{performedBy} removed the internal account {onAccount}.",
    "SERVICE_ACCOUNT_REMOVED": "{performedBy} removed the service account {onServiceAccount} from {onSystem}.",
    "CLIENT_PERMISSION_REVOKED": "The permission '{parameter3}' for {onClient} has been revoked.",
    "SERVICE_ACCOUNT_GROUP_DEPROVISIONED": "{gosTypeCap} {gosName} on {onSystem} has been disabled for the service account {onServiceAccount}.",
    "MOVE_GROUPS_DECLINED": "{performedBy} declined the request by {onAccount} to move {parameter2} groups to {onOrganizationalUnit}. {reason}"
  },
  "table": {
    "head": {
      "functionalFeatures": "Functional",
      "value": "Value",
      "type": "Type",
      "modifications": "# Modifications",
      "organizationalunits": "Organisational units",
      "filedate": "File date",
      "subjectdn": "Subject DN",
      "groups": "Groups",
      "directory": "Directory",
      "group": "Group",
      "username": "Username",
      "used": "Used",
      "status": "Status",
      "createdat": "Created at",
      "licenserole": "License role",
      "passwordRotation": "Password rotation",
      "nameInSystem": "Group on system",
      "lastActive": "Last sign in",
      "system": "Linked system",
      "provisioningEnabled": "Provisioning enabled",
      "mountpoint": "Mount point",
      "encrypted": "Encrypted",
      "records": "Number of records",
      "clientId": "Client ID",
      "available": "Available",
      "errorswarns": "# Errors/warnings",
      "email": "E-mail",
      "minionid": "Identifier",
      "accessProfileInKeyHub": "Access profiles",
      "technicalAdministrator": "Technical administration",
      "size": "Size",
      "2fa": "2FA",
      "company": "Company",
      "rights": "Privileges",
      "removedat": "Removed at",
      "nrAccounts": "# Accounts",
      "active": "Enabled",
      "expiresat": "Expires at",
      "application": "Application",
      "middleName": "Middle name",
      "givenName": "Given name",
      "familyName": "Family name",
      "infrastructureFeatures": "Infrastructure",
      "deletedvault": "Deleted vault",
      "reden": "Reason",
      "groupLastUsed": "Group last used",
      "url": "URL",
      "ip": "IP address",
      "validity": "Validity",
      "systems": "Linked system",
      "groupInKeyHub": "Groups in KeyHub",
      "name": "Name",
      "displayName": "Display name",
      "version": "Version",
      "description": "Description"
    }
  },
  "marker": {
    "GROUP_UNREADABLE_VAULT": "None of the group members can access the vault",
    "GROUP_CRITERIA_UNSATISFIED_AUTHORIZING_GROUP_DELEGATION": "This group does not have a group with delegated privileges configured. This is required for its classification.",
    "GROUP_CRITERIA_UNSATISFIED_AUTHORIZING_GROUP_PROVISIONING": "This group does not have an authorisation group for activation configured. This is required for its classification.",
    "GROUP_CRITERIA_UNSATISFIED_AUDIT_INTERVAL": {
      "12": "This group does not meet the audit interval of its classification: once a year.",
      "1": "This group does not meet the audit interval of its classification: every month.",
      "n": "This group does not meet the audit interval of its classification: every {interval} months."
    },
    "GROUP_CRITERIA_UNSATISFIED_VAULT_REQUIRES_ACTIVATION": "This group does not have the option \"Activation required for vault access\" enabled. This is required for its classification.",
    "GROUP_ONE_MANAGER": "This group only has one manager",
    "GROUP_CRITERIA_UNSATISFIED_AUTHORIZING_GROUP_MEMBERSHIP": "This group does not have an authorisation group for membership configured. This is required for its classification.",
    "GROUP_CRITERIA_UNSATISFIED_MINIMUM_NR_MANAGERS": "This group does not have at least {minimumNrManagers} managers. This is required for its classification.",
    "GROUP_CRITERIA_UNSATISFIED_AUDIT_MONTHS": "This group does not have the months required for its classification selected for audits.",
    "TLS_DISABLED": "TLS is disabled",
    "TLS_UNVERIFIED": "The TLS certificates will not be verified",
    "GROUP_CRITERIA_UNSATISFIED_AUTHORIZING_GROUP_AUDITING": "This group does not have an authorisation group for audits configured. This is required for its classification.",
    "GROUP_CRITERIA_UNSATISFIED_RECORD_TRAIL": "This group does not have the option \"Record audit trail\" enabled. This is required for its classification.",
    "GROUP_UNRECOVERABLE_VAULT": "This group's vault cannot be recovered",
    "GROUP_NO_MANAGER": "This group has no managers",
    "GROUP_CRITERIA_UNSATISFIED_ROTATING_PASSWORD_REQUIRED": "This group does not have the option \"Rotating password required\" enabled. This is required for its classification.",
    "WEAK_PASSWORD_HASHING": "Uses a weak password hashing scheme"
  },
  "application": {
    "saml": {
      "error": "Invalid SAML metadata: {error}",
      "clientidmismatch": "The client identifier of the application does not match the entityID in the SAML metadata.",
      "nospssodescriptor": "The SAML metadata does not contain an SPSSODescriptor for the SAML 2 protocol.",
      "metadataboth": "You cannot enter both a metadata URL and manual metadata.",
      "metadatarequired": "Metadata URL or manual metadata is required."
    },
    "header": {
      "ldap": "LDAP application",
      "saml2": "SAML v2.0 application",
      "activationrequired": "Activation required",
      "groups": "Groups",
      "accessprofile": "Access profile",
      "accessprofiles": "Access profiles",
      "oauth2": "OAuth2/OIDC application"
    },
    "secret": {
      "invalid": "The given secret is invalid",
      "info": "{name} has a vault with passwords. The secret of the client is required to prevent loss of these records.",
      "wipe": "When saving, the secret of the application will be lost. Do you still want to save?",
      "hidden": "(hidden)",
      "regenerate": "Will be regenerated on save",
      "required": "Secret for {name} required"
    },
    "clientpermission": {
      "subtitle": "Details for the permission for the application {0}.",
      "header": "Granted permission"
    },
    "versions": {
      "number": "Version number",
      "usedat": "Last used at",
      "header": "Used API versions"
    },
    "clientpermissions": {
      "subtitle": "Details for the permissions for the application {0}.",
      "header": "Granted permissions"
    },
    "attribute": {
      "script": "Script",
      "definition": "Choose an attribute definition...",
      "usescript": "Run the script below...",
      "add": "Add attribute",
      "name": "Attribute name"
    },
    "oauth2": {
      "sso": "Code and implicit grants - Account authentication (SSO)",
      "client": "Client credentials grant - Client authentication (server-to-server)"
    },
    "organizationalunits": {
      "header": "Organisational units"
    }
  },
  "webhook": {
    "category": {
      "requests": {
        "TRANSFER_PROVISIONED_SYSTEM_CONTENT_ADMINISTRATION": "Transfer content administration of linked system",
        "ADD_GROUP_TO_ACCESS_PROFILE": "Add group to access profile",
        "TRANSFER_APPLICATION_ADMINISTRATION": "Transfer administration of application",
        "TRANSFER_ORGANIZATIONAL_UNIT_OWNERSHIP": "Transfer ownership of organisational unit",
        "JOIN_GROUP": "Join group",
        "GRANT_GROUP_ON_SYSTEM": "Give access to a group on a linked system",
        "ADD_GROUP_ADMIN": "Make group manager",
        "REVOKE_ADMIN": "Remove admin",
        "GRANT_GROUP_ON_SYSTEM_REQUEST": "Request for access to a group on a linked system",
        "declined": "Declined",
        "requested": "Requested",
        "ENABLE_PROFILE_ADMINISTRATION": "Enable access profile administration on a group",
        "TRANSFER_PROVISIONED_SYSTEM_ADMINISTRATION": "Transfer administration of linked system",
        "SETUP_NESTED_GROUP": {
          "connect": "Unlink nested group",
          "disconnect": "Remove authorisation"
        },
        "MOVE_GROUPS": "Move groups",
        "GRANT_APPLICATION": "Grant access to application",
        "REMOVE_GROUP": "Remove group",
        "main": "Requests",
        "CREATE_GROUP": "Create new group",
        "GRANT_ACCESS": "Request access to a group",
        "VERIFY_INTERNAL_ACCOUNT": "Approve internal account",
        "CREATE_GROUP_ON_SYSTEM": "Create new group on system",
        "TRANSFER_APPLICATION_OWNERSHIP": "Transfer ownership of application",
        "CREATE_SERVICE_ACCOUNT": "Create new service account",
        "EXTEND_ACCESS": "Extend access to a group",
        "TRANSFER_GROUP_ON_SYSTEM_OWNERSHIP": "Transfer ownership of group on system",
        "GRANT_SERVICE_ACCOUNT_GROUP": "Grant service account access to group on linked system",
        "REVIEW_AUDIT": "Review an audit",
        "TRANSFER_PROVISIONED_SYSTEM_OWNERSHIP": "Transfer ownership of linked system",
        "REMOVE_ACCESS_PROFILE": "Remove access profile",
        "DISABLE_2FA": "Disable 2FA",
        "accepted": "Approved",
        "UPDATE_GROUP_MEMBERSHIP": "Update a group membership",
        "CREATE_PROVISIONED_NAMESPACE": "Create new namespace",
        "UPDATE_LICENSE": "Update the license",
        "REMOVE_PROVISIONED_SYSTEM": "Remove linked system",
        "ENABLE_TECHNICAL_ADMINISTRATION": "Enable technical administration on a group",
        "TRANSFER_SERVICE_ACCOUNT_ADMINISTRATION": "Transfer administration of service account",
        "LINK_DIRECTORY_TO_ACCESS_PROFILE": "Link directory to access profile",
        "REMOVE_ORGANIZATIONAL_UNIT": "Remove organisational unit",
        "SETUP_AUTHORIZING_GROUP": {
          "disconnect": "Remove authorisation",
          "connect": "Setup authorisation"
        },
        "TRANSFER_ACCESS_PROFILE_OWNERSHIP": "Transfer ownership of access profile",
        "JOIN_VAULT": "Join vault",
        "GRANT_CLIENT_PERMISSION": "Grant permission to application",
        "RESET_PASSWORD": "Recover password"
      },
      "authorization": "Authorisation",
      "crud": {
        "directory": "Directory",
        "read": "Read",
        "clientgroup": "Application in group",
        "acccessprofile": "Access profile",
        "delete": "Deleted",
        "webhook": "Webhook",
        "groupclassification": "Group classification",
        "serviceaccount": "Service account",
        "main": "Standard operations",
        "provgroup": "Linked system in group",
        "create": "Created",
        "accessprofileclient": "SSO application within access profile",
        "internalaccount": "Internal account",
        "client": "Application",
        "accessprofileprov": "Group on system within access profile",
        "vaultrecord": "Vault record",
        "systemgroup": "Group on system",
        "update": "Modified",
        "accessprofilegroup": "Group within access profile",
        "identitysource": "Identity source",
        "group": "Group",
        "certificate": "Certificate",
        "organizationalunit": "Organisational unit",
        "system": "Linked system"
      },
      "profile": "Profile",
      "provisioning": "Provisioning",
      "system": "System configuration",
      "authentication": "Authentication"
    },
    "type": {
      "ACCOUNT_PASSWORD_CHANGED": "Password changed",
      "ACCOUNT_REMOVED_FROM_ORGANIZATIONAL_UNIT": "Removed account from an organizational unit",
      "GROUP_CLASSIFICATION_ASSIGNED": "Group classification assigned",
      "ACCOUNT_GROUP_ACTIVATED": "Group activated",
      "ACCOUNT_PROVISIONED": "Account enabled on linked system",
      "ACCOUNT_PROVISIONING_INITED": "Added account to linked system",
      "ACCOUNT_DEPROVISIONED": "Account disabled on linked system",
      "ACCOUNT_REMOVED_FROM_ACCESS_PROFILE": "Removed account from an access profile",
      "DIRECTORY_HELPDESK_MODIFIED": "Help desk modified",
      "ACCOUNT_LOGIN": "Successful authentication",
      "SERVICE_ACCOUNT_GROUP_DEPROVISIONED": "Group for service account disabled on linked system",
      "ACCOUNT_MODIFIED_FOR_GROUP": "Account within group modified",
      "ACCOUNT_LOGIN_FAILED": "Failed authentication",
      "ACCOUNT_TOTP_OFFSET_CHANGED": "Account TOTP offset changed",
      "ACCOUNT_REMOVED": "Account removed",
      "ACCOUNT_SSH_PUBLIC_KEY_MODIFIED": "Account - SSH public key set",
      "VAULT_EXPORTED": "The contents of a vault have been exported",
      "CLIENT_ADDED_TO_ORGANIZATIONAL_UNIT": "Application - Added to an organisational unit",
      "SERVICE_ACCOUNT_PROVISIONING_INITED": "Added service account to linked system",
      "ACCOUNT_ADDED_TO_GROUP": "Added account to a group",
      "ACCOUNT_2FA_DISABLED": "2FA disabled",
      "ACCOUNT_PROVISIONING_DESTROYED": "Removed account from linked system",
      "GROUP_AUTHORIZATION_CONNECTED": "Extra authorisation setup for a group",
      "ACCOUNT_GROUP_PROVISIONED": "Group for account enabled on linked system",
      "GROUP_AUDIT_CREATED": "An audit has been performed on a group",
      "SERVICE_ACCOUNT_PASSWORD_ROTATED": "Service account password rotated",
      "INVALID_SIGNATURE_DETECTED": "Invalid signature detected",
      "ACCOUNT_ACCESS_PROFILE_PROVISIONED": "Access profile for account enabled on linked system",
      "ACCOUNT_PROVISIONING_SETUP": "Account setup on linked system",
      "RESET_PASSWORD_FINISHED": "Password recovery finished",
      "ACCOUNT_REMOVED_FROM_GROUP": "Removed account from a group",
      "CLIENT_SECRET_ROTATED": "Client secret rotated",
      "ACCOUNT_ADDED_TO_ACCESS_PROFILE": "Added account to an access profile",
      "ACCOUNT_DISABLED": "Account disabled",
      "VAULT_PERSONAL_SETUP": "Vault setup",
      "PROVISIONED_SYSTEM_UNKNOWN_ACCOUNT_DESTROYED": "Unknown account removed from linked system",
      "ACCOUNT_PROVISIONING_MOVED": "Account moved within linked system",
      "AUDITOR_EXPORT_GENERATED": "Auditor export generated",
      "GROUP_MOVED": "Group moved",
      "VAULT_PERSONAL_RESET": "Personal vault reset",
      "SERVICE_ACCOUNT_REMOVED_FROM_GROUP": "Service account removed from a group",
      "ACCOUNT_REREGISTERED": "Account re-registered",
      "ACCOUNT_GROUP_ACTIVATION_REASON": "Group activation reason",
      "CLIENT_PERMISSION_REVOKED": "Permission revoked from application",
      "ACCOUNT_TOKEN_SIGNED": "Token issued for an application",
      "VAULT_RECOVERED": "The contents of a vault are recovered",
      "SETTING_MODIFIED": "Setting modified",
      "ACCOUNT_ENABLED": "Account enabled",
      "ACCOUNT_CREATED": "Account created",
      "ACCOUNT_ADDED_TO_ORGANIZATIONAL_UNIT": "Added account to an organizational unit",
      "SERVICE_ACCOUNT_PROVISIONING_DESTROYED": "Removed service account from linked system",
      "LICENSE_KEY_UPLOADED": "License key uploaded",
      "CLIENT_PERMISSION_GRANTED": "Permission granted to application",
      "GROUP_ON_SYSTEM_PROVISIONED": "Group created on linked system",
      "GROUP_AUDIT_REQUESTED": "An audit has been requested for a group",
      "SERVICE_ACCOUNT_ADDED_TO_GROUP": "Service account added to a group",
      "ACCOUNT_GROUP_DEPROVISIONED": "Group for account disabled on linked system",
      "SERVICE_ACCOUNT_PROVISIONED": "Service account enabled on linked system",
      "GROUP_ON_SYSTEM_DEPROVISIONED": "Group removed from linked system",
      "ACCOUNT_2FA_ENABLED": "2FA enabled",
      "VAULT_RECORD_MOVED_COPIED_SHARED": "Vault record moved/copied/shared",
      "CLIENT_REMOVED_FROM_ORGANIZATIONAL_UNIT": "Application - Removed from an organisational unit",
      "SERVICE_ACCOUNT_DEPROVISIONED": "Service account disabled on linked system",
      "ACCOUNT_VAULT_UNLOCKED": "Vault unlocked",
      "ACCOUNT_MODIFIED_FOR_ACCESS_PROFILE": "Account within access profile modified",
      "ACCOUNT_ACTIVATION_CODE_USED": "Activation code used",
      "GROUP_AUTHORIZATION_DISCONNECTED": "Extra authorisation removed for a group",
      "SERVICE_ACCOUNT_GROUP_PROVISIONED": "Group for service account enabled on linked system",
      "INTERNAL_ACCOUNT_ACTIVATED": "Internal account activated",
      "GROUP_NESTING_CONNECTED": "Nested group linked",
      "GROUP_NESTING_DISCONNECTED": "Nested group unlinked",
      "VAULT_ACCESS_RESTORED": "Access to a vault restored for an account",
      "ACCOUNT_ACCESS_PROFILE_DEPROVISIONED": "Access profile for account disabled on linked system"
    },
    "delivery": {
      "redelivered": "The payload will be redelivered",
      "header": "Deliveries",
      "redeliver": "Redeliver",
      "duration": "Completed in {0} ms",
      "responseheaders": "Response headers",
      "responsebody": "Response body",
      "request": "Request",
      "payload": "Payload"
    },
    "selected": {
      "none": "None",
      "all": "All {0}",
      "header": "Select the events that should trigger this webhook",
      "main": "{0} of {1}"
    },
    "tls": {
      "verbosepayloads": "Webhooks with verbose payloads can only be used over a secure connection.",
      "mismatch": "Choose 'No' for http or one of the other options for https."
    },
    "select": {
      "choose": "Choose specific events",
      "all": "All events"
    },
    "header": "Webhook - {0}",
    "listheader": "Webhooks"
  },
  "prompt": {
    "head": {
      "delete": {
        "warn": {
          "ldapapplication": "When <strong>{0}<\/strong> is removed, its credentials for the LDAP will become invalid.",
          "identitysource": {
            "afas": "When <strong>{0}<\/strong> is removed, no more users will be synced."
          },
          "account": {
            "internal": "When <strong>{0}<\/strong> is removed, all configuration for linked systems, including passwords, group memberships and keys is also removed.",
            "main": "When <strong>{0}<\/strong> is removed, all configuration for linked systems, including passwords, group memberships and keys is also removed."
          },
          "serviceaccount": "Remove the service account <strong>{0}<\/strong>.",
          "organizationalunit": "When <strong>{0}<\/strong> is removed, all connected items will be moved to the parent organisational unit.",
          "oauth2application": "When <strong>{0}<\/strong> is removed, all connections with groups are also removed.",
          "sequence": "Remove the number sequence <strong>{0}<\/strong>.",
          "group": "When <strong>{0}<\/strong> is removed, all data related to this group will also be removed.",
          "tile": "Remove the tile <strong>{0}<\/strong>.",
          "directory": "When <strong>{0}<\/strong> is removed, users can no longer register for this directory.",
          "groupinsystem": "When <strong>{0}<\/strong> is removed, all users will lose access to this group. The group will also be removed on the linked system.",
          "vaultrecord": "When removed, the password or secret for <strong>{0}<\/strong> cannot be restored.",
          "bulkaccount": "You are about to delete <strong>{0} accounts<\/strong>. These users will no longer be able to log in and the contents of the personal vaults will be lost.",
          "serviceaccountgroup": "Revoke access to the group <strong>{0}<\/strong>.",
          "vaultrecovery": "You did not provide the previous private key for recovery. This will make recovery for all vaults impossible until a vault is opened at least once. When the previous key is still available, please abort and provide this key.",
          "system": "When <strong>{0}<\/strong> is removed, all connected accounts and groups will also be removed. All access to groups on this system will be revoked.",
          "attributedefinition": "If you delete the attribute definition <strong>{0}<\/strong>, all users will lose the stored values ​​for this attribute.",
          "groupclient": {
            "group": "When the link between <strong>{0}<\/strong> and <strong>{1}<\/strong> is removed, all members of the group will lose access to the application.",
            "client": "When the link between <strong>{0}<\/strong> and <strong>{1}<\/strong> is removed, all members of the group will lose access to the application."
          },
          "groupsystem": "When <strong>{0}<\/strong> is removed, all members of the group will lose access to the linked system.",
          "organizationalunitclientapplication": "If you remove <strong>{0}<\/strong> from organisational unit {1}, the application will lose access to groups and configuration that belong to this organisational unit.",
          "accessprofileprov": "When <strong>{0}<\/strong> is removed, all members of the access profile will lose access to group on the linked system.",
          "profile": "When <strong>{0}<\/strong> is removed, all data associated with this access profile will also be removed. All access granted through this access profile will be revoked.",
          "saml2application": "When <strong>{0}<\/strong> is removed, all connections with groups are also removed.",
          "certificate": "You are about to delete the certificate <strong>{0}<\/strong>. Once deleted, this certificate cannot be restored without the original files.",
          "organizationalunitaccount": "If you remove <strong>{0}<\/strong> from organisational unit {1}, the user will lose access to groups and configuration that belong to this organisational unit.",
          "groupclassification": "When <strong>{0}<\/strong> is removed, all groups with this classification will lose their classification.",
          "vault": {
            "personal": "When you reset your personal vault, all stored secrets will be removed. This cannot be undone."
          },
          "accessprofileclient": "When the link between <strong>{0}<\/strong> and <strong>{1}<\/strong> is removed, all members of the access profile will lose access to the application.",
          "webhook": "When the webhook for <strong>{0}<\/strong> is removed this system will no longer be notified of events."
        },
        "rep": {
          "saml2application": "Confirm the removal of the SAML v2.0 application by entering the name.",
          "account": {
            "main": "Confirm the removal of the account by entering the username.",
            "internal": "Confirm the removal of the account by entering the username."
          },
          "group": "Confirm the removal of the group by entering the name.",
          "organizationalunitclientapplication": "Confirm the removal of the application by entering the name.",
          "groupclient": {
            "group": "Confirm the removal of the link by entering the group name.",
            "client": "Confirm the removal of the link by entering the application name."
          },
          "groupsystem": "Confirm the removal of the group by entering the name shown.",
          "identitysource": {
            "afas": "Confirm the removal of the AFAS identity source by entering the name."
          },
          "accessprofileprov": "Confirm the removal of the group by entering the name shown.",
          "certificate": "Confirm the removal of the certificate by entering the name.",
          "webhook": "Confirm the removal of the webhook by entering the URL.",
          "bulkaccount": "Confirm the removal of the accounts by entering 'delete accounts'.",
          "sequence": "Confirm the removal of the number sequence by entering the name.",
          "system": "Confirm the removal of the linked system by entering the name.",
          "vaultrecord": "Confirm the removal of the record by entering the name.",
          "serviceaccount": "Confirm the removal of the service account by entering the name.",
          "groupclassification": "Confirm the removal of the group classification by entering the name.",
          "vault": {
            "personal": "Confirm the removal of the vault by entering your username."
          },
          "tile": "Confirm the removal of the tile by entering the name.",
          "profile": "Confirm the removal of the access profile by entering the name.",
          "organizationalunitaccount": "Confirm the removal of the account by entering the username.",
          "oauth2application": "Confirm the removal of the OAuth2/OIDC application by entering the name.",
          "groupinsystem": "Confirm the removal of the group by entering the name.",
          "serviceaccountgroup": "Confirm the revocation of access to the group by entering the name.",
          "directory": "Confirm the removal of the directory by entering the name.",
          "ldapapplication": "Confirm the removal of the LDAP application by entering the name.",
          "accessprofileclient": "Confirm the removal of the link by entering the access profile name.",
          "vaultrecovery": "If you do want to continue, enter 'I am sure'.",
          "organizationalunit": "Confirm the removal of the organisational unit by entering the name.",
          "attributedefinition": "Confirm the removal of the attribute definition by entering the name."
        },
        "repeatlabel": {
          "organizationalunit": "Name",
          "account": "Username",
          "system": "Name",
          "group": "Name"
        },
        "comment": {
          "group": "Removing a group requires permission."
        }
      },
      "password": {
        "PROVISIONING_CONFIG": {
          "nogroup": "Configuration is required to activate your account on systems. KeyHub requires your password for this.",
          "main": "Configuration is required to activate {group}. KeyHub requires your password for this."
        },
        "EXPLICIT": "Reauthentication is required for this action.",
        "FIRST_AUTH": " ",
        "REREGISTRATION": "Re-registration is required for your account. To do this, enter the password that you use to open your vault.",
        "EXPIRED": "The password verification performed {time} has expired. KeyHub verifies your password every {pwdtimeout}.",
        "DIFFERENT_IP": "The password entered {time} was from a different IP-address.",
        "MAX_AGE_SET": "The Single Sign-on consumer explicitly requests reauthentication."
      },
      "federated": {
        "DIFFERENT_IP": "The authentication you performed {time} was from a different IP-address.",
        "FIRST_AUTH": " ",
        "EXPIRED": "The authentication you performed {time} has expired. KeyHub verifies your authentication every {pwdtimeout}.",
        "EXPLICIT": "Reauthentication is required for this action."
      },
      "leave": {
        "rep": {
          "mygroup": "For confirmation, enter the name of the group that you want to leave."
        },
        "warn": {
          "mygroup": "Leaving <strong>{0}<\/strong> will revoke all access given by this group, including its vault."
        }
      },
      "disableandaccountswritablechanged": {
        "rep": {
          "system": "Confirm the deactivation of the linked system as well as changing the 'accounts writable' property by entering the system's name."
        },
        "warn": {
          "system": "Are you sure you want to modify <strong>{0}<\/strong>?"
        }
      },
      "token": {
        "DIFFERENT_IP": "The code entered {time} was from a different IP-address.",
        "REREGISTRATION": "Re-registration is required for your account.",
        "EXPIRED": "The code verification performed {time} has expired. KeyHub verifies your token every {2fatimeout}.",
        "FIRST_AUTH": " ",
        "MAX_AGE_SET": "The Single Sign-on consumer explicitly requests reauthentication.",
        "EXPLICIT": "Reauthentication is required for this action."
      },
      "disable": {
        "rep": {
          "directory": "Confirm the deactivation of the directory by entering its name.",
          "serviceaccount": "Confirm the deactivation of the service account by entering the username.",
          "system": "Confirm the deactivation of the linked system by entering its name.",
          "account": "Confirm the deactivation of the account by entering the username."
        },
        "warn": {
          "serviceaccount": "When <strong>{0}<\/strong> is deactivated, it will immediately become unavailable.",
          "system": "Are you sure you want to deactivate <strong>{0}<\/strong>?",
          "directory": "Are you sure you want to deactivate <strong>{0}<\/strong>?",
          "account": "When <strong>{0}<\/strong> is deactivated, their authentication will immediately be invalidated."
        },
        "repeatlabel": {
          "account": "Username"
        }
      },
      "totpoffsetchange": "The clock of your 2FA device seems to have drifted. Please enter 2 consecutive codes to verify your device.",
      "accountswritablechanged": {
        "warn": {
          "system": "Are you sure you want to modify the property 'accounts writable' for <strong>{0}<\/strong>?"
        },
        "rep": {
          "system": "Confirm changing the 'accounts writable' property of the linked system by entering its name."
        }
      }
    },
    "confirm": {
      "delete": {
        "title": "Confirm removal",
        "error": "The given text is not '{0}'"
      },
      "disableandaccountswritablechanged": {
        "error": "The given text is not '{0}'",
        "title": "Confirm modification and deactivation"
      },
      "leave": {
        "title": "Confirm leaving",
        "error": "The given text is not '{0}'"
      },
      "disable": {
        "title": "Confirm deactivation",
        "error": "The given text is not '{0}'"
      },
      "federated": {
        "main": "Reauthenticate",
        "hint": "Click 'OK' to reauthenticate at <strong>{0}<\/strong>"
      },
      "accountswritablechanged": {
        "title": "Confirm modification",
        "error": "The given text is not '{0}'"
      },
      "password": {
        "placeholder": {
          "directory": "Your {0} password",
          "main": "Your general password"
        },
        "main": "Re-enter your password"
      },
      "totpoffsetchange": "Confirm your verification code time drift",
      "token": "Re-enter your code"
    },
    "rotatingpwd": {
      "head": "Rotating password required",
      "info": "It is required to have a rotating password for the activation of {group} on {system}."
    }
  },
  "mail": {
    "subject": {
      "request": {
        "addgroupadmin": "{from} wants to give {account} management privileges for {group}",
        "revokeadmin": "{from} wants to remove {account} from KeyHub Administrators",
        "updategroupmembership": {
          "update": "{from} requests to update {accountToUpdate} within {group}",
          "add": "{from} requests to add {accountToUpdate} to {group}"
        },
        "addgrouptoaccessprofile": "{from} wants to add the group {group} to the access profile {accessProfile}",
        "grantgrouponsystemrequest": {
          "group": "{from} requests to grant the users in the group {group} access to {gosType} {gosName} on {system}",
          "profile": "{from} requests to grant the users in the access profile {accessProfile} access to {gosType} {gosName} on {system}"
        },
        "transferaccessprofileownership": "{from} requests to transfer ownership of {accessProfile} to {group}",
        "createserviceaccount": "{from} requests a new service account {username} on {system}",
        "grantgrouponsystem": {
          "group": "{originalRequester} (via {from}) requests to grant the users in the group {group} access to {gosType} {gosName} on {system}",
          "profile": "{originalRequester} (via {from}) requests to grant the users in the access profile {accessProfile} access to {gosType} {gosName} on {system}"
        },
        "transferprovisionedsystemownership": "{from} requests to transfer ownership of {system} to {group}",
        "enabletechnicaladministration": "{from} requests to enable technical administration on {group}",
        "creategrouponsystem": "{from} requests {gosTypeNew} {gosName} on {system}",
        "removeprovisionedsystem": "{from} wants to remove the linked system {system}",
        "removegroup": "{from} wants to remove the group {group}",
        "grantapplication": {
          "profile": "{from} requests to grant the users in the access profile {accessProfile} access to {application}",
          "group": "{from} requests to grant the users in {group} access to {application}"
        },
        "transferorganizationalunitownership": "{from} requests to transfer ownership of {organizationalUnit} to {group}",
        "linkdirectorytoprofile": "{from} wants to link the directory {directory} to the access profile {accessProfile}",
        "passwordreset": "{from} requests a password recovery",
        "transferprovisionedsystemadministration": "{from} requests to transfer administration of {system} to {group}",
        "enableprofileadministration": "{from} requests to enable access profile administration on {group}",
        "createvault": "{from} requests a vault for {group}",
        "grantserviceaccountgroup": "{from} requests to grant the service account {serviceAccount} access to {gosType} {gosName} on {system}",
        "verifyinternalaccount": "{from} requests to create an account for {account}",
        "extendaccess": "{from} requests extended access to {group}",
        "setupauthgroup": {
          "disconnect": "{from} wants to terminate additional authorisation for {group}",
          "connect": "{from} requests additional authorisation by {requestingGroup} for {group}"
        },
        "transferserviceaccountadministration": "{from} requests to transfer administration of {serviceAccount} on {system} to {group}",
        "grantclientpermission": "{from} requests to grant additional permissions to {application}",
        "movegroups": "{from} wants to move {groupCount} groups to {organizationalUnit}",
        "transferapplicationownership": "{from} requests to transfer ownership of {application} to {group}",
        "removeaccessprofile": "{from} wants to remove the access profile {accessProfile}",
        "reviewaudit": "{from} requests a review of an audit of {group}.",
        "disable2fa": "{from} wants 2fa to be disabled",
        "updatelicense": "{from} wants to make a change to the license",
        "removeorganizationalunit": "{from} wants to remove the organisational unit {organizationalUnit}",
        "transfergrouponsystemownership": "{from} requests to transfer ownership of {gosType} {gosName} on {system} to {group}",
        "setupnestedgroup": {
          "connect": "{from} requests that {nestedGroup} be nested within {parentGroup}",
          "disconnect": "{from} requests that {nestedGroup} no longer be nested within {parentGroup}"
        },
        "joingroup": "{from} requests to be added to {group}",
        "createprovisionednamespace": "{from} requests a new namespace {namespaceName} on {system}",
        "transferprovisionedsystemcontentadministration": "{from} requests to transfer content administration of {system} to {group}",
        "grantaccess": "{from} requests access to {group}",
        "transferapplicationadministration": "{from} requests to transfer administration of {application} to {group}",
        "creategroup": "{from} requests the group {groupName} to be created",
        "joinvault": "{from} requests to be added to the vault for {group}"
      },
      "license-expired": "Topicus KeyHub license expired",
      "request-audit": "{from} requests an audit of the group {group}",
      "passwordrecovery-notice": "A request to recovery your password has been submitted",
      "admin-mail": "{from} has a question about {group}",
      "license-registration-failed": "Registration failed: Topicus KeyHub license limit reached",
      "processed": {
        "CANCELLED": "Cancelled: {0}",
        "DISALLOWED": "Declined: {0}",
        "ALLOWED": "Approved: {0}"
      },
      "account-activation": "Activate your KeyHub account",
      "authentication-changed-notice": "Your login details have been changed",
      "disable2fa-notice": "A request to disable your 2FA has been submitted",
      "license-hard-limit": "Topicus KeyHub license limit reached",
      "externalaccount-pwreset": "Password reset requested",
      "new-notifications": "There are new notifications on your dashboard",
      "groupaccount-changed-notice": "Your group membership for {groupName} has been changed",
      "license-soft-limit": "Topicus KeyHub license limit almost reached",
      "license-expires-soon": "Topicus KeyHub license expires soon",
      "license-terminated": "Topicus KeyHub license terminated"
    }
  },
  "mygroups": {
    "users": {
      "header": "Members"
    },
    "authorizedgroups": {
      "header": "Performs authorisation for",
      "provisioning": "Activation",
      "permission": {
        "summary": "Access until {0}",
        "header": "Access granted",
        "subtitle": "{0} has permission to activate the group."
      },
      "membership": "Membership",
      "hidden": {
        "1": "1 hidden group",
        "n": "{0} hidden groups"
      },
      "delegation": "Delegation",
      "auditing": "Audits"
    },
    "audit": {
      "summary": {
        "UNDER_REVIEW": "{0} has started an audit on {1}",
        "FINAL": "{0} has audited {2} account(s) on {1}",
        "DRAFT": "{0} has started an audit on {1}"
      },
      "open": {
        "UNDER_REVIEW": "Display audit",
        "DRAFT": "Continue audit",
        "new": "Audit now"
      },
      "attention": "The changes made will be applied immediately when the audit is saved.",
      "comment": {
        "nestedgroup": {
          "placeholder": "Comments for this nested group"
        },
        "placeholder": "Comments for this audit",
        "account": {
          "placeholder": "Comments for this account"
        }
      },
      "nestedhidden": "> {0} accounts inherited from the parent group {1}",
      "allaudits": "Show all audits...",
      "noaudits": "<< no audits >>>",
      "actionstep": "{0} at {1}",
      "omschrijving": "Group audit for {0}"
    },
    "header": {
      "lastactive": "Last active on",
      "auth": "Authorisation",
      "grouplastused": "Group last used",
      "user": "User",
      "enddate": "End date",
      "nestedgroup": "Perform audits for identical nested groups directly",
      "audit": "Audits",
      "action": "Action",
      "name": "Name"
    },
    "manager": {
      "main": "Has management privileges for the group",
      "delegated": "You have delegated management privileges",
      "self": "You have management privileges"
    },
    "map": {
      "toevoegen": "Add folder",
      "header": "Folder",
      "subtitle": "Enter a name for your folder.",
      "leeg": "This folder is empty"
    },
    "adminmail": {
      "header": "Mail managers",
      "info": "Send an e-mail to the managers of {0}",
      "sent": "E-mail sent"
    },
    "nestedgroups": {
      "header": "Nested groups",
      "inherited": "This user is inherited from the parent group."
    },
    "segment": {
      "count1": "1 group",
      "hidden": {
        "count": "Show the {0} groups you are already member of",
        "count1": "Show the group you are already member of"
      },
      "count": "{0} groups"
    },
    "los": "Groups displayed separately",
    "verborgen": "Hidden groups",
    "mappen": {
      "header": "Drag your groups into folders, which can be enabled on your dashboard with a single click."
    },
    "verlaten": {
      "succes": "You left the group {0}."
    },
    "groups": {
      "hidden": "{0} hidden groups"
    }
  },
  "profile": {
    "consent": {
      "revoke": "Revoke all permissions for this application",
      "none": "You did not (yet) give applications access to KeyHub.",
      "info": "You granted {0} access to the following data and operations:"
    },
    "pwd": {
      "recovery": {
        "info": {
          "newpwd": "Request the recovery of your password. Choose the new password with which you want to secure your Topicus KeyHub account.",
          "directory": "Request the recovery of your password. Enter the password of {0} to confirm this request.",
          "weak": "Request the recovery of your password. Your password for {0} does not meet the requirements. Choose a new password."
        },
        "header": "Password recovery",
        "newpwdcheck": {
          "label": "Repeat password"
        },
        "newpwd": {
          "label": "New password",
          "description": "Enter a new password to secure your Topicus KeyHub account."
        },
        "curpwd": {
          "description": "Enter the password with which you logon to {0}.",
          "label": "Current password"
        },
        "reason": {
          "description": "Indicate why you want to have your password recovered.",
          "placeholder": "(required)"
        }
      },
      "old": {
        "info": "Welcome to KeyHubs password wizard. You will be guided through 3 steps to change your password. Start with entering the password you currently use to logon to KeyHub below.",
        "head": "Current password for {0}",
        "infofed": "Welcome to KeyHubs password wizard. You will be guided through 3 steps to change your password. Your account is managed in an external directory. Therefore, you can directly skip to the next step.",
        "info1": "Your current password for KeyHub needs to be changed. You will be guided through 3 steps to change your password. Start with entering the password you currently use to logon to KeyHub below."
      },
      "step": {
        "vault": "Vault",
        "new": "New password",
        "old": "Current password"
      },
      "reset": {
        "action": "Reset password",
        "personalVaultRecords": {
          "1": "1 vault record in your personal vault.",
          "n": "{0} vault records in your personal vault."
        },
        "noloss": "Choose a new password to secure your account.",
        "managerOfGroups": {
          "n": "Manager privileges for {0} groups.",
          "1": "Manager privileges for 1 group."
        },
        "groupVaultRecords": {
          "n": "{0} vault records in group vaults.",
          "1": "1 vault record in a group vault."
        },
        "loss": "When you reset your password you will lose access to:",
        "header": "Reset your password",
        "adminMembership": "Membership of the KeyHub administrators group.",
        "groupVaults": {
          "n": "Access to the vaults of {0} groups.",
          "1": "Access to the vault of 1 group."
        }
      },
      "int": {
        "ok": "Your current password meets KeyHubs requirements. You can choose a new password, but this is not required.",
        "notok": "Your current password is too short or too weak to be used in KeyHub. Choose a new password which is at least {minlength} characters long."
      },
      "choosenew": {
        "okone": "Your current {0} password meets the requirements and can be used as KeyHub password. You have the option to choose a new password anyway. This password will also be set for {0}.",
        "notokone": "Your current {0} password does not meet the requirements. You have to choose a new password. This password will also be set for {0}.",
        "oktwo": "Your current KeyHub password meets the requirements. You have the option to choose a new password anyway.",
        "notoktwo": "Your current KeyHub password does not meet the requirements. You have to choose a new password."
      },
      "fed": {
        "ok": "Your current password meets KeyHubs requirements. You can choose a new password, but this is not required.",
        "notok": "Your current KeyHub password is too short or too weak. Choose a new password which is at least {minlength} characters long.",
        "new": "Choose a KeyHub-password which is at least {minlength} characters long. You will use this password to open your vaults and when signing on to linked systems."
      },
      "vault": {
        "info": "To update your password, your vault needs to be opened. Enter the password you use for your vaults below.",
        "head": "Unlock your vaults",
        "novault": "You do not yet have access to vaults. After choosing your KeyHub password in the next step, your vault will be created automatically and protected with this password.",
        "samepassword": "Your vault is protected with the password you just provided. If you (need to) choose a new password in the last step, your vault will be protected with that new password from then on."
      },
      "dir": "Your {directory} password has expired and needs to be changed. Choose a new password which is at least {minlength} characters long. This password will also be used inside KeyHub.",
      "notok": "Your {directory} password is too short or too weak to be used in KeyHub. If you wish to use the same password for KeyHub and {directory}, which is recommended, then choose a new password which is at least {minlength} characters long. You can also choose a different password for use in KeyHub only.",
      "opslaanlogin": "Save and sign in",
      "more": "Your {directory} password is used when authenticating to KeyHub and you will be prompted for this password every {pwdtimeout}. You will use your KeyHub password to open your vaults and when signing on to linked systems. Keeping these two password equal makes using KeyHub considerably easier. When using different passwords, you need to pay attention to enter the correct password when prompted for one.",
      "resync": {
        "tkhpwd": "Topicus KeyHub password",
        "curdirpwddesc": "Enter the password that you now use to log in to {0}.",
        "info": "Your password for {directory} has been changed outside of Topicus KeyHub. Enter your directory and Topicus KeyHub password below to resynchronise the passwords.",
        "curdirpwd": "Directory password",
        "tkhpwddesc": "Enter the password with which your vault is encrypted. This can be a previous password for {0} or a password chosen during password recovery.",
        "header": "Synchronise password"
      },
      "ok": "Your password for {directory} meets KeyHubs requirements. You can choose to use this password within KeyHub as well, which is recommended. You can also choose to use another password within KeyHub that differs from your {directory} password.",
      "sync": {
        "label": "Synchronise with {0}",
        "description": "Synchronise your KeyHub password with your {0} password. Note that your {0} password may also be used by other services (such as e-mail) and your password for those services will change as well if you change your password below."
      },
      "new": {
        "head": "New password for {0}"
      },
      "keyhub": "KeyHub password",
      "gebruik": "Configure your passwords",
      "opslaanok": "The changes were saved successfully and will be effective immediately."
    },
    "extension": {
      "link": "Connect",
      "install": {
        "main": "Install",
        "title": "Install browser extension",
        "subtitle": "Choose your browser"
      },
      "linked": "Browser extension connected",
      "notinstalled": "Browser extension not installed",
      "notlinked": "Browser extension not connected"
    },
    "2fa": {
      "reset": {
        "instruction": "When you've got a new mobile phone and the old phone is still available, use 'Reconfigure' under 'Authenticator app' and do not request a reset.",
        "info": "When you lost your mobile phone or security key, or performed a factory reset, ask a KeyHub administrator to reset your 2FA.",
        "header": "Request to have your 2FA reset"
      },
      "totp": {
        "reconfigure": "Reconfigure",
        "header": "Authenticator app",
        "enable": "Enable",
        "disable": "Disable authenticator app"
      },
      "webauthn": {
        "header": "Security keys",
        "add": "Add security key",
        "prf": "This key unlocks your vault."
      },
      "lostorstolen": "I lost access to all my 2FA apps or keys"
    },
    "sshkey": {
      "instellen": "SSH public key",
      "main": "SSH public key",
      "saved": "Your public key has been saved.",
      "info": "By using an SSH public key, you no longer have to enter your password when signing in. You can still use your password, if desired."
    },
    "lang": {
      "configure": {
        "main": "Change language",
        "subtitle": "Choose the language you want to use for Topicus KeyHub."
      },
      "saved": "Your language setting has been changed."
    },
    "account": {
      "header": "Account"
    },
    "provisioning": {
      "header": "Linked systems"
    },
    "rotatingpassword": "Rotating password"
  },
  "auditor": {
    "dashboard": {
      "groupaudits": {
        "unchecked": "Unaudited groups",
        "overdue": "Overdue group audits",
        "valid": "Audited groups",
        "main": "Group audits"
      },
      "auditlongoverdue": "The audit for this group is more than a month overdue.",
      "vaultpolicies": {
        "main": "Vault records",
        "valid": "Valid records",
        "unchecked": "Without expiry",
        "overdue": "Overdue records"
      },
      "twofastatus": "2FA",
      "serviceaccountsystems": "Linked systems",
      "export": {
        "subtitle": "Choose the type of export.",
        "title": "Export"
      },
      "accountdirectories": "Directories",
      "vaultrecordtooltip": "{0} total / {1} with end date / {2} expired",
      "classifications": "Classifications",
      "pwrotationscheme": "Service accounts",
      "auditrequested": "An audit for this group has been explicitly requested.",
      "accountstatus": "Accounts",
      "accountstooltip": "{0} total / {1} active",
      "header": {
        "vault": "Vault",
        "auditlog": "Audit Log"
      }
    },
    "classifications": {
      "auditinterval": {
        "12": "Once a year",
        "n": "Every {0} months",
        "0": "None",
        "1": "Every month"
      },
      "search": "Search for classifications",
      "header": "Classification - {0}"
    },
    "organizationalunit": {
      "search": "Organisational unit..."
    }
  },
  "error": {
    "GROUP_HAS_APPS": "This group owns or administers one or more applications and can therefore not be removed.",
    "LICENSE_WRONG_DOMAIN": {
      "login": "Unfortunately, the license for this Topicus KeyHub installation seems to be invalid and therefore you are unable to login. Contact your Topicus KeyHub administrators for assistance.",
      "main": "Your Topicus KeyHub license is for another domain."
    },
    "GROUP_AUDIT_ALTERED_CONFLICT": "The group has changed after starting this audit, check the changes and save again.",
    "RESET_INVALID_PASSWORD": "The password does not match the password provided when the request was submitted.",
    "CLIENT_PERMISSION_ALREADY_EXISTS": "The requested permission is already granted to this application.",
    "VAULT_TARGET_NOT_INITIALIZED": "The selected user did not yet setup a vault password.",
    "CLIENT_NOT_ALLOWED": {
      "n": "You are not allowed to sign in to {client}. Sign in to the KeyHub console and request access to the one of the following groups: {groups} or {lastGroup}.",
      "1": "You are not allowed to sign in to {client}. Sign in to the KeyHub console and request access to the group {group}.",
      "0": "You are not allowed to sign in to {client} because it has not been added to a group. Ask a manager of {owner} to configure access to {client}."
    },
    "PROVISIONED_SYSTEM_HAS_NAMESPACE": "This linked system cannot be deleted because it still contains namespaces. First delete the namespaces.",
    "VAULT_RECOVERY_KEY_MISSING": "A recovery key must be configured before vaults can be created. This must be done by a KeyHub administrator.",
    "NO_CHANGE_REQUIRED": "The action has been cancelled because no changes were made.",
    "PROVISIONED_SYSTEM_TESTED": "{system} was tested with the following outcome: {message}",
    "ID_IN_DIRECTORY_ALREADY_EXISTS": "You already have a KeyHub account",
    "INVALID_ACTIVATION": "The given code is incorrect or not fit for purpose.",
    "EXCESSIVE_ATTEMPTS": "Your account is blocked temporarily. Try again in {retryPeriod}.",
    "DUPLICATE_RESOURCE": "This object already exists.",
    "LICENSE_TERMINATED": {
      "login": "Unfortunately, the license for this Topicus KeyHub installation seems to be invalid and therefore you are unable to login. Contact your Topicus KeyHub administrators for assistance.",
      "main": "Your Topicus KeyHub license is terminated."
    },
    "SERVICEACCOUNT_IS_ACTIVE": "To perform this action, the service account must first be deactivated.",
    "OIDC_REFUSED": "You did not give KeyHub permission for Single Sign-on.",
    "DUPLICATE_VALUE": "The value must be unique, '{value}' is already in use.",
    "VAULT_TARGET_DOES_NOT_EXIST": "The user {username} does not exist or did not yet setup a vault password.",
    "LICENSE_LIMIT_REACHED": {
      "login": "Unfortunately, the limits of the license for this Topicus KeyHub installation have been reached and therefore you are unable to register an account. Contact your Topicus KeyHub administrators for assistance.",
      "main": "You've reached the limits of your Topicus KeyHub license and can add no more accounts."
    },
    "CERTIFICATE_IN_USE": "This certificate is in use and therefore cannot be modified or removed.",
    "VAULT_INVALID_RECOVERY_KEY": "The given private key is invalid or does not match the current public key.",
    "TOTP_OFFSET_CHANGE_TOKENS_ERROR": "The provided codes are invalid. Make sure to enter two consecutive codes.",
    "MODIFICATION_ALREADY_REQUESTED": "You already submitted a similar request. Please wait until a manager or administrator processed it.",
    "CERTIFICATE_FETCH_ERROR": "An error occurred while fetching the certificate: {reason}",
    "CLIENT_ID_ALREADY_IN_USE": "The client identifier must be unique, '{clientid}' is already in use.",
    "VAULT_TEMP_LOCKED": "Access to your vaults has been temporarily blocked. Try again in {retryPeriod}.",
    "MODIFICATION_DELEGATION_WITH_NESTING_NOT_ALLOWED": "Delegating management is not possible for groups involved in nesting.",
    "LICENSE_NOT_YET_ACTIVE": {
      "login": "Unfortunately, the license for this Topicus KeyHub installation seems to be invalid and therefore you are unable to login. Contact your Topicus KeyHub administrators for assistance.",
      "main": "Your Topicus KeyHub license is not yet valid."
    },
    "TOKEN_LOGIN_NOT_POSSIBLE": {
      "main": "Two-factor authentication is required for this action. Enable 2fa under your profile.",
      "login": "Two-factor authentication is required for {client}. Sign in to the KeyHub console to enable 2fa."
    },
    "LICENSE_KEY_MALFORMED": {
      "login": "Unfortunately, we've been unable to verify the license for this Topicus KeyHub installation and therefore you are unable to login. Contact your Topicus KeyHub administrators for assistance.",
      "main": "The license key is malformed."
    },
    "ORGANIZATIONAL_UNIT_NOT_UNDER_BASE": "The organisational unit is not a descendant of the user's base organisational unit.",
    "VAULT_RECOVERY_KEY_NOT_INITIALIZED": "The vault does not have a recovery key.",
    "ATTRIBUTE_HAS_VALUES": "There are already values for this attribute definition and therefore it cannot be made unique.",
    "CANNOT_REMOVE_LAST_MANAGER": "The account for {account} cannot be removed because it is the last account without an end date and with management privileges in {group}. Choose a new manager for the group first.",
    "DIRECTORY_CREDENTIALS_EXPECTED": "You entered the wrong password. Please enter your {directory} password.",
    "DIRECTORY_IN_USE": "A directory can only be removed after all its accounts are removed.",
    "MODIFICATION_STATUS_INVALID": "This request was already processed or withdrawn.",
    "VAULT_KEY_MISSING": "Access to the vault of {holder} is required for this action. Try again after requesting access to the vault.",
    "PASSWORD_INCORRECT": "The given password is incorrect.",
    "ILLEGAL_BRANDINGLOGO": "The branding logo does not meet the requirements. Only a .png of 540 by 280 pixels is allowed.",
    "ORGANIZATIONAL_UNIT_GROUP_NOT_UNDER_NEW_OU": "The group {group} is not under the new organisational unit and is directly or indirectly linked this group on system.",
    "NAME_ALREADY_IN_USE": "The name must be unique, '{name}' is already in use.",
    "PROVISIONING_ERROR": "Your account in {system} could not be updated due to an error. If this problem persists, please contact a member of {admins}.",
    "MODIFICATION_AUTHORIZATION_ALREADY_SETUP": "This type of authorisation is already set up for this group.",
    "FILE_SIZE_INCORRECT": "The given file for {for_name} is of incorrect size.",
    "INVALID_REGISTRATION_CREDENTIALS": "The given username and password do not match an existing user in the directory.",
    "ATTRIBUTE_IN_USE_BY_PROFILE": "This attribute definition is still in use by the access profile {profile} and can therefore not be modified or removed.",
    "LICENSE_FEATURE_IN_USE": "Your Topicus KeyHub installation is using features that are not allowed by the license:",
    "CLIENT_CREDENTIALS_NOT_ALLOWED": "This application does not support the client credentials grant and can therefore not get access to a vault.",
    "USERNAME_ALREADY_IN_USE": "This username already exists.",
    "KEYHUB_CREDENTIALS_EXPECTED": "You entered the wrong password. Please enter your KeyHub password.",
    "LAUNCHPAD_TILE_IDP_INITIATED_NOT_SUPPORTED": "IdP-initiated login is not supported by this application.",
    "ATTRIBUTE_IN_USE_BY_SYSTEM": "This attribute definition is still in use by the linked system {system} and can therefore not be modified or removed.",
    "ORGANIZATIONAL_UNIT_CANNOT_REMOVE_CLIENT_BASE": "Cannot remove the base organizational unit from the application.",
    "MODIFICATION_CIRCULAR_GROUP_NESTING": "{nested} cannot be nested within {parent} because {parent} is already directly or indirectly nested within {nested}.",
    "VAULT_PUBLIC_KEY_NOT_INITIALIZED": "The target vault is not yet ready. The vault must first be opened by someone with access.",
    "ORGANIZATIONAL_UNIT_MISMATCH": "There is a mismatch between the organisational units involved.",
    "PROVISIONED_SYSTEM_INACTIVE": "The linked system is inactive.",
    "OIDC_GENERAL_ERROR": "An error occurred during authentication: {cause}",
    "SAML_UNRESOLVABLE_SUBJECT": "It is not possible to determine the subject for this SAML2 application for your account. Contact an administrator of the application.",
    "ACCESS_PROFILE_DIRECTORY_MISMATCH": "The access profile already contains accounts from another directory, like {account}.",
    "MODIFICATION_GROUP_ALREADY_NESTED": "The chosen group is already nested.",
    "CLIENT_ACTIVATION_REQUIRED": {
      "1": "To log in to {client}, the group {group} must first be activated.",
      "n": "To login to {client}, one of the following groups must first be activated: {groups} or {lastGroup}."
    },
    "VAULT_RECORD_ALREADY_SHARED": "The vault record is already shared with the selected vault.",
    "INVALID_CREDENTIALS": "The given password is incorrect.",
    "MODIFICATION_DELEGATION_ADMIN_NOT_ALLOWED": "Delegating management is not possible for KeyHub Administrators.",
    "NUMBER_SEQUENCE_IN_USE": "This number sequence is still in use.",
    "MODIFICATION_RESET_NO_TARGETS": "There are not enough users to handle your request.",
    "CANNOT_REMOVE_LAST_2FA_METHOD": "Your last 2FA method can not be removed. First add another method in order to then remove this one.",
    "ORGANIZATIONAL_UNIT_USER_NO_ACCESS": "The user does not have access to the chosen organisational unit.",
    "VAULT_FOR_ACCOUNT_NOT_CREATED": "Your account is configured incorrectly. Go to your profile and reset your password to correct this.",
    "PROVISIONED_SYSTEM_IN_USE": "{system} is already in use as {otherSystem}",
    "ORGANIZATIONAL_UNIT_TOO_DEEP": "Organizational units can only be nested up to 5 deep.",
    "GROUP_CANNOT_BE_MOVED": "One or more groups cannot be moved.",
    "PROVISIONED_SYSTEM_ERROR": "The operation on {system} could not be completed. The system reports: {message}",
    "PASSWORD_ROTATING_REQUIRED": "Rotating password is required for this action. This can be enabled on your profile page.",
    "LICENSE_BUSINESS_LIMIT_REACHED": "You've reached the limits of your Topicus KeyHub license and can add no more 'Business' accounts.",
    "PASSWORD_CHANGE_REJECTED": "Your new password does not meet the requirements set by {directory}. Please try a different password.",
    "CLIENT_IN_USE_FOR_PROVISIONING": "This application is in use by the linked system '{system}'. Remove this system first.",
    "PASSWORD_CHANGE_ERROR": "The password could not be set on {directory}. If this problem persists, please contact a KeyHub administrator.",
    "VAULT_INVALID_PASSWORD": "The given password for your vaults is incorrect.",
    "AUTHENTICATION_ERROR": "Unexpected authentication error: {cause}",
    "CANNOT_REVOKE_LAST_MANAGER": "You cannot revoke the management privileges for the account for {account} because it is the last manager for {group}.",
    "EMAIL_ALREADY_IN_USE": "The e-mail address must be unique, '{email}' is already in use.",
    "VAULT_RECORD_SECRET_REQUIRED": "It is required to enter at least a password, 2FA key, file or comment.",
    "DEFAULT_DIRECTORY_ALREADY_EXISTS": "There can be only one default directory. {name} is already set as the default directory.",
    "PROVISIONED_SYSTEM_DN_NOT_UNIQUE": "The provided DN must be unique, '{dn}' is already in use in system '{system}'.",
    "PASSWORD_WEAK": "The given password is too weak. This password is listed in a collection of commonly used passwords.",
    "LICENSE_PRO_LIMIT_REACHED": "You've reached the limits of your Topicus KeyHub license and can add no more 'Pro' accounts.",
    "PROVISIONING_MISSING_PERMISSION": "The application is missing a required permission: {role}",
    "PROVISIONED_SYSTEM_NO_UUID": "{system} did not provide a correct UUID",
    "LICENSE_AT_LEAST_BUSINESS_REQUIRED": "At least a Business license is required for {username} to allow group memberships or a personal vault.",
    "MODIFICATION_GROUPACCOUNT_STATUS_CONFLICT": "This group membership is in an unexpected state.",
    "GROUP_ACCOUNT_HAS_LAST_SECRET": "{account} cannot be removed from {group} because it is the last account with access to the group's vault.",
    "CANNOT_REMOVE_ADMIN": "Unable to delete KeyHub Administrator.",
    "FEDERATION_ERROR": "An error occurred during Single Sign-on: {cause}",
    "PROVISIONING_CONFLICT": "Due to a change in configuration, your action could not be processed. Please try again.",
    "PASSWORD_TOO_SHORT": "The given password is too short. A minimum of {minlength} characters is required.",
    "VAULT_ACTIVATION_REQUIRED": "To read vault records for this group, the group must first be activated.",
    "MODIFICATION_DELEGATION_REQUIRES_MEMBERSHIP_AUTH": "The selected group does not have extra authorization on group membership. This is required for delegation of management.",
    "DIRECTORY_TESTED": "{directory} was tested with the following outcome: {message}",
    "INVALID_TOTP_TOKEN": "The given code is incorrect. Is the time on your phone set correctly?",
    "MODIFICATION_NESTED_MEMBERSHIP_AUTH_NOT_ALLOWED": "A nested group cannot get authorisation on membership.",
    "LAUNCHPAD_TILE_VAULT_RECORD_URL_REQUIRED": "A link is required for a launchpad tile.",
    "DIRECTORY_SEARCHFILTER_INCORRECT": "The search filter for the directory is incorrect.",
    "PASSWORD_RESET_PERMANENT_LOSS": "After the password reset, some access will be lost. Recovery is then only possible via an emergency procedure, initiated by a KeyHub administrator. Press save again to reset the password anyway.",
    "PROVISIONING_MISSING_DIRECTORY_ATTRIBUTE": "The directory is missing a required account attribute: {attribute}",
    "GROUP_AUDIT_DRAFT_EXISTS": "A draft audit has already been saved for this group. Open this draft instead of creating a new one.",
    "NO_VAULT_TO_RESTORE": "The user {username} does not have a vault to restore."
  },
  "DerRSAPublicKeyValidator": {
    "invalidkey": "Invalid RSA public key. Use an RSA public key in DER-encoding."
  },
  "account": {
    "enable2fa": {
      "msg": "With two-factor authentication disabled, only limited use of KeyHub is possible.",
      "link": "Click here to configure 2FA."
    },
    "header": "Account - {0}",
    "linkextension": {
      "link": "Click here to connect the extension.",
      "msg": "The browser extension has not yet been connected to your account."
    },
    "internal": {
      "move": {
        "subtitle": "Move this internal account to a different directory",
        "main": "Move",
        "title": "Move internal account"
      },
      "activation": {
        "refresh": "Send a new activation code",
        "send": "Send activation code"
      },
      "header": "Internal account - {0}",
      "codevalidity": "This code is valid until {0}."
    },
    "cleanup": {
      "directory": {
        "selected": {
          "more": "# directories selected",
          "one": "1 directory selected"
        },
        "noneselected": "(All directories)"
      },
      "status": {
        "noneselected": "(All accounts)",
        "selected": {
          "one": "1 status selected",
          "more": "# statuses selected"
        }
      },
      "notfound": "Not found",
      "head": "Accounts to be deleted",
      "msg": "The accounts below will be deleted. Place one username per line or search to add multiple accounts at once. It is also possible to use CSV where the first column contains the username.",
      "inactivesince": "Inactive since {0}",
      "confirm": "delete accounts"
    },
    "search": {
      "licenserole": "Accounts with license role...",
      "group": "Accounts in group...",
      "accounts": "Search in accounts",
      "validity": "Accounts with validity...",
      "directory": "Accounts in directory..."
    },
    "noGroups": "You are not yet a member of a group. Ask for access with your primary contact.",
    "recovery": {
      "status": {
        "pwd": "Pending password recovery request",
        "both": "Pending recovery requests for password and 2FA",
        "none": "No pending recovery requests",
        "2fa": "Pending recovery request for 2FA"
      }
    },
    "valideerNu": "Validate now",
    "switchLicenseRole": {
      "title": "Switch license role",
      "subtitle": "Choose the new license role for {0}.",
      "main": "Switch role"
    },
    "joinGroups": {
      "link": "Ask for access via 'My groups'.",
      "msg": "You are not yet part of a group."
    },
    "cancelreregister": "Cancel rename",
    "reregister": "Rename/move",
    "bulkedit": {
      "perform": {
        "subtitle": "Choose the action you want to perform on the selected accounts.",
        "title": "Update accounts"
      },
      "action": "Update"
    }
  },
  "consent": {
    "name": {
      "global_admin": "KeyHub administrator",
      "manage_account": "Manage your account",
      "profile": "Profile",
      "auditor": "Auditor",
      "provisioning": "Activate linked systems",
      "access_vault": "Access your vaults",
      "group_admin": "Manage groups"
    },
    "header": "{0} requests access",
    "desc": {
      "manage_account": "Manage your account, such as your passwords, 2FA and group memberships.",
      "global_admin": "Manage KeyHub as administrator.",
      "auditor": "View audit logs and audit summaries for a security officer.",
      "access_vault": "Access records in your vaults and manage your access to vaults.",
      "group_admin": "Manage groups for which you are manager. Grant users access and respond to requests regarding these groups.",
      "profile": "View your profile, such as username and e-mail address.",
      "provisioning": "(De)activate your account on linked systems."
    },
    "more": "{0} requests additional access. You gave {0} access to some of your data in the past. You should only approve the request if you trust it with the following permissions:",
    "help": "{0} requests access to your data. You should only grant {0} access if you trust it with the following permissions:"
  },
  "vault": {
    "recover": {
      "deleted": {
        "header": "Restore a deleted vault",
        "explain": "Restore all records of a removed vault by adding them to an existing vault."
      },
      "explain": "Choose a vault and the user to give access to the vault. For group vaults this must be a member of the group.",
      "header": "Restore access to a vault",
      "main": "Restore access",
      "group": "Group",
      "done": "{0} now has access to the vault for {1}."
    },
    "secret": {
      "totpinvalid": "The key is not valid. Only 'A-Z' and '2-7' are allowed. The key must be at least 4 characters long.",
      "edit": {
        "password": "Modify password",
        "totp": "Modify key"
      },
      "refreshtotp": "Refresh TOTP code",
      "generate": "Generate a password"
    },
    "record": {
      "sharedfrom": {
        "header": "Shared from",
        "main": "Shared from {0}"
      },
      "sharedwith": {
        "main": "Shared with {0}",
        "header": "Shared with"
      },
      "move": {
        "confirm": {
          "copy": {
            "sub": "You are about to copy <strong>{0}<\/strong> to <strong>{1}<\/strong>'s vault. Are you sure?",
            "head": "Copy record"
          },
          "move": {
            "sub": "You are about to move <strong>{0}<\/strong> to <strong>{1}<\/strong>'s vault. Are you sure?",
            "head": "Move record"
          }
        },
        "specific": "Share, copy or move record",
        "title": "Move, copy or share",
        "target": {
          "true": "Group",
          "false": "Personal vault"
        },
        "info": "Choose a destination vault for {0}."
      },
      "shared": {
        "main": "Shared with:",
        "parentRecordName": "Name original vault record: {0}"
      },
      "strength": {
        "average": "This password is not very strong. Choose a stronger password if possible.",
        "weak": "This password is very weak. Choose a stronger password.",
        "strong": "This password has an acceptable strength."
      },
      "enddate": {
        "warning": "This vault record will expire on {0}.",
        "main": "End date",
        "error": "This vault record has expired."
      },
      "holder": {
        "sharedend": "(shared from {0} until {1})",
        "shared": "(shared from {0})"
      },
      "shareend": "{0} (shared until {1})",
      "derived": "Derived from an application or service account",
      "header": "Vault record - {0}",
      "duplicate": {
        "warning": "This password is reused within this vault."
      },
      "add": "Add record",
      "unshare": "Use you sure you want to stop sharing this record?"
    },
    "unlock": {
      "header": "Unlock vaults",
      "subtitle": "Enter the password to unlock your vaults.",
      "passwordlost": "Forgotten?"
    },
    "export": {
      "title": "Export vault",
      "subtitle": "Choose a vault to export to CSV."
    },
    "activation": {
      "warn": "Activation of the group is required. The password, TOTP code, file and comment are not available."
    },
    "personal": {
      "lost": {
        "subtitle": "This is caused by a password reset.",
        "help": "Press 'Reset vault' to empty your personal vault after which you can add new passwords.",
        "main": "Your personal vault is invalid"
      },
      "delete": "Reset vault",
      "anon": "Personal vault",
      "main": "{0}'s personal vault"
    },
    "filter": {
      "group": "Select a vault..."
    },
    "recovered": "RECOVERED - ",
    "totp": "2FA",
    "password": "Password",
    "locked": {
      "warn": "Your vault is locked. The password, TOTP code, file and comment are not available."
    }
  },
  "notification": {
    "groupeditrequired": {
      "CRITERIA_UNSATISFIED_VAULT_REQUIRES_ACTIVATION": {
        "long": "{groupName} does not have the option \"Activation required for vault access\" enabled. This is required for its classification."
      },
      "CRITERIA_UNSATISFIED_ROTATING_PASSWORD_REQUIRED": {
        "long": "{groupName} does not have the option \"Rotating password required\" enabled. This is required for its classification."
      },
      "CRITERIA_UNSATISFIED_AUDIT_INTERVAL": {
        "long": {
          "12": "{groupName} does not meet the audit interval of its classification: once a year.",
          "1": "{groupName} does not meet the audit interval of its classification: every month.",
          "n": "{groupName} does not meet the audit interval of its classification: every {interval} months."
        }
      },
      "CRITERIA_UNSATISFIED_AUDIT_MONTHS": {
        "long": "{groupName} does not have the months required for its classification selected for audits."
      },
      "CRITERIA_UNSATISFIED_AUTHORIZING_GROUP_AUDITING": {
        "long": "{groupName} does not have an authorising group for audits configured. This is required for its classification."
      },
      "CRITERIA_UNSATISFIED_AUTHORIZING_GROUP_PROVISIONING": {
        "long": "{groupName} does not have an authorising group for activation configured. This is required for its classification."
      },
      "CRITERIA_UNSATISFIED_RECORD_TRAIL": {
        "long": "{groupName} does not have the option \"Record audit trail\" enabled. This is required for its classification."
      },
      "CRITERIA_UNSATISFIED_AUTHORIZING_GROUP_MEMBERSHIP": {
        "long": "{groupName} does not have an authorising group for membership configured. This is required for its classification."
      },
      "alert": "EDIT REQUIRED",
      "CRITERIA_UNSATISFIED_MINIMUM_NR_MANAGERS": {
        "long": "{groupName} does not have at least {minimumNrManagers} managers. This is required for its classification."
      },
      "ONE_MANAGER": {
        "long": "Group {groupName} requires editing because it currently only has one manager."
      },
      "adjust": "Adjust automatically",
      "CRITERIA_UNSATISFIED_AUTHORIZING_GROUP_DELEGATION": {
        "long": "{groupName} does not have a group with delegated privileges configured. This is required for its classification."
      }
    },
    "license": {
      "revoked": "The license feature under which this falls is no longer available."
    },
    "invalidsignature": {
      "description": "The internal consistency of the database cannot be guaranteed.",
      "head": "Invalid signatures",
      "moreinfo": "More information",
      "alert": "SIGNATURE"
    },
    "certificateexpired": {
      "hasexpired": {
        "LDAP_CLIENT": "One of the certificates used by the LDAP application {description} has expired at {expiration}.",
        "PROVISIONED_AD": "One of the certificates used by the linked AD {description} has expired at {expiration}.",
        "GLOBAL_TRUSTED_CERTIFICATE": "The certificate {description} has expired at {expiration}.",
        "LDAP_SERVER_SETTING": "The certificate for the internal LDAP server has expired at {expiration}.",
        "WEBHOOK": {
          "global": "One of the certificates used by the webhook {description} has expired at {expiration}.",
          "restricted": "One of the certificates used by the webhook {description} for {subjectName} has expired at {expiration}."
        },
        "PROVISIONED_LDAP": "One of the certificates used by the linked LDAP {description} has expired at {expiration}.",
        "LDAP_DIRECTORY": "One of the certificates used by the LDAP directory {description} has expired at {expiration}.",
        "IDP": "The IdP signing certificate has expired at {expiration}.",
        "KEYHUB": "The KeyHub certificate has expired at {expiration}."
      },
      "expiresoon": {
        "IDP": "The IdP signing certificate will expire at {expiration}.",
        "GLOBAL_TRUSTED_CERTIFICATE": "The certificate {description} will expire at {expiration}.",
        "WEBHOOK": {
          "restricted": "One of the certificates used by the webhook {description} for {subjectName} will expire at {expiration}.",
          "global": "One of the certificates used by the webhook {description} will expire at {expiration}."
        },
        "PROVISIONED_AD": "One of the certificates used by the linked AD {description} will expire at {expiration}.",
        "LDAP_SERVER_SETTING": "The certificate for the internal LDAP server will expire at {expiration}.",
        "LDAP_CLIENT": "One of the certificates used by the LDAP application {description} will expire at {expiration}.",
        "KEYHUB": "The KeyHub certificate will expire at {expiration}.",
        "LDAP_DIRECTORY": "One of the certificates used by the LDAP directory {description} will expire at {expiration}.",
        "PROVISIONED_LDAP": "One of the certificates used by the linked LDAP {description} will expire at {expiration}."
      },
      "expired": "EXPIRED"
    },
    "vaultrecordexpired": {
      "hasexpired": {
        "personal": "The vault record {recordName} in your personal vault has expired at {endDate}.",
        "group": "The vault record {recordName} in the vault of {vaultName} has expired at {endDate}."
      },
      "expiresoon": {
        "personal": "The vault record {recordName} in your personal vault will expire at {endDate}.",
        "group": "The vault record {recordName} in the vault of {vaultName} will expire at {endDate}."
      },
      "expired": "EXPIRED"
    },
    "licensestatus": {
      "head": "Topicus KeyHub license",
      "description": {
        "BUSINESS_LIMIT_EXCEEDED": "The license limit of the number of Business users has been reached.",
        "HARD_LIMIT_REACHED": "The license limit of Topicus KeyHub is reached. There are {activeAccounts} active accounts out of the maximum of {hardLimit}.",
        "TERMINATED": "Your Topicus KeyHub license has unfortunately expired.",
        "HARD_LIMIT_EXCEEDED": "The license limit of Topicus KeyHub is reached. There are {activeAccounts} active accounts out of the maximum of {hardLimit}.",
        "PRO_LIMIT_EXCEEDED": "The license limit of the number of Pro users has been reached.",
        "NOT_YET_VALID": "Your Topicus KeyHub license is not yet valid.",
        "EXPIRED": "Your Topicus KeyHub license has unfortunately expired.",
        "FEATURE_IN_USE": "Features are in use that have not been enabled in the Topicus KeyHub license.",
        "WRONG_DOMAIN": "The Topicus KeyHub license is for a different domain.",
        "SOFT_LIMIT_REACHED": "The license limit of Topicus KeyHub is almost reached. There are {activeAccounts} active accounts out of the maximum of {hardLimit}."
      },
      "alert": "License"
    },
    "oldapiversion": {
      "info": "This version is no longer supported and may be discontinued in a future update of Topicus KeyHub.",
      "alert": "API VERSION",
      "markdone": "Mark as resolved"
    },
    "updateavailable": {
      "head": "Update available",
      "description": "This Topicus KeyHub installation has not been updated for a while. It is important to always run the latest version with the most recent security updates.",
      "alert": "UPDATE",
      "view": "View updates",
      "releasenotes": "Check for updates"
    },
    "oldapiusage": {
      "description": "The application {client} uses the outdated API version {apiVersion}."
    },
    "groupauditrequested": {
      "description": {
        "conform": "This is required to conform to the periodic auditing configured for this group.",
        "periodic": "This is triggered by periodic auditing on this group.",
        "pending": "This request is pending to be completed before {0}.",
        "requested": "This audit has been explicitly requested.",
        "long": "Group {groupName} requires an audit.",
        "overdue": "This request is overdue since {0}."
      },
      "main": "Group audit"
    },
    "rotatingpwdrequired": {
      "alert": "ENABLE",
      "description": {
        "main": "It is required to have a rotating password for {groups}.",
        "nogroups": "Certain accounts require a rotating password."
      },
      "head": "Rotating password required"
    },
    "provconfig": {
      "alert": "ACTIVATE",
      "description": "Your account needs to be manually activated once on {systems} before all groups can be used."
    }
  },
  "organizationalunit": {
    "movegroups": {
      "request": {
        "groupCount": {
          "label": "Number of groups"
        },
        "groups": {
          "error": {
            "nogroups": "You need to select at least one group."
          }
        },
        "targetOU": {
          "label": "To organisational unit"
        },
        "title": "Move groups"
      },
      "report": {
        "title": "Report"
      }
    },
    "account": {
      "subtitle": {
        "edit": "An account within the organisational unit {0}.",
        "add": "Add an account to the organisational unit {0}."
      },
      "header": "Organisational unit membership"
    },
    "search": "Search for organisational units",
    "client": {
      "subtitle": {
        "edit": "A client within the organisational unit {0}.",
        "add": "Add a client to the organisational unit {0}."
      },
      "header": "Organisational unit membership"
    },
    "groupsetting": "Select a group...",
    "header": "Organisational unit - {0}",
    "inheritedgroupsetting": "{0} inherited from {1}...",
    "settings": {
      "header": "Settings"
    }
  },
  "group": {
    "remove": {
      "client": {
        "none": "No applications",
        "admin": "Technical administration",
        "adminowner": "Owner and technical administration",
        "owner": "Owner",
        "main": " - {type}: {name} ({role})"
      },
      "notallowed": "The group contains elements that cannot or may not be deleted together with the group. Remove these elements separately or transfer them to another group.",
      "gos": {
        "none": "No groups on systems",
        "owner": "Owner",
        "main": " - {type}: {name} ({role})"
      },
      "helpdesk": " - Help desk for {0}",
      "vault": {
        "main": " - {0} vault record(s)",
        "unrecoverable": "   (These vault records cannot be restored after removal.)",
        "none": "No vault records"
      },
      "system": {
        "adminowner": "Owner and technical administration",
        "admin": "Technical administration",
        "owner": "Owner",
        "main": " - {type}: {name} ({role})",
        "none": "No linked systems"
      },
      "nestedgroups": " - Nested groups",
      "authgroups": " - Performs authorisation for groups",
      "sa": {
        "admin": "Technical administration",
        "main": " - {type}: {name} ({role})"
      },
      "accessprofile": " - Owner of the access profile {0}",
      "organizationalunit": " - Owner of the organisational unit {0}",
      "main": "Remove {0}",
      "msg2": "The group contains the following elements:",
      "msg1": "You are about to delete the group '{0}' including everything that falls under this group. Check the list of elements carefully before continuing. All listed elements will be removed.\n\n"
    },
    "addadmin": {
      "header": "Add manager",
      "explain": "Submit a request to give a user management privileges for {0}. If the user is not yet member of the group, he/she will be added."
    },
    "account": {
      "subtitle": {
        "bewerken": "Edit the account of {1} within the group {0}.",
        "toevoegen": "Add an account to the group {0}."
      },
      "nest": {
        "disconnect": "Convert to unnested",
        "connect": "Convert to nested"
      },
      "toevoegen": "Add account",
      "bewerken": "Edit account"
    },
    "requestaudit": {
      "confirm": "Are you sure you want to request an audit of the group?",
      "done": "An audit of the group has been requested.",
      "main": "Request audit"
    },
    "koppeling": {
      "bewerken": {
        "nodelete": "You are not a manager of the owning group.",
        "main": "Group on linked system",
        "subtitle": "Choose the properties of the group on the linked system."
      }
    },
    "admin": {
      "toevoegen": "Add manager"
    },
    "search": {
      "mygroups": "Search in my groups...",
      "account": "Groups with account..."
    },
    "info": {
      "nrSystems": "{0} linked system(s)",
      "nrVaultRecords": "{0} vault record(s)",
      "nrAccounts": "{0} account(s)",
      "nrClients": "{0} application(s)"
    },
    "mailadmin": "Mail manager",
    "application": {
      "bewerken": {
        "subtitle": "Select the options for accessing the application through this group.",
        "main": "Edit application in group"
      }
    },
    "private": "(hidden)",
    "header": "Group - {0}",
    "opsystem": "{0} on {1}",
    "revokeadmin": {
      "header": "Remove account from KeyHub Administrators",
      "explain": "Submit a request to remove {0} from the KeyHub Administrators group."
    },
    "audits": {
      "header": "Audits for {0}"
    },
    "leave": "Leave this group"
  },
  "grouponsystem": {
    "header": {
      "group": "Group",
      "main": "Group on System - {0}",
      "activationrequired": "Activation required",
      "serviceaccount": "Service account",
      "serviceaccounts": "Service accounts",
      "groups": "Groups",
      "accessprofiles": "Access profiles",
      "accessprofile": "Access profile",
      "username": "Username"
    }
  },
  "accessprofile": {
    "gos": {
      "details": {
        "title": "Group on linked system",
        "subtitle": "This access profile has access to the group on the linked system."
      }
    },
    "client": {
      "details": {
        "subtitle": "Select the options for accessing the application via this access profile.",
        "title": "Edit application in access profile"
      }
    },
    "attributerules": {
      "new": "New attribute",
      "header": "Managed attributes"
    },
    "attribute": {
      "summary": {
        "OUT_OF_SYNC": "The expected value '{expected}' is not synchronized. The current value is '{current}'.",
        "ERROR": "An error occurred while calculating the value. The current value is '{current}'.",
        "DUPLICATE": "The selected value '{context}' conflicts with another user. The current value is '{current}'.",
        "UNKNOWN": "The status is unknown.",
        "INVALID": "The selected value '{context}' is invalid. The current value is '{current}'.",
        "MISSING": "There is no value for this required attribute. The current value is '{current}'.",
        "none": "No value has been selected.",
        "IN_SYNC": "The current value is '{current}'."
      },
      "DUPLICATE": "Duplicate value: {0}",
      "head": "{1} for {0}",
      "INVALID": "Invalid value: {0}",
      "ERROR": "{0}",
      "VALID": "{0}"
    },
    "header": {
      "source": "Source",
      "attributes": "Attributes",
      "attributerule": "Attribute",
      "main": "Access profile - {0}",
      "manual": "Manual",
      "expected": "Expected value",
      "current": "Current value",
      "group": "Group",
      "account": "User",
      "activation": "Activation"
    },
    "access": {
      "header": "Access"
    },
    "account": {
      "subtitle": {
        "edit": "Edit the account of {1} within the access profile {0}.",
        "add": "Add an account to the access profile {0}."
      },
      "add": "Add account",
      "edit": "Edit account"
    },
    "attributes": {
      "outofsync": {
        "1": "1 deviation",
        "n": "{0} deviations"
      },
      "error": {
        "1": "1 error",
        "n": "{0} errors"
      },
      "link": "Attributes",
      "insync": "Synchronised"
    },
    "apporsystem": {
      "add": {
        "main": "Add access",
        "subtitle": "Choose the type of access to add."
      }
    },
    "groups": {
      "header": "Groups"
    },
    "error": {
      "duplicateattr": "The attribute {0} has been specified multiple times."
    },
    "accounts": {
      "header": "Members"
    }
  },
  "gos": {
    "ldap": {
      "main": "the LDAP group",
      "new": "a new LDAP group",
      "cap": "The LDAP group"
    },
    "azureunified": {
      "cap": "The Microsoft 365 group",
      "main": "the Microsoft 365 group",
      "new": "a new Microsoft 365 group"
    },
    "ad": {
      "new": "a new AD group",
      "main": "the AD group",
      "cap": "The AD group"
    },
    "azurerole": {
      "new": "a new Azure directory role",
      "main": "the Azure directory role",
      "cap": "The Azure directory role"
    },
    "scim": {
      "cap": "The SCIM group",
      "main": "the SCIM group",
      "new": "a new SCIM group"
    },
    "azuresecurity": {
      "new": "a new Azure security group",
      "main": "the Azure security group",
      "cap": "The Azure security group"
    },
    "accountonly": {
      "main": " ",
      "new": " ",
      "display": "Account-only provisioning",
      "cap": " "
    }
  },
  "serviceaccount": {
    "group": {
      "header": "Group on a service account",
      "subtitle": "The service account {0} has access to the named group on {1}."
    },
    "search": {
      "serviceaccounts": "Search in service accounts",
      "technicaladministrator": "Administered by..."
    },
    "header": "Service account"
  },
  "groupaudit": {
    "savedraft": "Save as draft",
    "review": {
      "rejected": "The audit of {0} has been rejected.",
      "approved": "The audit of {0} has been approved."
    },
    "header": {
      "members": "Members",
      "managers": "Managers",
      "groupname": "Name",
      "vaultsrecords": "Vault records",
      "lastauditdate": "Last audit",
      "classification": "Classification",
      "auditduedate": "Next audit"
    },
    "bulkmode": {
      "draft": {
        "statuschanged": "This draft has either been submitted recently and/or is currently under review.",
        "newlycreated": "The audit could not be saved. A draft audit exists for this group or an existing audit is in review."
      },
      "skipped": "Skipped group audit for {0}.",
      "finished": "Completed all open group audits."
    },
    "main": "Group audit"
  },
  "identitysource": {
    "header": {
      "afas": "AFAS identity source"
    }
  },
  "notificationcentre": {
    "header": "Notification settings"
  },
  "2fa": {
    "totp": {
      "verification": {
        "long": "Verify your 2FA with the given code",
        "secret": "Key",
        "main": "Verification code"
      },
      "invalidcode": "The given verification code is incorrect. Check your mobile's time settings, re-scan the QR-code and try again.",
      "appgekoppeld": "You scanned the QR-code with the KeyHub app. Check the device name and press activate to enable 2FA.",
      "subtitle": "Scan the QR-code with the KeyHub app or any other app with TOTP support or enter the key manually in the app.",
      "offsetchange": {
        "secondtoken": "Next verification code",
        "firsttoken": "Current verification code"
      },
      "scan": "Scan the QR-code with the KeyHub app or any other app with TOTP support or enter the key manually in the app: {0}"
    },
    "webauthn": {
      "subtitle": "Use your security key to register it for your account.",
      "editkey": {
        "subtitle": "Give your security key a different name.",
        "title": "Security key"
      },
      "register": {
        "error": "Something went wrong. Did you wait too long or are you trying to register the same security key twice?",
        "success": "Security key successfully registered"
      },
      "authenticate": {
        "error": "Something went wrong. Are you using the right security key? Did you touch it to activate it?"
      }
    },
    "denied": "Your two-factor authentication is cancelled.",
    "header": "Configure two-factor authentication",
    "switchToApp": "Use a 2FA app",
    "switchToSecurityKey": "Use a security key"
  },
  "attributedefinition": {
    "unique": "unique",
    "search": "Search attribute definitions...",
    "list": "list",
    "required": "required",
    "header": "Account attribute definition - {0}"
  },
  "validatie": {
    "fileTooLarge": "{0} is larger than {1}Kb",
    "error": "Validation error",
    "controleer": {
      "labels": "Check the incorrect fields: {0}",
      "main": "Check the incorrect fields."
    }
  },
  "browser": {
    "unknown": "Unknown"
  },
  "apporsystem": {
    "add": {
      "main": "Add linked system or application",
      "subtitle": "Choose the type for the new linked system or application."
    }
  },
  "IpAdresValidator": {
    "dns": "{line} is not a valid IPv4 address.",
    "main": "{input} is not a valid IPv4 address."
  },
  "launchpad": {
    "tile": {
      "title": "Launchpad tile",
      "vaultRecord": "Vault record",
      "enable": "Show as tile on the launchpad",
      "subtitle": "Enter the properties for the launchpad tile.",
      "add": "Add tile",
      "edit": "Click on the logo to edit.",
      "application": "Application"
    },
    "filter": {
      "group": "Select a group..."
    }
  },
  "directory": {
    "ldap": {
      "defaultfilter": "Default filter",
      "header": "LDAP directory - {0}",
      "customfilter": "Custom filter"
    },
    "toevoegen": {
      "main": "Add directory",
      "subtitle": "Choose the type for the new directory."
    },
    "oidc": {
      "header": "OIDC directory - {0}"
    },
    "internal": {
      "header": "Internal directory - {0}"
    }
  },
  "settings": {
    "wipevaultrecovery": {
      "confirm": "I am sure"
    },
    "header": "Global settings"
  },
  "IConverter": {
    "ScheduleExpression": "'{value}' is not a valid cron expression.",
    "Period": "'{value}' is not a valid duration.",
    "LocalDate": "'{label}' is not a valid date",
    "Duration": "'{value}' is not a valid duration."
  },
  "about": {
    "updatelicense": {
      "sent": "The request to enter a new license has been sent.",
      "changevia": "{1} via {0}",
      "saved": "The license has been updated.",
      "explain": "Upload the new license file.",
      "main": "Update license",
      "reason": "Making the license change requires disabling functionality. Provide a reason for the change here."
    },
    "header": {
      "about": "About Topicus KeyHub",
      "statistics": {
        "activeusers": "Active users",
        "overtime": "Usage over time",
        "now": "Now"
      },
      "license": {
        "conditions": "License conditions"
      }
    },
    "activeusers": {
      "y-axis": "Users",
      "x-axis": "Date"
    },
    "unlimited": "Unlimited"
  },
  "KeyHubCertificateValidator": {
    "trust": {
      "minion": "The certificate of node {0} is not trusted by the given CA bundle. Add the certificate used for signing to the bundle.",
      "main": "The certificate is not trusted by the given CA bundle. Add the certificate used for signing to the bundle."
    },
    "format": {
      "main": "Invalid PEM file. The file is of incorrect format.",
      "minion": "Invalid PEM file for the certificate of node {0}. The file is of incorrect format."
    },
    "weakAlg": {
      "main": "The certificate is signed with a weak algorithm. Use SHA256 or higher.",
      "minion": "The certificate of node {0} is signed with a weak algorithm. Use SHA256 or higher."
    },
    "expired": {
      "main": "The certificate has expired.",
      "minion": "The certificate of node {0} has expired."
    },
    "san": {
      "main": "The certificate does not define Subject Alternative Names. This is required by web browsers.",
      "minion": "The certificate of node {0} does not define Subject Alternative Names. This is required by web browsers."
    }
  },
  "CertificateBundleValidator": {
    "fileEmpty": "Invalid PEM file. The file is empty.",
    "filesizeTooLarge": "Invalid PEM file. The file is too large.",
    "invalidPublicKeyFile": "Invalid PEM file. The file is of incorrect format."
  },
  "groupauditaccount": {
    "comment": {
      "placeholder": "Comments for this account"
    }
  },
  "system": {
    "internal": {
      "header": "Internal LDAP - {0}"
    },
    "synclog": {
      "header": "Synchronisation log {0}"
    },
    "azure": {
      "header": "Linked Azure tenant - {0}"
    },
    "azuresyncdirectory": {
      "header": "Linked Azure tenant with AD Connect - {0}"
    },
    "ad": {
      "header": "Linked Active Directory - {0}"
    },
    "ldap": {
      "header": "Linked LDAP - {0}"
    },
    "namespace": {
      "header": "Provisioned namespace - {0}"
    },
    "ldapdirectory": {
      "header": "Linked source directory - {0}"
    },
    "scim": {
      "header": "Linked SCIM server - {0}"
    },
    "azureoidcdirectory": {
      "header": "Linked Azure OIDC source directory - {0}"
    }
  },
  "javax": {
    "validation": {
      "constraints": {
        "Max": {
          "message": "'{label}' must be less than or equal to {value}"
        },
        "NotEmpty": {
          "message": "'{label}' may not be empty"
        },
        "Min": {
          "message": "'{label}' must be greater than or equal to {value}"
        },
        "Size": {
          "message": {
            "String": "'{label}' length must be between {min} and {max}",
            "main": "'{label}' must be between {min} and {max}"
          }
        }
      }
    }
  },
  "PrivateKeyFileValidator": {
    "filesizeTooLarge": "Invalid PEM file. The file is too large.",
    "invalidPrivateKeyFile": "Invalid PEM file. The file is of incorrect format.",
    "fileEmpty": "Invalid PEM file. The file is empty.",
    "passwordRequired": "The private key is encrypted with a password."
  },
  "EmptyFileValidator": {
    "empty": "The file cannot be empty."
  },
  "SshKeyValidator": {
    "tooshort": "Invalid public key. The data part could not be read or is too short.",
    "invalidcontent": "Invalid public key. The data part does not start with the correct header.",
    "invalidheader": "Invalid public key. The value must start with 'ssh-rsa', 'ecdsa-sha2-nistp256', 'ssh-ed25519' or 'ssh-dss'."
  },
  "PublicKeyFileValidator": {
    "fileEmpty": "Invalid PEM file. The file is empty.",
    "invalidPublicKeyFile": "Invalid PEM file. The file is of incorrect format.",
    "filesizeTooLarge": "Invalid PEM file. The file is too large."
  },
  "nee": "No",
  "dashboard": {
    "provisioning": {
      "unfold": {
        "tooltip": "Unfold"
      }
    },
    "groups": "Groups",
    "quicksearch": {
      "title": {
        "groups": "Search vault records and groups",
        "main": "Search vault records"
      }
    }
  },
  "ScheduleExpressionValidator": {
    "invalidScheduleExpression": "Invalid schedule expression. Error message: {error}"
  },
  "auditrecord": {
    "header": {
      "date": "Date"
    }
  },
  "datetime": {
    "overmorgen": "the day after tomorrow",
    "vandaag": "today",
    "eergisteren": "the day before yesterday",
    "concat": "{0} at {1}",
    "gisteren": "yesterday",
    "morgen": "tomorrow"
  },
  "filter": {
    "system": "System",
    "overig": "Other",
    "keyhub": "KeyHub",
    "alles": "All"
  },
  "profiles": {
    "selected": "# scope(s) selected",
    "noneSelected": "No scopes selected"
  },
  "ExternalUrlValidator": {
    "path": "The URL must not contain a path (nor end with a '/').",
    "scheme": "The URL must start with 'https://'.",
    "ip": "The host cannot be an IP address."
  },
  "password": {
    "capslock": {
      "warning": "Caps lock is on"
    }
  },
  "persistentlogin": {
    "terminateothers": {
      "hover": "Logout all sessions but the current",
      "main": "Logout all"
    },
    "actievesessies": "Active sessions",
    "ipadres": "IP address",
    "laatstgebruikt": "Last use",
    "vanaf": "Since {0}",
    "active": "This is your current session",
    "terminate": "Terminate this session",
    "locatie": "Location"
  },
  "en": "and",
  "ja": "Yes",
  "KeyValuePairValidator": "{line} is not a valid key-value pair in the form 'key=value'.",
  "BlocklistedValuesValidator": "The value {value} is not allowed for {label}.",
  "auditLogType": {
    "selected": "# type(s) selected",
    "noneSelected": "(All record types)"
  },
  "request": {
    "confirmpopup": {
      "title": "Approve request",
      "subtitle": "Do you want to approve this request?"
    }
  },
  "DerRSAPrivateKeyValidator": {
    "invalidkey": "Invalid RSA private key. Use an RSA private key in DER-encoding."
  },
  "IPPortListValidator": "{port} is not a valid port in the range 1-65535.",
  "OAuth2UriValidator": {
    "uri": "'{line}' is not a valid absolute URL.",
    "wildcard": "'{line}' contains an invalid wildcard. Use '{a-b}' with 'a' greater than 0 and less than 'b'.",
    "portrange": "'{line}' contains an invalid port range. Use '[a-b]' with 'a' less than 'b'."
  },
  "UsernameValidator": "The characters '@', '/' and '\\' are not allowed in your username. Topicus KeyHub expects a username without domain.",
  "invoer": {
    "optioneel": "optional"
  },
  "beyonddatapanel": {
    "message": {
      "geenResultaten": "No results found"
    }
  },
  "PasswordGeneratorStrategyValidator": "The specified value is not a valid definition for a password generator.",
  "vaultquicksearch": {
    "showall": "Show results in vaults"
  },
  "PeriodDayValidator": {
    "minimum": "The value of '{label}' must be at least {minimum} days."
  },
  "JavaUrlValidator": {
    "port": "It is mandatory to explicitly specify a port."
  },
  "ExposedPortsAndSourcesValidator": {
    "ipmissing": "The specified ports will not be available without an IP whitelist."
  },
  "FirewallWhitelistValidator": "{line} is not a valid IP range in CIDR notation (A.B.C.D/R)."
}